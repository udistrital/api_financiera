{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/acta_devolucion/": {
            "get": {
                "tags": [
                    "acta_devolucion"
                ],
                "description": "get ActaDevolucion",
                "operationId": "ActaDevolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ActaDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "acta_devolucion"
                ],
                "description": "create ActaDevolucion",
                "operationId": "ActaDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActaDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActaDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ActaDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/acta_devolucion/{id}": {
            "get": {
                "tags": [
                    "acta_devolucion"
                ],
                "description": "get ActaDevolucion by id",
                "operationId": "ActaDevolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ActaDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "acta_devolucion"
                ],
                "description": "update the ActaDevolucion",
                "operationId": "ActaDevolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActaDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActaDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ActaDevolucion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "acta_devolucion"
                ],
                "description": "delete the ActaDevolucion",
                "operationId": "ActaDevolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/acta_inversion/": {
            "get": {
                "tags": [
                    "acta_inversion"
                ],
                "description": "get ActaInversion",
                "operationId": "ActaInversionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ActaInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "acta_inversion"
                ],
                "description": "create ActaInversion",
                "operationId": "ActaInversionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActaInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActaInversion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ActaInversion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/acta_inversion/{id}": {
            "get": {
                "tags": [
                    "acta_inversion"
                ],
                "description": "get ActaInversion by id",
                "operationId": "ActaInversionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ActaInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "acta_inversion"
                ],
                "description": "update the ActaInversion",
                "operationId": "ActaInversionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActaInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActaInversion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ActaInversion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "acta_inversion"
                ],
                "description": "delete the ActaInversion",
                "operationId": "ActaInversionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/afectacion_concepto/": {
            "get": {
                "tags": [
                    "afectacion_concepto"
                ],
                "description": "get AfectacionConcepto",
                "operationId": "AfectacionConceptoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AfectacionConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "afectacion_concepto"
                ],
                "description": "create AfectacionConcepto",
                "operationId": "AfectacionConceptoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AfectacionConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AfectacionConcepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AfectacionConcepto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/afectacion_concepto/{id}": {
            "get": {
                "tags": [
                    "afectacion_concepto"
                ],
                "description": "get AfectacionConcepto by id",
                "operationId": "AfectacionConceptoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AfectacionConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "afectacion_concepto"
                ],
                "description": "update the AfectacionConcepto",
                "operationId": "AfectacionConceptoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AfectacionConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AfectacionConcepto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AfectacionConcepto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "afectacion_concepto"
                ],
                "description": "delete the AfectacionConcepto",
                "operationId": "AfectacionConceptoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/anulacion_disponibilidad/": {
            "get": {
                "tags": [
                    "anulacion_disponibilidad"
                ],
                "description": "get AnulacionDisponibilidad",
                "operationId": "AnulacionDisponibilidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionDisponibilidad"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "anulacion_disponibilidad"
                ],
                "description": "create AnulacionDisponibilidad",
                "operationId": "AnulacionDisponibilidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AnulacionDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AnulacionDisponibilidad"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/anulacion_disponibilidad/TotalAnulacionDisponibilidad/{vigencia}": {
            "get": {
                "tags": [
                    "anulacion_disponibilidad"
                ],
                "description": "numero de dispònibilidades segun vigencia o rango de fechas",
                "operationId": "AnulacionDisponibilidadController.TotalAnulacionDisponibilidad",
                "parameters": [
                    {
                        "in": "query",
                        "name": "vigencia",
                        "description": "vigencia para la consulta del total de disponibilidades",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "UnidadEjecutora",
                        "description": "unidad ejecutora de las solicitudes a consultar",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "rangoinicio",
                        "description": "opcional, fecha inicio de consulta de cdp",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "rangofin",
                        "description": "opcional, fecha fin de consulta de cdp",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} total"
                    },
                    "403": {
                        "description": "vigencia is empty"
                    }
                }
            }
        },
        "/anulacion_disponibilidad/{id}": {
            "get": {
                "tags": [
                    "anulacion_disponibilidad"
                ],
                "description": "get AnulacionDisponibilidad by id",
                "operationId": "AnulacionDisponibilidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionDisponibilidad"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "anulacion_disponibilidad"
                ],
                "description": "update the AnulacionDisponibilidad",
                "operationId": "AnulacionDisponibilidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AnulacionDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionDisponibilidad"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "anulacion_disponibilidad"
                ],
                "description": "delete the AnulacionDisponibilidad",
                "operationId": "AnulacionDisponibilidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/anulacion_disponibilidad_apropiacion/": {
            "get": {
                "tags": [
                    "anulacion_disponibilidad_apropiacion"
                ],
                "description": "get AnulacionDisponibilidadApropiacion",
                "operationId": "AnulacionDisponibilidadApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionDisponibilidadApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "anulacion_disponibilidad_apropiacion"
                ],
                "description": "create AnulacionDisponibilidadApropiacion",
                "operationId": "AnulacionDisponibilidadApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AnulacionDisponibilidadApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionDisponibilidadApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AnulacionDisponibilidadApropiacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/anulacion_disponibilidad_apropiacion/{id}": {
            "get": {
                "tags": [
                    "anulacion_disponibilidad_apropiacion"
                ],
                "description": "get AnulacionDisponibilidadApropiacion by id",
                "operationId": "AnulacionDisponibilidadApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionDisponibilidadApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "anulacion_disponibilidad_apropiacion"
                ],
                "description": "update the AnulacionDisponibilidadApropiacion",
                "operationId": "AnulacionDisponibilidadApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AnulacionDisponibilidadApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionDisponibilidadApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionDisponibilidadApropiacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "anulacion_disponibilidad_apropiacion"
                ],
                "description": "delete the AnulacionDisponibilidadApropiacion",
                "operationId": "AnulacionDisponibilidadApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/anulacion_registro_presupuestal/": {
            "get": {
                "tags": [
                    "anulacion_registro_presupuestal"
                ],
                "description": "get AnulacionRegistroPresupuestal",
                "operationId": "AnulacionRegistroPresupuestalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionRegistroPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "anulacion_registro_presupuestal"
                ],
                "description": "create AnulacionRegistroPresupuestal",
                "operationId": "AnulacionRegistroPresupuestalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AnulacionRegistroPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionRegistroPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AnulacionRegistroPresupuestal"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/anulacion_registro_presupuestal/TotalAnulacionRegistroPresupuestal/{vigencia}": {
            "get": {
                "tags": [
                    "anulacion_registro_presupuestal"
                ],
                "description": "numero de dispònibilidades segun vigencia o rango de fechas",
                "operationId": "AnulacionRegistroPresupuestalController.TotalAnulacionRegistroPresupuestal",
                "parameters": [
                    {
                        "in": "query",
                        "name": "vigencia",
                        "description": "vigencia para la consulta del total de disponibilidades",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "UnidadEjecutora",
                        "description": "unidad ejecutora de las solicitudes a consultar",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "rangoinicio",
                        "description": "opcional, fecha inicio de consulta de cdp",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "rangofin",
                        "description": "opcional, fecha fin de consulta de cdp",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} total"
                    },
                    "403": {
                        "description": "vigencia is empty"
                    }
                }
            }
        },
        "/anulacion_registro_presupuestal/{id}": {
            "get": {
                "tags": [
                    "anulacion_registro_presupuestal"
                ],
                "description": "get AnulacionRegistroPresupuestal by id",
                "operationId": "AnulacionRegistroPresupuestalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionRegistroPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "anulacion_registro_presupuestal"
                ],
                "description": "update the AnulacionRegistroPresupuestal",
                "operationId": "AnulacionRegistroPresupuestalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AnulacionRegistroPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionRegistroPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionRegistroPresupuestal"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "anulacion_registro_presupuestal"
                ],
                "description": "delete the AnulacionRegistroPresupuestal",
                "operationId": "AnulacionRegistroPresupuestalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/anulacion_registro_presupuestal_disponibilidad_apropiacion/": {
            "get": {
                "tags": [
                    "anulacion_registro_presupuestal_disponibilidad_apropiacion"
                ],
                "description": "get AnulacionRegistroPresupuestalDisponibilidadApropiacion",
                "operationId": "AnulacionRegistroPresupuestalDisponibilidadApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionRegistroPresupuestalDisponibilidadApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "anulacion_registro_presupuestal_disponibilidad_apropiacion"
                ],
                "description": "create AnulacionRegistroPresupuestalDisponibilidadApropiacion",
                "operationId": "AnulacionRegistroPresupuestalDisponibilidadApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AnulacionRegistroPresupuestalDisponibilidadApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionRegistroPresupuestalDisponibilidadApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AnulacionRegistroPresupuestalDisponibilidadApropiacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/anulacion_registro_presupuestal_disponibilidad_apropiacion/{id}": {
            "get": {
                "tags": [
                    "anulacion_registro_presupuestal_disponibilidad_apropiacion"
                ],
                "description": "get AnulacionRegistroPresupuestalDisponibilidadApropiacion by id",
                "operationId": "AnulacionRegistroPresupuestalDisponibilidadApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionRegistroPresupuestalDisponibilidadApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "anulacion_registro_presupuestal_disponibilidad_apropiacion"
                ],
                "description": "update the AnulacionRegistroPresupuestalDisponibilidadApropiacion",
                "operationId": "AnulacionRegistroPresupuestalDisponibilidadApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AnulacionRegistroPresupuestalDisponibilidadApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionRegistroPresupuestalDisponibilidadApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionRegistroPresupuestalDisponibilidadApropiacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "anulacion_registro_presupuestal_disponibilidad_apropiacion"
                ],
                "description": "delete the AnulacionRegistroPresupuestalDisponibilidadApropiacion",
                "operationId": "AnulacionRegistroPresupuestalDisponibilidadApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/anulacion_reserva/": {
            "get": {
                "tags": [
                    "anulacion_reserva"
                ],
                "description": "get AnulacionReserva",
                "operationId": "AnulacionReservaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionReserva"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "anulacion_reserva"
                ],
                "description": "create AnulacionReserva",
                "operationId": "AnulacionReservaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AnulacionReserva content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionReserva"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AnulacionReserva"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/anulacion_reserva/{id}": {
            "get": {
                "tags": [
                    "anulacion_reserva"
                ],
                "description": "get AnulacionReserva by id",
                "operationId": "AnulacionReservaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionReserva"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "anulacion_reserva"
                ],
                "description": "update the AnulacionReserva",
                "operationId": "AnulacionReservaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AnulacionReserva content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionReserva"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionReserva"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "anulacion_reserva"
                ],
                "description": "delete the AnulacionReserva",
                "operationId": "AnulacionReservaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/apropiacion/": {
            "get": {
                "tags": [
                    "apropiacion"
                ],
                "description": "get Apropiacion",
                "operationId": "ApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Apropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "apropiacion"
                ],
                "description": "create Apropiacion",
                "operationId": "ApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Apropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Apropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Apropiacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/apropiacion/AprobacionAsignacionInicial/": {
            "get": {
                "tags": [
                    "apropiacion"
                ],
                "description": "aprueba la asignacion inicial de presupuesto",
                "operationId": "ApropiacionController.AprobarPresupuesto",
                "parameters": [
                    {
                        "in": "query",
                        "name": "Vigencia",
                        "description": "vigencia a comprobar",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "UnidadEjecutora",
                        "description": "unidad ejecutora de los rubros a comprobar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} resultado"
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/apropiacion/ArbolApropiaciones/{vigencia}": {
            "get": {
                "tags": [
                    "apropiacion"
                ],
                "description": "genera arbol apropiaciones",
                "operationId": "ApropiacionController.ArbolApropiaciones",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "403": {
                        "description": ":vigencia is empty"
                    }
                }
            }
        },
        "/apropiacion/GetApropiacionesHijo/{vigencia}": {
            "get": {
                "tags": [
                    "apropiacion"
                ],
                "description": "get Apropiaciones Hijo",
                "operationId": "ApropiacionController.Get Apropiaciones Hijo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "vigencia filtro de las apropiaciones hijo",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tipo",
                        "description": "tipo del rubro",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Apropiacion"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/apropiacion/SaldoApropiacion/{id}": {
            "get": {
                "tags": [
                    "apropiacion"
                ],
                "description": "Get Saldo Apropiacion By Id",
                "operationId": "ApropiacionController.Get Saldo Apropiacion By Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Id",
                        "description": "Id de la apropiacion",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/apropiacion/SaldoApropiacionPadre/{id}": {
            "get": {
                "tags": [
                    "apropiacion"
                ],
                "description": "Get Saldo Apropiacion By Id",
                "operationId": "ApropiacionController.Get Saldo Apropiacion By Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Id",
                        "description": "Id del rubro padre",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "UnidadEjecutora",
                        "description": "Unidad Ejecutora de los rubros hijo",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Vigencia",
                        "description": "Vigencia de las apropiaciones a consultar",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/apropiacion/UpdateApropiacionValue/{id}/{valor}": {
            "put": {
                "tags": [
                    "apropiacion"
                ],
                "description": "Obtiene todas las vigencias no repetidas de las apropiaciones",
                "operationId": "ApropiacionController.UpdateApropiacionValue",
                "responses": {
                    "200": {
                        "description": "{string} resultado"
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/apropiacion/VigenciaApropiaciones": {
            "get": {
                "tags": [
                    "apropiacion"
                ],
                "description": "Obtiene todas las vigencias no repetidas de las apropiaciones",
                "operationId": "ApropiacionController.VigenciaApropiaciones",
                "responses": {
                    "200": {
                        "description": "{string} resultado"
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/apropiacion/{id}": {
            "get": {
                "tags": [
                    "apropiacion"
                ],
                "description": "get Apropiacion by id",
                "operationId": "ApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Apropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "apropiacion"
                ],
                "description": "update the Apropiacion",
                "operationId": "ApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Apropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Apropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Apropiacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "apropiacion"
                ],
                "description": "delete the Apropiacion",
                "operationId": "ApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/arbol_conceptos/": {
            "get": {
                "tags": [
                    "arbol_conceptos"
                ],
                "description": "get Arbol of Conceptos",
                "operationId": "ArbolConceptosController.MakeTree",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoConcepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MakeTreeConcepto"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/arbol_plan_cuentas/{idCuenta}/{idPlan}": {
            "delete": {
                "tags": [
                    "arbol_plan_cuentas"
                ],
                "description": "Elimina una rama del plan",
                "operationId": "ArbolPlanCuentasController.DeleteBranchPlan",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idCuenta",
                        "description": "Id de la cuenta",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "idPlan",
                        "description": "Id del plan",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "idCuenta or idPlan is empty"
                    }
                }
            }
        },
        "/arbol_plan_cuentas/{idPlan}": {
            "post": {
                "tags": [
                    "arbol_plan_cuentas"
                ],
                "description": "create Rama arbol plan",
                "operationId": "ArbolPlanCuentasController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CategoriaIva content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CategoriaIva"
                        }
                    },
                    {
                        "in": "path",
                        "name": "idPlan",
                        "description": "Id del plan",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CategoriaIva"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/arbol_plan_cuentas/{id}": {
            "get": {
                "tags": [
                    "arbol_plan_cuentas"
                ],
                "description": "construye y muestra la estructura de cuentas en un plan de cuentas",
                "operationId": "ArbolPlanCuentasController.MakeTreeCuentas",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id del plan de cuentas a construirse",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ArbolPlanCuentas"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/avance_estado_avance/": {
            "get": {
                "tags": [
                    "avance_estado_avance"
                ],
                "description": "get AvanceEstadoAvance",
                "operationId": "AvanceEstadoAvanceController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceEstadoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "avance_estado_avance"
                ],
                "description": "create AvanceEstadoAvance",
                "operationId": "AvanceEstadoAvanceController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AvanceEstadoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvanceEstadoAvance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AvanceEstadoAvance"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/avance_estado_avance/{id}": {
            "get": {
                "tags": [
                    "avance_estado_avance"
                ],
                "description": "get AvanceEstadoAvance by id",
                "operationId": "AvanceEstadoAvanceController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceEstadoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "avance_estado_avance"
                ],
                "description": "update the AvanceEstadoAvance",
                "operationId": "AvanceEstadoAvanceController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AvanceEstadoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvanceEstadoAvance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceEstadoAvance"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "avance_estado_avance"
                ],
                "description": "delete the AvanceEstadoAvance",
                "operationId": "AvanceEstadoAvanceController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/avance_legalizacion/": {
            "get": {
                "tags": [
                    "avance_legalizacion"
                ],
                "description": "get AvanceLegalizacion",
                "operationId": "AvanceLegalizacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "avance_legalizacion"
                ],
                "description": "create AvanceLegalizacion",
                "operationId": "AvanceLegalizacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AvanceLegalizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AvanceLegalizacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/avance_legalizacion/GetLegalizacionRecordsNumber/": {
            "get": {
                "tags": [
                    "avance_legalizacion"
                ],
                "description": "get DevolucionTributaria",
                "operationId": "AvanceLegalizacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributaria"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/avance_legalizacion/{id}": {
            "get": {
                "tags": [
                    "avance_legalizacion"
                ],
                "description": "get AvanceLegalizacion by id",
                "operationId": "AvanceLegalizacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "avance_legalizacion"
                ],
                "description": "update the AvanceLegalizacion",
                "operationId": "AvanceLegalizacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AvanceLegalizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "avance_legalizacion"
                ],
                "description": "delete the AvanceLegalizacion",
                "operationId": "AvanceLegalizacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/avance_legalizacion_cuenta_especial/": {
            "get": {
                "tags": [
                    "avance_legalizacion_cuenta_especial"
                ],
                "description": "get AvanceLegalizacionCuentaEspecial",
                "operationId": "AvanceLegalizacionCuentaEspecialController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionCuentaEspecial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "avance_legalizacion_cuenta_especial"
                ],
                "description": "create AvanceLegalizacionCuentaEspecial",
                "operationId": "AvanceLegalizacionCuentaEspecialController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AvanceLegalizacionCuentaEspecial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionCuentaEspecial"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AvanceLegalizacionCuentaEspecial"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/avance_legalizacion_cuenta_especial/{id}": {
            "get": {
                "tags": [
                    "avance_legalizacion_cuenta_especial"
                ],
                "description": "get AvanceLegalizacionCuentaEspecial by id",
                "operationId": "AvanceLegalizacionCuentaEspecialController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionCuentaEspecial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "avance_legalizacion_cuenta_especial"
                ],
                "description": "update the AvanceLegalizacionCuentaEspecial",
                "operationId": "AvanceLegalizacionCuentaEspecialController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AvanceLegalizacionCuentaEspecial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionCuentaEspecial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionCuentaEspecial"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "avance_legalizacion_cuenta_especial"
                ],
                "description": "delete the AvanceLegalizacionCuentaEspecial",
                "operationId": "AvanceLegalizacionCuentaEspecialController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/avance_legalizacion_sub_tipo/": {
            "get": {
                "tags": [
                    "avance_legalizacion_sub_tipo"
                ],
                "description": "get AvanceLegalizacionSubTipo",
                "operationId": "AvanceLegalizacionSubTipoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionSubTipo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "avance_legalizacion_sub_tipo"
                ],
                "description": "create AvanceLegalizacionSubTipo",
                "operationId": "AvanceLegalizacionSubTipoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AvanceLegalizacionSubTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionSubTipo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AvanceLegalizacionSubTipo"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/avance_legalizacion_sub_tipo/{id}": {
            "get": {
                "tags": [
                    "avance_legalizacion_sub_tipo"
                ],
                "description": "get AvanceLegalizacionSubTipo by id",
                "operationId": "AvanceLegalizacionSubTipoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionSubTipo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "avance_legalizacion_sub_tipo"
                ],
                "description": "update the AvanceLegalizacionSubTipo",
                "operationId": "AvanceLegalizacionSubTipoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AvanceLegalizacionSubTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionSubTipo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionSubTipo"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "avance_legalizacion_sub_tipo"
                ],
                "description": "delete the AvanceLegalizacionSubTipo",
                "operationId": "AvanceLegalizacionSubTipoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/avance_legalizacion_tipo/": {
            "get": {
                "tags": [
                    "avance_legalizacion_tipo"
                ],
                "description": "get AvanceLegalizacionTipo",
                "operationId": "AvanceLegalizacionTipoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionTipo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "avance_legalizacion_tipo"
                ],
                "description": "update the AvanceLegalizacionTipo",
                "operationId": "AvanceLegalizacionTipoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AvanceLegalizacionTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionTipo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionTipo"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            },
            "post": {
                "tags": [
                    "avance_legalizacion_tipo"
                ],
                "description": "create AvanceLegalizacionTipo",
                "operationId": "AvanceLegalizacionTipoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AvanceLegalizacionTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionTipo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AvanceLegalizacionTipo"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/avance_legalizacion_tipo/AddEntireAvanceLegalizacionTipo": {
            "post": {
                "tags": [
                    "avance_legalizacion_tipo"
                ],
                "description": "create AvanceLegalizacion",
                "operationId": "AvanceLegalizacionTipoController.AddAvanceLegalizacionTipo",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AvanceLegalizacionTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionTipo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AvanceLegalizacionTipo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/avance_legalizacion_tipo/GetLegalizationValue/{id}": {
            "get": {
                "tags": [
                    "avance_legalizacion_tipo"
                ],
                "description": "get sum from all legalization advance payment including refunds",
                "operationId": "AvanceLegalizacionTipoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/avance_legalizacion_tipo/GetTaxesMovsLegalization": {
            "get": {
                "tags": [
                    "avance_legalizacion_tipo"
                ],
                "description": "get taxes and movs for legalizationTipo given an id",
                "operationId": "AvanceLegalizacionTipoController.GetTaxesLegalization",
                "parameters": [
                    {
                        "in": "query",
                        "name": "noTipoDoc",
                        "description": "param for TipoDocumentoAfectante",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "idLegTipo",
                        "description": "param for id legalizacion table",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Legalizacion_avance"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/avance_legalizacion_tipo/{id}": {
            "get": {
                "tags": [
                    "avance_legalizacion_tipo"
                ],
                "description": "get AvanceLegalizacionTipo by id",
                "operationId": "AvanceLegalizacionTipoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionTipo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "avance_legalizacion_tipo"
                ],
                "description": "update the AvanceLegalizacionTipo",
                "operationId": "AvanceLegalizacionTipoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AvanceLegalizacionTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionTipo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AvanceLegalizacionTipo"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "avance_legalizacion_tipo"
                ],
                "description": "delete the AvanceLegalizacionTipo",
                "operationId": "AvanceLegalizacionTipoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/calendario_tributario/": {
            "get": {
                "tags": [
                    "calendario_tributario"
                ],
                "description": "get CalendarioTributario",
                "operationId": "CalendarioTributarioController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CalendarioTributario"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "calendario_tributario"
                ],
                "description": "create CalendarioTributario",
                "operationId": "CalendarioTributarioController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CalendarioTributario content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CalendarioTributario"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CalendarioTributario"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/calendario_tributario/movimientos/{id}": {
            "get": {
                "tags": [
                    "calendario_tributario"
                ],
                "description": "get Movimientos del CalendarioTributario by id",
                "operationId": "CalendarioTributarioController.GetMovimientos",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/interface"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/calendario_tributario/{id}": {
            "get": {
                "tags": [
                    "calendario_tributario"
                ],
                "description": "get CalendarioTributario by id",
                "operationId": "CalendarioTributarioController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CalendarioTributario"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "calendario_tributario"
                ],
                "description": "update the CalendarioTributario",
                "operationId": "CalendarioTributarioController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CalendarioTributario content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CalendarioTributario"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CalendarioTributario"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "calendario_tributario"
                ],
                "description": "delete the CalendarioTributario",
                "operationId": "CalendarioTributarioController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cancelacion_inversion/": {
            "get": {
                "tags": [
                    "cancelacion_inversion"
                ],
                "description": "get CancelacionInversion",
                "operationId": "CancelacionInversionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "cancelacion_inversion"
                ],
                "description": "create CancelacionInversion",
                "operationId": "CancelacionInversionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CancelacionInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CancelacionInversion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/cancelacion_inversion/{id}": {
            "get": {
                "tags": [
                    "cancelacion_inversion"
                ],
                "description": "get CancelacionInversion by id",
                "operationId": "CancelacionInversionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "cancelacion_inversion"
                ],
                "description": "update the CancelacionInversion",
                "operationId": "CancelacionInversionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CancelacionInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cancelacion_inversion"
                ],
                "description": "delete the CancelacionInversion",
                "operationId": "CancelacionInversionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cancelacion_inversionCreateCancelacion/": {
            "post": {
                "tags": [
                    "cancelacion_inversion"
                ],
                "description": "create CancelacionInversion",
                "operationId": "CancelacionInversionController.Create Cancelacion",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CancelacionInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interface{}"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CancelacionInversion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/cancelacion_inversion_concepto/": {
            "get": {
                "tags": [
                    "cancelacion_inversion_concepto"
                ],
                "description": "get CancelacionInversionConcepto",
                "operationId": "CancelacionInversionConceptoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "cancelacion_inversion_concepto"
                ],
                "description": "create CancelacionInversionConcepto",
                "operationId": "CancelacionInversionConceptoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CancelacionInversionConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionConcepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CancelacionInversionConcepto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/cancelacion_inversion_concepto/{id}": {
            "get": {
                "tags": [
                    "cancelacion_inversion_concepto"
                ],
                "description": "get CancelacionInversionConcepto by id",
                "operationId": "CancelacionInversionConceptoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "cancelacion_inversion_concepto"
                ],
                "description": "update the CancelacionInversionConcepto",
                "operationId": "CancelacionInversionConceptoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CancelacionInversionConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionConcepto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionConcepto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cancelacion_inversion_concepto"
                ],
                "description": "delete the CancelacionInversionConcepto",
                "operationId": "CancelacionInversionConceptoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cancelacion_inversion_estado_cancelacion/": {
            "get": {
                "tags": [
                    "cancelacion_inversion_estado_cancelacion"
                ],
                "description": "get CancelacionInversionEstadoCancelacion",
                "operationId": "CancelacionInversionEstadoCancelacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionEstadoCancelacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "cancelacion_inversion_estado_cancelacion"
                ],
                "description": "create CancelacionInversionEstadoCancelacion",
                "operationId": "CancelacionInversionEstadoCancelacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CancelacionInversionEstadoCancelacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionEstadoCancelacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CancelacionInversionEstadoCancelacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/cancelacion_inversion_estado_cancelacion/GetActiveCancelations": {
            "get": {
                "tags": [
                    "cancelacion_inversion_estado_cancelacion"
                ],
                "description": "get CancelacionInversionEstadoCancelacion by id",
                "operationId": "CancelacionInversionEstadoCancelacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idInversion",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionEstadoCancelacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cancelacion_inversion_estado_cancelacion/{id}": {
            "get": {
                "tags": [
                    "cancelacion_inversion_estado_cancelacion"
                ],
                "description": "get CancelacionInversionEstadoCancelacion by id",
                "operationId": "CancelacionInversionEstadoCancelacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionEstadoCancelacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "cancelacion_inversion_estado_cancelacion"
                ],
                "description": "update the CancelacionInversionEstadoCancelacion",
                "operationId": "CancelacionInversionEstadoCancelacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CancelacionInversionEstadoCancelacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionEstadoCancelacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionEstadoCancelacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cancelacion_inversion_estado_cancelacion"
                ],
                "description": "delete the CancelacionInversionEstadoCancelacion",
                "operationId": "CancelacionInversionEstadoCancelacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cancelacion_inversion_estado_cancelacionAddEstadoCancelacionInversion/": {
            "post": {
                "tags": [
                    "cancelacion_inversion_estado_cancelacion"
                ],
                "description": "create AddEstadoCancelacionInversion",
                "operationId": "CancelacionInversionEstadoCancelacionController.Add Estado Cancelacion Inversion",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CancelacionInversionEstadoCancelacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interface{}"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CancelacionInversionEstadoCancelacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/cancelacion_inversion_estado_cancelacionGetCancelationQuantity/": {
            "get": {
                "tags": [
                    "cancelacion_inversion_estado_cancelacion"
                ],
                "description": "get the number of record given a id from cancelation",
                "operationId": "CancelacionInversionEstadoCancelacionController.Get Cancelation Quantity",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/interface{}"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/cancelacion_inversion_inversion/": {
            "get": {
                "tags": [
                    "cancelacion_inversion_inversion"
                ],
                "description": "get CancelacionInversionInversion",
                "operationId": "CancelacionInversionInversionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "cancelacion_inversion_inversion"
                ],
                "description": "create CancelacionInversionInversion",
                "operationId": "CancelacionInversionInversionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CancelacionInversionInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionInversion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CancelacionInversionInversion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/cancelacion_inversion_inversion/{id}": {
            "get": {
                "tags": [
                    "cancelacion_inversion_inversion"
                ],
                "description": "get CancelacionInversionInversion by id",
                "operationId": "CancelacionInversionInversionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "cancelacion_inversion_inversion"
                ],
                "description": "update the CancelacionInversionInversion",
                "operationId": "CancelacionInversionInversionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CancelacionInversionInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionInversion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CancelacionInversionInversion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cancelacion_inversion_inversion"
                ],
                "description": "delete the CancelacionInversionInversion",
                "operationId": "CancelacionInversionInversionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/categoria_compromiso/": {
            "get": {
                "tags": [
                    "categoria_compromiso"
                ],
                "description": "get CategoriaCompromiso",
                "operationId": "CategoriaCompromisoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CategoriaCompromiso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "categoria_compromiso"
                ],
                "description": "create CategoriaCompromiso",
                "operationId": "CategoriaCompromisoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CategoriaCompromiso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CategoriaCompromiso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CategoriaCompromiso"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/categoria_compromiso/{id}": {
            "get": {
                "tags": [
                    "categoria_compromiso"
                ],
                "description": "get CategoriaCompromiso by id",
                "operationId": "CategoriaCompromisoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CategoriaCompromiso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "categoria_compromiso"
                ],
                "description": "update the CategoriaCompromiso",
                "operationId": "CategoriaCompromisoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CategoriaCompromiso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CategoriaCompromiso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CategoriaCompromiso"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "categoria_compromiso"
                ],
                "description": "delete the CategoriaCompromiso",
                "operationId": "CategoriaCompromisoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/causal_reintegro/": {
            "get": {
                "tags": [
                    "causal_reintegro"
                ],
                "description": "get CausalReintegro",
                "operationId": "CausalReintegroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CausalReintegro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "causal_reintegro"
                ],
                "description": "create CausalReintegro",
                "operationId": "CausalReintegroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CausalReintegro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CausalReintegro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CausalReintegro"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/causal_reintegro/{id}": {
            "get": {
                "tags": [
                    "causal_reintegro"
                ],
                "description": "get CausalReintegro by id",
                "operationId": "CausalReintegroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CausalReintegro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "causal_reintegro"
                ],
                "description": "update the CausalReintegro",
                "operationId": "CausalReintegroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CausalReintegro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CausalReintegro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CausalReintegro"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "causal_reintegro"
                ],
                "description": "delete the CausalReintegro",
                "operationId": "CausalReintegroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cheque/": {
            "get": {
                "tags": [
                    "cheque"
                ],
                "description": "get Cheque",
                "operationId": "ChequeController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Cheque"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "cheque"
                ],
                "description": "create Cheque",
                "operationId": "ChequeController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Cheque content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Cheque"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Cheque"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/cheque/CreateChequeEstado": {
            "post": {
                "tags": [
                    "cheque"
                ],
                "description": "creates cheque and adds state itself",
                "operationId": "ChequeController.CreateChequeState",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Cheque content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Cheque"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Cheque"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/cheque/GetChequeRecordsNumber/": {
            "get": {
                "tags": [
                    "cheque"
                ],
                "description": "get Cheque",
                "operationId": "ChequeController.GetChequeRecordsNumber",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Cheque"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/cheque/GetChequeSumaOP/{idOP}": {
            "get": {
                "tags": [
                    "cheque"
                ],
                "description": "get Cheque by idOP",
                "operationId": "ChequeController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Cheque"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cheque/GetNextChequeNumber/{idChequera}": {
            "get": {
                "tags": [
                    "cheque"
                ],
                "description": "get number of cheques for chequera",
                "operationId": "ChequeController.Get Consecutivo Cheque",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Cheque"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/cheque/{id}": {
            "get": {
                "tags": [
                    "cheque"
                ],
                "description": "get Cheque by id",
                "operationId": "ChequeController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Cheque"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "cheque"
                ],
                "description": "update the Cheque",
                "operationId": "ChequeController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Cheque content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Cheque"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Cheque"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cheque"
                ],
                "description": "delete the Cheque",
                "operationId": "ChequeController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cheque_estado_cheque/": {
            "get": {
                "tags": [
                    "cheque_estado_cheque"
                ],
                "description": "get ChequeEstadoCheque",
                "operationId": "ChequeEstadoChequeController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ChequeEstadoCheque"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "cheque_estado_cheque"
                ],
                "description": "create ChequeEstadoCheque",
                "operationId": "ChequeEstadoChequeController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ChequeEstadoCheque content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChequeEstadoCheque"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ChequeEstadoCheque"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/cheque_estado_cheque/AddEstadoCheque/": {
            "post": {
                "tags": [
                    "cheque_estado_cheque"
                ],
                "description": "create estate for cheque",
                "operationId": "ChequeEstadoChequeController.AddEstadoCheque",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ChequeraEstadoChequera content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChequeraEstadoChequera"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ChequeraEstadoChequera"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/cheque_estado_cheque/{id}": {
            "get": {
                "tags": [
                    "cheque_estado_cheque"
                ],
                "description": "get ChequeEstadoCheque by id",
                "operationId": "ChequeEstadoChequeController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ChequeEstadoCheque"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "cheque_estado_cheque"
                ],
                "description": "update the ChequeEstadoCheque",
                "operationId": "ChequeEstadoChequeController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ChequeEstadoCheque content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChequeEstadoCheque"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ChequeEstadoCheque"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cheque_estado_cheque"
                ],
                "description": "delete the ChequeEstadoCheque",
                "operationId": "ChequeEstadoChequeController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/chequera/": {
            "get": {
                "tags": [
                    "chequera"
                ],
                "description": "get Chequera",
                "operationId": "ChequeraController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Chequera"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "chequera"
                ],
                "description": "create Chequera",
                "operationId": "ChequeraController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Chequera content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Chequera"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Chequera"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/chequera/CreateChequeraEstado": {
            "post": {
                "tags": [
                    "chequera"
                ],
                "description": "create Chequera and adds state to this",
                "operationId": "ChequeraController.CreateChequeraState",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Chequera content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Chequera"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Chequera"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/chequera/GetChequeraRecordsNumber/": {
            "get": {
                "tags": [
                    "chequera"
                ],
                "description": "get Chequera",
                "operationId": "ChequeraController.GetChequeraRecordsNumber",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Chequera"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/chequera/{id}": {
            "get": {
                "tags": [
                    "chequera"
                ],
                "description": "get Chequera by id",
                "operationId": "ChequeraController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Chequera"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "chequera"
                ],
                "description": "update the Chequera",
                "operationId": "ChequeraController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Chequera content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Chequera"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Chequera"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "chequera"
                ],
                "description": "delete the Chequera",
                "operationId": "ChequeraController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/chequera_estado_chequera/": {
            "get": {
                "tags": [
                    "chequera_estado_chequera"
                ],
                "description": "get ChequeraEstadoChequera",
                "operationId": "ChequeraEstadoChequeraController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ChequeraEstadoChequera"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "chequera_estado_chequera"
                ],
                "description": "create ChequeraEstadoChequera",
                "operationId": "ChequeraEstadoChequeraController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ChequeraEstadoChequera content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChequeraEstadoChequera"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ChequeraEstadoChequera"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/chequera_estado_chequera/AddEstadoChequera/": {
            "post": {
                "tags": [
                    "chequera_estado_chequera"
                ],
                "description": "create estate for checker",
                "operationId": "ChequeraEstadoChequeraController.AddEstadoChequera",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ChequeraEstadoChequera content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChequeraEstadoChequera"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ChequeraEstadoChequera"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/chequera_estado_chequera/{id}": {
            "get": {
                "tags": [
                    "chequera_estado_chequera"
                ],
                "description": "get ChequeraEstadoChequera by id",
                "operationId": "ChequeraEstadoChequeraController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ChequeraEstadoChequera"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "chequera_estado_chequera"
                ],
                "description": "update the ChequeraEstadoChequera",
                "operationId": "ChequeraEstadoChequeraController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ChequeraEstadoChequera content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChequeraEstadoChequera"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ChequeraEstadoChequera"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "chequera_estado_chequera"
                ],
                "description": "delete the ChequeraEstadoChequera",
                "operationId": "ChequeraEstadoChequeraController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cierre_periodo_presupuestal/": {
            "get": {
                "tags": [
                    "cierre_periodo_presupuestal"
                ],
                "description": "get CierrePeriodoPresupuestal",
                "operationId": "CierrePeriodoPresupuestalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CierrePeriodoPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "cierre_periodo_presupuestal"
                ],
                "description": "create CierrePeriodoPresupuestal",
                "operationId": "CierrePeriodoPresupuestalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CierrePeriodoPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CierrePeriodoPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CierrePeriodoPresupuestal"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/cierre_periodo_presupuestal/{id}": {
            "get": {
                "tags": [
                    "cierre_periodo_presupuestal"
                ],
                "description": "get CierrePeriodoPresupuestal by id",
                "operationId": "CierrePeriodoPresupuestalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CierrePeriodoPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "cierre_periodo_presupuestal"
                ],
                "description": "update the CierrePeriodoPresupuestal",
                "operationId": "CierrePeriodoPresupuestalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CierrePeriodoPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CierrePeriodoPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CierrePeriodoPresupuestal"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cierre_periodo_presupuestal"
                ],
                "description": "delete the CierrePeriodoPresupuestal",
                "operationId": "CierrePeriodoPresupuestalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/clase_transaccion/": {
            "get": {
                "tags": [
                    "clase_transaccion"
                ],
                "description": "get ClaseTransaccion",
                "operationId": "ClaseTransaccionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ClaseTransaccion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "clase_transaccion"
                ],
                "description": "create ClaseTransaccion",
                "operationId": "ClaseTransaccionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ClaseTransaccion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ClaseTransaccion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ClaseTransaccion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/clase_transaccion/{id}": {
            "get": {
                "tags": [
                    "clase_transaccion"
                ],
                "description": "get ClaseTransaccion by id",
                "operationId": "ClaseTransaccionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ClaseTransaccion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "clase_transaccion"
                ],
                "description": "update the ClaseTransaccion",
                "operationId": "ClaseTransaccionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ClaseTransaccion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ClaseTransaccion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ClaseTransaccion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "clase_transaccion"
                ],
                "description": "delete the ClaseTransaccion",
                "operationId": "ClaseTransaccionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/comprobante/": {
            "get": {
                "tags": [
                    "comprobante"
                ],
                "description": "get Comprobante",
                "operationId": "ComprobanteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Comprobante"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "comprobante"
                ],
                "description": "create Comprobante",
                "operationId": "ComprobanteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Comprobante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Comprobante"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Comprobante"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/comprobante/{id}": {
            "get": {
                "tags": [
                    "comprobante"
                ],
                "description": "get Comprobante by id",
                "operationId": "ComprobanteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Comprobante"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "comprobante"
                ],
                "description": "update the Comprobante",
                "operationId": "ComprobanteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Comprobante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Comprobante"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Comprobante"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "comprobante"
                ],
                "description": "delete the Comprobante",
                "operationId": "ComprobanteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/compromiso/": {
            "get": {
                "tags": [
                    "compromiso"
                ],
                "description": "get Compromiso",
                "operationId": "CompromisoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Compromiso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "compromiso"
                ],
                "description": "create Compromiso",
                "operationId": "CompromisoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Compromiso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Compromiso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Compromiso"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/compromiso/{id}": {
            "get": {
                "tags": [
                    "compromiso"
                ],
                "description": "get Compromiso by id",
                "operationId": "CompromisoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Compromiso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "compromiso"
                ],
                "description": "El compromiso unicamente actualiza el objeto y las fechas de inicio y fin",
                "operationId": "CompromisoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Compromiso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Compromiso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Compromiso"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "compromiso"
                ],
                "description": "delete the Compromiso",
                "operationId": "CompromisoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/concepto/": {
            "get": {
                "tags": [
                    "concepto"
                ],
                "description": "get Concepto",
                "operationId": "ConceptoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Concepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "concepto"
                ],
                "description": "create Concepto",
                "operationId": "ConceptoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Concepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Concepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Concepto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/concepto/{id}": {
            "get": {
                "tags": [
                    "concepto"
                ],
                "description": "get Concepto by id",
                "operationId": "ConceptoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Concepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "concepto"
                ],
                "description": "update the Concepto",
                "operationId": "ConceptoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Concepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Concepto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Concepto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "concepto"
                ],
                "description": "delete the Concepto",
                "operationId": "ConceptoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/concepto_avance_legalizacion_tipo/": {
            "get": {
                "tags": [
                    "concepto_avance_legalizacion_tipo"
                ],
                "description": "get ConceptoAvanceLegalizacionTipo",
                "operationId": "ConceptoAvanceLegalizacionTipoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "string",
                        "name": "groupby",
                        "description": "fields to grop by,  e.g. col1,col2 ...",
                        "schema": {
                            "$ref": "#/definitions/false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoAvanceLegalizacionTipo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "concepto_avance_legalizacion_tipo"
                ],
                "description": "create ConceptoAvanceLegalizacionTipo",
                "operationId": "ConceptoAvanceLegalizacionTipoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoAvanceLegalizacionTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoAvanceLegalizacionTipo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ConceptoAvanceLegalizacionTipo"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/concepto_avance_legalizacion_tipo/GetConceptoAvanceLegalizacionId/{id}": {
            "get": {
                "tags": [
                    "concepto_avance_legalizacion_tipo"
                ],
                "description": "get ConceptoAvanceLegalizacionTipo given IdAvanceLegalizacion",
                "operationId": "ConceptoAvanceLegalizacionTipoController.Get Concepto by AvanceLegalizacionId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoAvanceLegalizacionTipo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/concepto_avance_legalizacion_tipo/{id}": {
            "get": {
                "tags": [
                    "concepto_avance_legalizacion_tipo"
                ],
                "description": "get ConceptoAvanceLegalizacionTipo by id",
                "operationId": "ConceptoAvanceLegalizacionTipoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoAvanceLegalizacionTipo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "concepto_avance_legalizacion_tipo"
                ],
                "description": "update the ConceptoAvanceLegalizacionTipo",
                "operationId": "ConceptoAvanceLegalizacionTipoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoAvanceLegalizacionTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoAvanceLegalizacionTipo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoAvanceLegalizacionTipo"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "concepto_avance_legalizacion_tipo"
                ],
                "description": "delete the ConceptoAvanceLegalizacionTipo",
                "operationId": "ConceptoAvanceLegalizacionTipoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/concepto_concepto/": {
            "get": {
                "tags": [
                    "concepto_concepto"
                ],
                "description": "get ConceptoConcepto",
                "operationId": "ConceptoConceptoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "concepto_concepto"
                ],
                "description": "create ConceptoConcepto",
                "operationId": "ConceptoConceptoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoConcepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ConceptoConcepto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/concepto_concepto/{id}": {
            "get": {
                "tags": [
                    "concepto_concepto"
                ],
                "description": "get ConceptoConcepto by id",
                "operationId": "ConceptoConceptoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "concepto_concepto"
                ],
                "description": "update the ConceptoConcepto",
                "operationId": "ConceptoConceptoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoConcepto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoConcepto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "concepto_concepto"
                ],
                "description": "delete the ConceptoConcepto",
                "operationId": "ConceptoConceptoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/concepto_cuenta_contable/": {
            "get": {
                "tags": [
                    "concepto_cuenta_contable"
                ],
                "description": "get ConceptoCuentaContable",
                "operationId": "ConceptoCuentaContableController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoCuentaContable"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "concepto_cuenta_contable"
                ],
                "description": "create ConceptoCuentaContable",
                "operationId": "ConceptoCuentaContableController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoCuentaContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoCuentaContable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ConceptoCuentaContable"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/concepto_cuenta_contable/{id}": {
            "get": {
                "tags": [
                    "concepto_cuenta_contable"
                ],
                "description": "get ConceptoCuentaContable by id",
                "operationId": "ConceptoCuentaContableController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoCuentaContable"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "concepto_cuenta_contable"
                ],
                "description": "update the ConceptoCuentaContable",
                "operationId": "ConceptoCuentaContableController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoCuentaContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoCuentaContable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoCuentaContable"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "concepto_cuenta_contable"
                ],
                "description": "delete the ConceptoCuentaContable",
                "operationId": "ConceptoCuentaContableController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/concepto_detalle_tipo_transaccion/": {
            "get": {
                "tags": [
                    "concepto_detalle_tipo_transaccion"
                ],
                "description": "get ConceptoDetalleTipoTransaccion",
                "operationId": "ConceptoDetalleTipoTransaccionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoDetalleTipoTransaccion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "concepto_detalle_tipo_transaccion"
                ],
                "description": "create ConceptoDetalleTipoTransaccion",
                "operationId": "ConceptoDetalleTipoTransaccionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoDetalleTipoTransaccion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoDetalleTipoTransaccion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ConceptoDetalleTipoTransaccion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/concepto_detalle_tipo_transaccion/{id}": {
            "get": {
                "tags": [
                    "concepto_detalle_tipo_transaccion"
                ],
                "description": "get ConceptoDetalleTipoTransaccion by id",
                "operationId": "ConceptoDetalleTipoTransaccionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoDetalleTipoTransaccion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "concepto_detalle_tipo_transaccion"
                ],
                "description": "update the ConceptoDetalleTipoTransaccion",
                "operationId": "ConceptoDetalleTipoTransaccionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoDetalleTipoTransaccion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoDetalleTipoTransaccion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoDetalleTipoTransaccion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "concepto_detalle_tipo_transaccion"
                ],
                "description": "delete the ConceptoDetalleTipoTransaccion",
                "operationId": "ConceptoDetalleTipoTransaccionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/concepto_orden_pago/": {
            "get": {
                "tags": [
                    "concepto_orden_pago"
                ],
                "description": "get ConceptoOrdenPago",
                "operationId": "ConceptoOrdenPagoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoOrdenPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "concepto_orden_pago"
                ],
                "description": "create ConceptoOrdenPago",
                "operationId": "ConceptoOrdenPagoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoOrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoOrdenPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ConceptoOrdenPago"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/concepto_orden_pago/{id}": {
            "get": {
                "tags": [
                    "concepto_orden_pago"
                ],
                "description": "get ConceptoOrdenPago by id",
                "operationId": "ConceptoOrdenPagoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoOrdenPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "concepto_orden_pago"
                ],
                "description": "update the ConceptoOrdenPago",
                "operationId": "ConceptoOrdenPagoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoOrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoOrdenPago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoOrdenPago"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "concepto_orden_pago"
                ],
                "description": "delete the ConceptoOrdenPago",
                "operationId": "ConceptoOrdenPagoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/concepto_tesoral_facultad_proyecto/": {
            "get": {
                "tags": [
                    "concepto_tesoral_facultad_proyecto"
                ],
                "description": "get ConceptoTesoralFacultadProyecto",
                "operationId": "ConceptoTesoralFacultadProyectoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoTesoralFacultadProyecto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "concepto_tesoral_facultad_proyecto"
                ],
                "description": "create ConceptoTesoralFacultadProyecto",
                "operationId": "ConceptoTesoralFacultadProyectoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoTesoralFacultadProyecto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoTesoralFacultadProyecto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ConceptoTesoralFacultadProyecto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/concepto_tesoral_facultad_proyecto/{id}": {
            "get": {
                "tags": [
                    "concepto_tesoral_facultad_proyecto"
                ],
                "description": "get ConceptoTesoralFacultadProyecto by id",
                "operationId": "ConceptoTesoralFacultadProyectoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoTesoralFacultadProyecto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "concepto_tesoral_facultad_proyecto"
                ],
                "description": "update the ConceptoTesoralFacultadProyecto",
                "operationId": "ConceptoTesoralFacultadProyectoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ConceptoTesoralFacultadProyecto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoTesoralFacultadProyecto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ConceptoTesoralFacultadProyecto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "concepto_tesoral_facultad_proyecto"
                ],
                "description": "delete the ConceptoTesoralFacultadProyecto",
                "operationId": "ConceptoTesoralFacultadProyectoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cuenta_bancaria/": {
            "get": {
                "tags": [
                    "cuenta_bancaria"
                ],
                "description": "get CuentaBancaria",
                "operationId": "CuentaBancariaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuentaBancaria"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "cuenta_bancaria"
                ],
                "description": "create CuentaBancaria",
                "operationId": "CuentaBancariaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CuentaBancaria content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CuentaBancaria"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CuentaBancaria"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/cuenta_bancaria/{id}": {
            "get": {
                "tags": [
                    "cuenta_bancaria"
                ],
                "description": "get CuentaBancaria by id",
                "operationId": "CuentaBancariaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuentaBancaria"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "cuenta_bancaria"
                ],
                "description": "update the CuentaBancaria",
                "operationId": "CuentaBancariaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CuentaBancaria content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CuentaBancaria"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuentaBancaria"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cuenta_bancaria"
                ],
                "description": "delete the CuentaBancaria",
                "operationId": "CuentaBancariaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cuenta_contable/": {
            "get": {
                "tags": [
                    "cuenta_contable"
                ],
                "description": "get CuentaContable",
                "operationId": "CuentaContableController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuentaContable"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "cuenta_contable"
                ],
                "description": "create CuentaContable",
                "operationId": "CuentaContableController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CuentaContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CuentaContable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CuentaContable"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/cuenta_contable/{id}": {
            "get": {
                "tags": [
                    "cuenta_contable"
                ],
                "description": "get CuentaContable by id",
                "operationId": "CuentaContableController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuentaContable"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "cuenta_contable"
                ],
                "description": "update the CuentaContable",
                "operationId": "CuentaContableController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CuentaContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CuentaContable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuentaContable"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cuenta_contable"
                ],
                "description": "delete the CuentaContable",
                "operationId": "CuentaContableController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cuenta_devolucion/": {
            "get": {
                "tags": [
                    "cuenta_devolucion"
                ],
                "description": "get CuentaBancariaEnte",
                "operationId": "CuentaBancariaEnteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuentaBancariaEnte"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "cuenta_devolucion"
                ],
                "description": "create CuentaBancariaEnte",
                "operationId": "CuentaBancariaEnteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CuentaBancariaEnte content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CuentaBancariaEnte"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CuentaBancariaEnte"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/cuenta_devolucion/{id}": {
            "get": {
                "tags": [
                    "cuenta_devolucion"
                ],
                "description": "get CuentaBancariaEnte by id",
                "operationId": "CuentaBancariaEnteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuentaBancariaEnte"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "cuenta_devolucion"
                ],
                "description": "update the CuentaBancariaEnte",
                "operationId": "CuentaBancariaEnteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CuentaBancariaEnte content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CuentaBancariaEnte"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuentaBancariaEnte"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cuenta_devolucion"
                ],
                "description": "delete the CuentaBancariaEnte",
                "operationId": "CuentaBancariaEnteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/cuenta_especial/": {
            "get": {
                "tags": [
                    "cuenta_especial"
                ],
                "description": "get CuentaEspecial",
                "operationId": "CuentaEspecialController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuentaEspecial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "cuenta_especial"
                ],
                "description": "create CuentaEspecial",
                "operationId": "CuentaEspecialController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CuentaEspecial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CuentaEspecial"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CuentaEspecial"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/cuenta_especial/{id}": {
            "get": {
                "tags": [
                    "cuenta_especial"
                ],
                "description": "get CuentaEspecial by id",
                "operationId": "CuentaEspecialController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuentaEspecial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "cuenta_especial"
                ],
                "description": "update the CuentaEspecial",
                "operationId": "CuentaEspecialController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CuentaEspecial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CuentaEspecial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuentaEspecial"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cuenta_especial"
                ],
                "description": "delete the CuentaEspecial",
                "operationId": "CuentaEspecialController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/detalle_pac/": {
            "get": {
                "tags": [
                    "detalle_pac"
                ],
                "description": "get DetallePac",
                "operationId": "DetallePacController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetallePac"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "detalle_pac"
                ],
                "description": "create DetallePac",
                "operationId": "DetallePacController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DetallePac content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DetallePac"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DetallePac"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/detalle_pac/InsertarRegistros": {
            "post": {
                "tags": [
                    "detalle_pac"
                ],
                "description": "funcion que recibe e inserta los registros de la generacion del cierre",
                "operationId": "DetallePacController.InsertarRegistros",
                "parameters": [
                    {
                        "in": "query",
                        "name": "request",
                        "description": "The list you wanna insert",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interface{}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.Pac"
                    },
                    "403": {
                        "description": "Interface{}"
                    }
                }
            }
        },
        "/detalle_pac/{id}": {
            "get": {
                "tags": [
                    "detalle_pac"
                ],
                "description": "get DetallePac by id",
                "operationId": "DetallePacController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetallePac"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "detalle_pac"
                ],
                "description": "update the DetallePac",
                "operationId": "DetallePacController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DetallePac content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DetallePac"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetallePac"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "detalle_pac"
                ],
                "description": "delete the DetallePac",
                "operationId": "DetallePacController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/detalle_tipo_transaccion_version/": {
            "get": {
                "tags": [
                    "detalle_tipo_transaccion_version"
                ],
                "description": "get DetalleTipoTransaccionVersion",
                "operationId": "DetalleTipoTransaccionVersionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetalleTipoTransaccionVersion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "detalle_tipo_transaccion_version"
                ],
                "description": "create DetalleTipoTransaccionVersion",
                "operationId": "DetalleTipoTransaccionVersionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DetalleTipoTransaccionVersion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DetalleTipoTransaccionVersion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DetalleTipoTransaccionVersion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/detalle_tipo_transaccion_version/UpdateTipoTransaccion/": {
            "put": {
                "tags": [
                    "detalle_tipo_transaccion_version"
                ],
                "description": "update version and detalle for tipo transaccion",
                "operationId": "DetalleTipoTransaccionVersionController.UpdateTipoTransaccion",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DetalleTipoTransaccionVersion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DetalleTipoTransaccionVersion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetalleTipoTransaccionVersion"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/detalle_tipo_transaccion_version/{id}": {
            "get": {
                "tags": [
                    "detalle_tipo_transaccion_version"
                ],
                "description": "get DetalleTipoTransaccionVersion by id",
                "operationId": "DetalleTipoTransaccionVersionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetalleTipoTransaccionVersion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "detalle_tipo_transaccion_version"
                ],
                "description": "update the DetalleTipoTransaccionVersion",
                "operationId": "DetalleTipoTransaccionVersionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DetalleTipoTransaccionVersion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DetalleTipoTransaccionVersion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetalleTipoTransaccionVersion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "detalle_tipo_transaccion_version"
                ],
                "description": "delete the DetalleTipoTransaccionVersion",
                "operationId": "DetalleTipoTransaccionVersionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/devolucion_estado_devolucion/": {
            "get": {
                "tags": [
                    "devolucion_estado_devolucion"
                ],
                "description": "get DevolucionEstadoDevolucion",
                "operationId": "DevolucionEstadoDevolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionEstadoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "devolucion_estado_devolucion"
                ],
                "description": "create DevolucionEstadoDevolucion",
                "operationId": "DevolucionEstadoDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DevolucionEstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionEstadoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DevolucionEstadoDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/devolucion_estado_devolucion/{id}": {
            "get": {
                "tags": [
                    "devolucion_estado_devolucion"
                ],
                "description": "get DevolucionEstadoDevolucion by id",
                "operationId": "DevolucionEstadoDevolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionEstadoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "devolucion_estado_devolucion"
                ],
                "description": "update the DevolucionEstadoDevolucion",
                "operationId": "DevolucionEstadoDevolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DevolucionEstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionEstadoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionEstadoDevolucion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "devolucion_estado_devolucion"
                ],
                "description": "delete the DevolucionEstadoDevolucion",
                "operationId": "DevolucionEstadoDevolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/devolucion_tributaria/": {
            "get": {
                "tags": [
                    "devolucion_tributaria"
                ],
                "description": "get DevolucionTributaria",
                "operationId": "DevolucionTributariaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributaria"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "devolucion_tributaria"
                ],
                "description": "create DevolucionTributaria",
                "operationId": "DevolucionTributariaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DevolucionTributaria content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributaria"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DevolucionTributaria"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/devolucion_tributaria/AddDevolucionTributaria": {
            "post": {
                "tags": [
                    "devolucion_tributaria"
                ],
                "description": "insert tributary devolution wit all its relations",
                "operationId": "DevolucionTributariaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributaria"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/devolucion_tributaria/GetDevolucionRecordsNumber/": {
            "get": {
                "tags": [
                    "devolucion_tributaria"
                ],
                "description": "get DevolucionTributaria",
                "operationId": "DevolucionTributariaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributaria"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/devolucion_tributaria/{id}": {
            "get": {
                "tags": [
                    "devolucion_tributaria"
                ],
                "description": "get DevolucionTributaria by id",
                "operationId": "DevolucionTributariaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributaria"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "devolucion_tributaria"
                ],
                "description": "update the DevolucionTributaria",
                "operationId": "DevolucionTributariaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DevolucionTributaria content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributaria"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributaria"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "devolucion_tributaria"
                ],
                "description": "delete the DevolucionTributaria",
                "operationId": "DevolucionTributariaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/devolucion_tributaria_concepto/": {
            "get": {
                "tags": [
                    "devolucion_tributaria_concepto"
                ],
                "description": "get DevolucionTributariaConcepto",
                "operationId": "DevolucionTributariaConceptoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "devolucion_tributaria_concepto"
                ],
                "description": "create DevolucionTributariaConcepto",
                "operationId": "DevolucionTributariaConceptoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DevolucionTributariaConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaConcepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DevolucionTributariaConcepto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/devolucion_tributaria_concepto/{id}": {
            "get": {
                "tags": [
                    "devolucion_tributaria_concepto"
                ],
                "description": "get DevolucionTributariaConcepto by id",
                "operationId": "DevolucionTributariaConceptoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "devolucion_tributaria_concepto"
                ],
                "description": "update the DevolucionTributariaConcepto",
                "operationId": "DevolucionTributariaConceptoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DevolucionTributariaConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaConcepto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaConcepto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "devolucion_tributaria_concepto"
                ],
                "description": "delete the DevolucionTributariaConcepto",
                "operationId": "DevolucionTributariaConceptoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/devolucion_tributaria_estado_devolucion/": {
            "get": {
                "tags": [
                    "devolucion_tributaria_estado_devolucion"
                ],
                "description": "get DevolucionTributariaEstadoDevolucion",
                "operationId": "DevolucionTributariaEstadoDevolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaEstadoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "devolucion_tributaria_estado_devolucion"
                ],
                "description": "create DevolucionTributariaEstadoDevolucion",
                "operationId": "DevolucionTributariaEstadoDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DevolucionTributariaEstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaEstadoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DevolucionTributariaEstadoDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/devolucion_tributaria_estado_devolucion/AddEstadoDevolTributaria": {
            "post": {
                "tags": [
                    "devolucion_tributaria_estado_devolucion"
                ],
                "description": "Insert a record to modify status to a devolution",
                "operationId": "DevolucionTributariaEstadoDevolucionController.AddEstadoDevolTributaria",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenDevolucionEstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaEstadoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaEstadoDevolucion"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/devolucion_tributaria_estado_devolucion/{id}": {
            "get": {
                "tags": [
                    "devolucion_tributaria_estado_devolucion"
                ],
                "description": "get DevolucionTributariaEstadoDevolucion by id",
                "operationId": "DevolucionTributariaEstadoDevolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaEstadoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "devolucion_tributaria_estado_devolucion"
                ],
                "description": "update the DevolucionTributariaEstadoDevolucion",
                "operationId": "DevolucionTributariaEstadoDevolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DevolucionTributariaEstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaEstadoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaEstadoDevolucion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "devolucion_tributaria_estado_devolucion"
                ],
                "description": "delete the DevolucionTributariaEstadoDevolucion",
                "operationId": "DevolucionTributariaEstadoDevolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/devolucion_tributaria_movimiento/": {
            "get": {
                "tags": [
                    "devolucion_tributaria_movimiento"
                ],
                "description": "get DevolucionTributariaMovimientoAsociado",
                "operationId": "DevolucionTributariaMovimientoAsociadoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaMovimientoAsociado"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "devolucion_tributaria_movimiento"
                ],
                "description": "create DevolucionTributariaMovimientoAsociado",
                "operationId": "DevolucionTributariaMovimientoAsociadoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DevolucionTributariaMovimientoAsociado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaMovimientoAsociado"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DevolucionTributariaMovimientoAsociado"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/devolucion_tributaria_movimiento/{id}": {
            "get": {
                "tags": [
                    "devolucion_tributaria_movimiento"
                ],
                "description": "get DevolucionTributariaMovimientoAsociado by id",
                "operationId": "DevolucionTributariaMovimientoAsociadoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaMovimientoAsociado"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "devolucion_tributaria_movimiento"
                ],
                "description": "update the DevolucionTributariaMovimientoAsociado",
                "operationId": "DevolucionTributariaMovimientoAsociadoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DevolucionTributariaMovimientoAsociado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaMovimientoAsociado"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaMovimientoAsociado"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "devolucion_tributaria_movimiento"
                ],
                "description": "delete the DevolucionTributariaMovimientoAsociado",
                "operationId": "DevolucionTributariaMovimientoAsociadoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/disponibilidad/": {
            "get": {
                "tags": [
                    "disponibilidad"
                ],
                "description": "get Disponibilidad",
                "operationId": "DisponibilidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Disponibilidad"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "disponibilidad"
                ],
                "description": "create Disponibilidad",
                "operationId": "DisponibilidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Disponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Disponibilidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Disponibilidad"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/disponibilidad/AprobarAnulacion": {
            "post": {
                "tags": [
                    "disponibilidad"
                ],
                "description": "aprueba la anulacion de un cdp ya sea total o parcial",
                "operationId": "DisponibilidadController.AprobarAnulacionDisponibilidad",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AnulacionDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AnulacionDisponibilidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/disponibilidad/DeleteDisponibilidadData/{id}": {
            "delete": {
                "tags": [
                    "disponibilidad"
                ],
                "description": "delete the Disponibilidad",
                "operationId": "DisponibilidadController.DeleteDisponibilidadData",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/disponibilidad/DeleteDisponibilidadMovimiento/{id}": {
            "delete": {
                "tags": [
                    "disponibilidad"
                ],
                "description": "delete the Disponibilidad",
                "operationId": "DisponibilidadController.DeleteDisponibilidadMovimiento",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/disponibilidad/GetPrincDisponibilidadInfo/{id}": {
            "get": {
                "tags": [
                    "disponibilidad"
                ],
                "description": "get Disponibilidad by id",
                "operationId": "DisponibilidadController.GetPrincDisponibilidadInfo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Disponibilidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/disponibilidad/TotalDisponibilidades/{vigencia}": {
            "get": {
                "tags": [
                    "disponibilidad"
                ],
                "description": "numero de dispònibilidades segun vigencia o rango de fechas",
                "operationId": "DisponibilidadController.TotalDisponibilidades",
                "parameters": [
                    {
                        "in": "query",
                        "name": "vigencia",
                        "description": "vigencia para la consulta del total de disponibilidades",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "UnidadEjecutora",
                        "description": "unidad ejecutora de las solicitudes a consultar",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "rangoinicio",
                        "description": "opcional, fecha inicio de consulta de cdp",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "rangofin",
                        "description": "opcional, fecha fin de consulta de cdp",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} total"
                    },
                    "403": {
                        "description": "vigencia is empty"
                    }
                }
            }
        },
        "/disponibilidad/{id}": {
            "get": {
                "tags": [
                    "disponibilidad"
                ],
                "description": "get Disponibilidad by id",
                "operationId": "DisponibilidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Disponibilidad"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "disponibilidad"
                ],
                "description": "update the Disponibilidad",
                "operationId": "DisponibilidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Disponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Disponibilidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Disponibilidad"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "disponibilidad"
                ],
                "description": "delete the Disponibilidad",
                "operationId": "DisponibilidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/disponibilidad_apropiacion/": {
            "get": {
                "tags": [
                    "disponibilidad_apropiacion"
                ],
                "description": "get DisponibilidadApropiacion",
                "operationId": "DisponibilidadApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "disponibilidad_apropiacion"
                ],
                "description": "create DisponibilidadApropiacion",
                "operationId": "DisponibilidadApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DisponibilidadApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DisponibilidadApropiacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/disponibilidad_apropiacion/{id}": {
            "get": {
                "tags": [
                    "disponibilidad_apropiacion"
                ],
                "description": "get DisponibilidadApropiacion by id",
                "operationId": "DisponibilidadApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "disponibilidad_apropiacion"
                ],
                "description": "update the DisponibilidadApropiacion",
                "operationId": "DisponibilidadApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DisponibilidadApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "disponibilidad_apropiacion"
                ],
                "description": "delete the DisponibilidadApropiacion",
                "operationId": "DisponibilidadApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/disponibilidad_proceso_externo/": {
            "get": {
                "tags": [
                    "disponibilidad_proceso_externo"
                ],
                "description": "get DisponibilidadProcesoExterno",
                "operationId": "DisponibilidadProcesoExternoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadProcesoExterno"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "disponibilidad_proceso_externo"
                ],
                "description": "create DisponibilidadProcesoExterno",
                "operationId": "DisponibilidadProcesoExternoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DisponibilidadProcesoExterno content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadProcesoExterno"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DisponibilidadProcesoExterno"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/disponibilidad_proceso_externo/{id}": {
            "get": {
                "tags": [
                    "disponibilidad_proceso_externo"
                ],
                "description": "get DisponibilidadProcesoExterno by id",
                "operationId": "DisponibilidadProcesoExternoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadProcesoExterno"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "disponibilidad_proceso_externo"
                ],
                "description": "update the DisponibilidadProcesoExterno",
                "operationId": "DisponibilidadProcesoExternoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DisponibilidadProcesoExterno content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadProcesoExterno"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadProcesoExterno"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "disponibilidad_proceso_externo"
                ],
                "description": "delete the DisponibilidadProcesoExterno",
                "operationId": "DisponibilidadProcesoExternoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/documento_devolucion/": {
            "get": {
                "tags": [
                    "documento_devolucion"
                ],
                "description": "get DocumentoDevolucion",
                "operationId": "DocumentoDevolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "documento_devolucion"
                ],
                "description": "create DocumentoDevolucion",
                "operationId": "DocumentoDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DocumentoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DocumentoDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/documento_devolucion/{id}": {
            "get": {
                "tags": [
                    "documento_devolucion"
                ],
                "description": "get DocumentoDevolucion by id",
                "operationId": "DocumentoDevolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "documento_devolucion"
                ],
                "description": "update the DocumentoDevolucion",
                "operationId": "DocumentoDevolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DocumentoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoDevolucion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "documento_devolucion"
                ],
                "description": "delete the DocumentoDevolucion",
                "operationId": "DocumentoDevolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/documento_generador/": {
            "get": {
                "tags": [
                    "documento_generador"
                ],
                "description": "get DocumentoGenerador",
                "operationId": "DocumentoGeneradorController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoGenerador"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "documento_generador"
                ],
                "description": "create DocumentoGenerador",
                "operationId": "DocumentoGeneradorController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DocumentoGenerador content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoGenerador"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DocumentoGenerador"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/documento_generador/{id}": {
            "get": {
                "tags": [
                    "documento_generador"
                ],
                "description": "get DocumentoGenerador by id",
                "operationId": "DocumentoGeneradorController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoGenerador"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "documento_generador"
                ],
                "description": "update the DocumentoGenerador",
                "operationId": "DocumentoGeneradorController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DocumentoGenerador content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoGenerador"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoGenerador"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "documento_generador"
                ],
                "description": "delete the DocumentoGenerador",
                "operationId": "DocumentoGeneradorController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/entidad/": {
            "get": {
                "tags": [
                    "entidad"
                ],
                "description": "get Entidad",
                "operationId": "EntidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entidad"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "entidad"
                ],
                "description": "create Entidad",
                "operationId": "EntidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Entidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Entidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Entidad"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/entidad/{id}": {
            "get": {
                "tags": [
                    "entidad"
                ],
                "description": "get Entidad by id",
                "operationId": "EntidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entidad"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "entidad"
                ],
                "description": "update the Entidad",
                "operationId": "EntidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Entidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Entidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entidad"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "entidad"
                ],
                "description": "delete the Entidad",
                "operationId": "EntidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_apropiacion/": {
            "get": {
                "tags": [
                    "estado_apropiacion"
                ],
                "description": "get EstadoApropiacion",
                "operationId": "EstadoApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_apropiacion"
                ],
                "description": "create EstadoApropiacion",
                "operationId": "EstadoApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoApropiacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_apropiacion/{id}": {
            "get": {
                "tags": [
                    "estado_apropiacion"
                ],
                "description": "get EstadoApropiacion by id",
                "operationId": "EstadoApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_apropiacion"
                ],
                "description": "update the EstadoApropiacion",
                "operationId": "EstadoApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoApropiacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_apropiacion"
                ],
                "description": "delete the EstadoApropiacion",
                "operationId": "EstadoApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_avance/": {
            "get": {
                "tags": [
                    "estado_avance"
                ],
                "description": "get EstadoAvance",
                "operationId": "EstadoAvanceController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_avance"
                ],
                "description": "create EstadoAvance",
                "operationId": "EstadoAvanceController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoAvance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoAvance"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_avance/{id}": {
            "get": {
                "tags": [
                    "estado_avance"
                ],
                "description": "get EstadoAvance by id",
                "operationId": "EstadoAvanceController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_avance"
                ],
                "description": "update the EstadoAvance",
                "operationId": "EstadoAvanceController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoAvance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoAvance"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_avance"
                ],
                "description": "delete the EstadoAvance",
                "operationId": "EstadoAvanceController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_avance_legalizacion_tipo/": {
            "get": {
                "tags": [
                    "estado_avance_legalizacion_tipo"
                ],
                "description": "get EstadoAvanceLegalizacionTipo",
                "operationId": "EstadoAvanceLegalizacionTipoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoAvanceLegalizacionTipo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_avance_legalizacion_tipo"
                ],
                "description": "create EstadoAvanceLegalizacionTipo",
                "operationId": "EstadoAvanceLegalizacionTipoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoAvanceLegalizacionTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoAvanceLegalizacionTipo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoAvanceLegalizacionTipo"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_avance_legalizacion_tipo/{id}": {
            "get": {
                "tags": [
                    "estado_avance_legalizacion_tipo"
                ],
                "description": "get EstadoAvanceLegalizacionTipo by id",
                "operationId": "EstadoAvanceLegalizacionTipoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoAvanceLegalizacionTipo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_avance_legalizacion_tipo"
                ],
                "description": "update the EstadoAvanceLegalizacionTipo",
                "operationId": "EstadoAvanceLegalizacionTipoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoAvanceLegalizacionTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoAvanceLegalizacionTipo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoAvanceLegalizacionTipo"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_avance_legalizacion_tipo"
                ],
                "description": "delete the EstadoAvanceLegalizacionTipo",
                "operationId": "EstadoAvanceLegalizacionTipoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_calendario_tributario/": {
            "get": {
                "tags": [
                    "estado_calendario_tributario"
                ],
                "description": "get EstadoCalendarioTributario",
                "operationId": "EstadoCalendarioTributarioController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCalendarioTributario"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_calendario_tributario"
                ],
                "description": "create EstadoCalendarioTributario",
                "operationId": "EstadoCalendarioTributarioController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoCalendarioTributario content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCalendarioTributario"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoCalendarioTributario"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_calendario_tributario/{id}": {
            "get": {
                "tags": [
                    "estado_calendario_tributario"
                ],
                "description": "get EstadoCalendarioTributario by id",
                "operationId": "EstadoCalendarioTributarioController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCalendarioTributario"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_calendario_tributario"
                ],
                "description": "update the EstadoCalendarioTributario",
                "operationId": "EstadoCalendarioTributarioController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoCalendarioTributario content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCalendarioTributario"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCalendarioTributario"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_calendario_tributario"
                ],
                "description": "delete the EstadoCalendarioTributario",
                "operationId": "EstadoCalendarioTributarioController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_cancelacion_inversion/": {
            "get": {
                "tags": [
                    "estado_cancelacion_inversion"
                ],
                "description": "get EstadoCancelacionInversion",
                "operationId": "EstadoCancelacionInversionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCancelacionInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_cancelacion_inversion"
                ],
                "description": "create EstadoCancelacionInversion",
                "operationId": "EstadoCancelacionInversionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoCancelacionInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCancelacionInversion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoCancelacionInversion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_cancelacion_inversion/{id}": {
            "get": {
                "tags": [
                    "estado_cancelacion_inversion"
                ],
                "description": "get EstadoCancelacionInversion by id",
                "operationId": "EstadoCancelacionInversionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCancelacionInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_cancelacion_inversion"
                ],
                "description": "update the EstadoCancelacionInversion",
                "operationId": "EstadoCancelacionInversionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoCancelacionInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCancelacionInversion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCancelacionInversion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_cancelacion_inversion"
                ],
                "description": "delete the EstadoCancelacionInversion",
                "operationId": "EstadoCancelacionInversionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_cheque/": {
            "get": {
                "tags": [
                    "estado_cheque"
                ],
                "description": "get EstadoCheque",
                "operationId": "EstadoChequeController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCheque"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_cheque"
                ],
                "description": "create EstadoCheque",
                "operationId": "EstadoChequeController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoCheque content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCheque"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoCheque"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_cheque/{id}": {
            "get": {
                "tags": [
                    "estado_cheque"
                ],
                "description": "get EstadoCheque by id",
                "operationId": "EstadoChequeController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCheque"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_cheque"
                ],
                "description": "update the EstadoCheque",
                "operationId": "EstadoChequeController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoCheque content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCheque"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCheque"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_cheque"
                ],
                "description": "delete the EstadoCheque",
                "operationId": "EstadoChequeController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_chequera/": {
            "get": {
                "tags": [
                    "estado_chequera"
                ],
                "description": "get EstadoChequera",
                "operationId": "EstadoChequeraController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoChequera"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_chequera"
                ],
                "description": "create EstadoChequera",
                "operationId": "EstadoChequeraController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoChequera content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoChequera"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoChequera"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_chequera/{id}": {
            "get": {
                "tags": [
                    "estado_chequera"
                ],
                "description": "get EstadoChequera by id",
                "operationId": "EstadoChequeraController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoChequera"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_chequera"
                ],
                "description": "update the EstadoChequera",
                "operationId": "EstadoChequeraController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoChequera content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoChequera"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoChequera"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_chequera"
                ],
                "description": "delete the EstadoChequera",
                "operationId": "EstadoChequeraController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_comprobante/": {
            "get": {
                "tags": [
                    "estado_comprobante"
                ],
                "description": "get EstadoComprobante",
                "operationId": "EstadoComprobanteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoComprobante"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_comprobante"
                ],
                "description": "create EstadoComprobante",
                "operationId": "EstadoComprobanteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoComprobante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoComprobante"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoComprobante"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_comprobante/{id}": {
            "get": {
                "tags": [
                    "estado_comprobante"
                ],
                "description": "get EstadoComprobante by id",
                "operationId": "EstadoComprobanteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoComprobante"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_comprobante"
                ],
                "description": "update the EstadoComprobante",
                "operationId": "EstadoComprobanteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoComprobante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoComprobante"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoComprobante"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_comprobante"
                ],
                "description": "delete the EstadoComprobante",
                "operationId": "EstadoComprobanteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_compromiso/": {
            "get": {
                "tags": [
                    "estado_compromiso"
                ],
                "description": "get EstadoCompromiso",
                "operationId": "EstadoCompromisoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCompromiso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_compromiso"
                ],
                "description": "create EstadoCompromiso",
                "operationId": "EstadoCompromisoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoCompromiso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCompromiso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoCompromiso"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_compromiso/{id}": {
            "get": {
                "tags": [
                    "estado_compromiso"
                ],
                "description": "get EstadoCompromiso by id",
                "operationId": "EstadoCompromisoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCompromiso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_compromiso"
                ],
                "description": "update the EstadoCompromiso",
                "operationId": "EstadoCompromisoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoCompromiso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCompromiso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoCompromiso"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_compromiso"
                ],
                "description": "delete the EstadoCompromiso",
                "operationId": "EstadoCompromisoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_devolucion/": {
            "get": {
                "tags": [
                    "estado_devolucion"
                ],
                "description": "get EstadoDevolucion",
                "operationId": "EstadoDevolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_devolucion"
                ],
                "description": "create EstadoDevolucion",
                "operationId": "EstadoDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_devolucion/{id}": {
            "get": {
                "tags": [
                    "estado_devolucion"
                ],
                "description": "get EstadoDevolucion by id",
                "operationId": "EstadoDevolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_devolucion"
                ],
                "description": "update the EstadoDevolucion",
                "operationId": "EstadoDevolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoDevolucion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_devolucion"
                ],
                "description": "delete the EstadoDevolucion",
                "operationId": "EstadoDevolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_disponibilidad/": {
            "get": {
                "tags": [
                    "estado_disponibilidad"
                ],
                "description": "get EstadoDisponibilidad",
                "operationId": "EstadoDisponibilidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoDisponibilidad"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_disponibilidad"
                ],
                "description": "create EstadoDisponibilidad",
                "operationId": "EstadoDisponibilidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoDisponibilidad"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_disponibilidad/{id}": {
            "get": {
                "tags": [
                    "estado_disponibilidad"
                ],
                "description": "get EstadoDisponibilidad by id",
                "operationId": "EstadoDisponibilidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoDisponibilidad"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_disponibilidad"
                ],
                "description": "update the EstadoDisponibilidad",
                "operationId": "EstadoDisponibilidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoDisponibilidad"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_disponibilidad"
                ],
                "description": "delete the EstadoDisponibilidad",
                "operationId": "EstadoDisponibilidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_giro/": {
            "get": {
                "tags": [
                    "estado_giro"
                ],
                "description": "get EstadoGiro",
                "operationId": "EstadoGiroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoGiro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_giro"
                ],
                "description": "create EstadoGiro",
                "operationId": "EstadoGiroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoGiro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoGiro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoGiro"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_giro/{id}": {
            "get": {
                "tags": [
                    "estado_giro"
                ],
                "description": "get EstadoGiro by id",
                "operationId": "EstadoGiroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoGiro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_giro"
                ],
                "description": "update the EstadoGiro",
                "operationId": "EstadoGiroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoGiro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoGiro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoGiro"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_giro"
                ],
                "description": "delete the EstadoGiro",
                "operationId": "EstadoGiroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_ingreso/": {
            "get": {
                "tags": [
                    "estado_ingreso"
                ],
                "description": "get EstadoIngreso",
                "operationId": "EstadoIngresoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoIngreso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_ingreso"
                ],
                "description": "create EstadoIngreso",
                "operationId": "EstadoIngresoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoIngreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoIngreso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoIngreso"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_ingreso/{id}": {
            "get": {
                "tags": [
                    "estado_ingreso"
                ],
                "description": "get EstadoIngreso by id",
                "operationId": "EstadoIngresoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoIngreso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_ingreso"
                ],
                "description": "update the EstadoIngreso",
                "operationId": "EstadoIngresoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoIngreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoIngreso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoIngreso"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_ingreso"
                ],
                "description": "delete the EstadoIngreso",
                "operationId": "EstadoIngresoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_ingreso_sin_situacion_fondos/": {
            "get": {
                "tags": [
                    "estado_ingreso_sin_situacion_fondos"
                ],
                "description": "get EstadoIngresoSinSituacionFondos",
                "operationId": "EstadoIngresoSinSituacionFondosController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoIngresoSinSituacionFondos"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_ingreso_sin_situacion_fondos"
                ],
                "description": "create EstadoIngresoSinSituacionFondos",
                "operationId": "EstadoIngresoSinSituacionFondosController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoIngresoSinSituacionFondos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoIngresoSinSituacionFondos"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoIngresoSinSituacionFondos"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_ingreso_sin_situacion_fondos/{id}": {
            "get": {
                "tags": [
                    "estado_ingreso_sin_situacion_fondos"
                ],
                "description": "get EstadoIngresoSinSituacionFondos by id",
                "operationId": "EstadoIngresoSinSituacionFondosController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoIngresoSinSituacionFondos"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_ingreso_sin_situacion_fondos"
                ],
                "description": "update the EstadoIngresoSinSituacionFondos",
                "operationId": "EstadoIngresoSinSituacionFondosController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoIngresoSinSituacionFondos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoIngresoSinSituacionFondos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoIngresoSinSituacionFondos"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_ingreso_sin_situacion_fondos"
                ],
                "description": "delete the EstadoIngresoSinSituacionFondos",
                "operationId": "EstadoIngresoSinSituacionFondosController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_inversion/": {
            "get": {
                "tags": [
                    "estado_inversion"
                ],
                "description": "get EstadoInversion",
                "operationId": "EstadoInversionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_inversion"
                ],
                "description": "create EstadoInversion",
                "operationId": "EstadoInversionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoInversion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoInversion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_inversion/{id}": {
            "get": {
                "tags": [
                    "estado_inversion"
                ],
                "description": "get EstadoInversion by id",
                "operationId": "EstadoInversionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_inversion"
                ],
                "description": "update the EstadoInversion",
                "operationId": "EstadoInversionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoInversion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoInversion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_inversion"
                ],
                "description": "delete the EstadoInversion",
                "operationId": "EstadoInversionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_legalizacion/": {
            "get": {
                "tags": [
                    "estado_legalizacion"
                ],
                "description": "get EstadoLegalizacion",
                "operationId": "EstadoLegalizacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_legalizacion"
                ],
                "description": "create EstadoLegalizacion",
                "operationId": "EstadoLegalizacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoLegalizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoLegalizacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_legalizacion/{id}": {
            "get": {
                "tags": [
                    "estado_legalizacion"
                ],
                "description": "get EstadoLegalizacion by id",
                "operationId": "EstadoLegalizacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_legalizacion"
                ],
                "description": "update the EstadoLegalizacion",
                "operationId": "EstadoLegalizacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoLegalizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoLegalizacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_legalizacion"
                ],
                "description": "delete the EstadoLegalizacion",
                "operationId": "EstadoLegalizacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_legalizacion_avance_legalizacion/": {
            "get": {
                "tags": [
                    "estado_legalizacion_avance_legalizacion"
                ],
                "description": "get EstadoLegalizacionAvanceLegalizacion",
                "operationId": "EstadoLegalizacionAvanceLegalizacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoLegalizacionAvanceLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_legalizacion_avance_legalizacion"
                ],
                "description": "create EstadoLegalizacionAvanceLegalizacion",
                "operationId": "EstadoLegalizacionAvanceLegalizacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoLegalizacionAvanceLegalizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoLegalizacionAvanceLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoLegalizacionAvanceLegalizacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_legalizacion_avance_legalizacion/AddEstadoLegalizacion": {
            "post": {
                "tags": [
                    "estado_legalizacion_avance_legalizacion"
                ],
                "description": "Insert a record to modify status to a legalization",
                "operationId": "EstadoLegalizacionAvanceLegalizacionController.AddEstadoLegalizacion",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenDevolucionEstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoLegalizacionAvanceLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributariaEstadoDevolucion"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/estado_legalizacion_avance_legalizacion/{id}": {
            "get": {
                "tags": [
                    "estado_legalizacion_avance_legalizacion"
                ],
                "description": "get EstadoLegalizacionAvanceLegalizacion by id",
                "operationId": "EstadoLegalizacionAvanceLegalizacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoLegalizacionAvanceLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_legalizacion_avance_legalizacion"
                ],
                "description": "update the EstadoLegalizacionAvanceLegalizacion",
                "operationId": "EstadoLegalizacionAvanceLegalizacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoLegalizacionAvanceLegalizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoLegalizacionAvanceLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoLegalizacionAvanceLegalizacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_legalizacion_avance_legalizacion"
                ],
                "description": "delete the EstadoLegalizacionAvanceLegalizacion",
                "operationId": "EstadoLegalizacionAvanceLegalizacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_movimiento_apropiacion/": {
            "get": {
                "tags": [
                    "estado_movimiento_apropiacion"
                ],
                "description": "get EstadoMovimientoApropiacion",
                "operationId": "EstadoMovimientoApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoMovimientoApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_movimiento_apropiacion"
                ],
                "description": "create EstadoMovimientoApropiacion",
                "operationId": "EstadoMovimientoApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoMovimientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoMovimientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoMovimientoApropiacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_movimiento_apropiacion/{id}": {
            "get": {
                "tags": [
                    "estado_movimiento_apropiacion"
                ],
                "description": "get EstadoMovimientoApropiacion by id",
                "operationId": "EstadoMovimientoApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoMovimientoApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_movimiento_apropiacion"
                ],
                "description": "update the EstadoMovimientoApropiacion",
                "operationId": "EstadoMovimientoApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoMovimientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoMovimientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoMovimientoApropiacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_movimiento_apropiacion"
                ],
                "description": "delete the EstadoMovimientoApropiacion",
                "operationId": "EstadoMovimientoApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_movimiento_contable/": {
            "get": {
                "tags": [
                    "estado_movimiento_contable"
                ],
                "description": "get EstadoMovimientoContable",
                "operationId": "EstadoMovimientoContableController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoMovimientoContable"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_movimiento_contable"
                ],
                "description": "create EstadoMovimientoContable",
                "operationId": "EstadoMovimientoContableController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoMovimientoContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoMovimientoContable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoMovimientoContable"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_movimiento_contable/{id}": {
            "get": {
                "tags": [
                    "estado_movimiento_contable"
                ],
                "description": "get EstadoMovimientoContable by id",
                "operationId": "EstadoMovimientoContableController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoMovimientoContable"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_movimiento_contable"
                ],
                "description": "update the EstadoMovimientoContable",
                "operationId": "EstadoMovimientoContableController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoMovimientoContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoMovimientoContable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoMovimientoContable"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_movimiento_contable"
                ],
                "description": "delete the EstadoMovimientoContable",
                "operationId": "EstadoMovimientoContableController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_orden_pago/": {
            "get": {
                "tags": [
                    "estado_orden_pago"
                ],
                "description": "get EstadoOrdenPago",
                "operationId": "EstadoOrdenPagoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoOrdenPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_orden_pago"
                ],
                "description": "create EstadoOrdenPago",
                "operationId": "EstadoOrdenPagoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoOrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoOrdenPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoOrdenPago"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_orden_pago/{id}": {
            "get": {
                "tags": [
                    "estado_orden_pago"
                ],
                "description": "get EstadoOrdenPago by id",
                "operationId": "EstadoOrdenPagoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoOrdenPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_orden_pago"
                ],
                "description": "update the EstadoOrdenPago",
                "operationId": "EstadoOrdenPagoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoOrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoOrdenPago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoOrdenPago"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_orden_pago"
                ],
                "description": "delete the EstadoOrdenPago",
                "operationId": "EstadoOrdenPagoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_registro_presupuestal/": {
            "get": {
                "tags": [
                    "estado_registro_presupuestal"
                ],
                "description": "get EstadoRegistroPresupuestal",
                "operationId": "EstadoRegistroPresupuestalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoRegistroPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_registro_presupuestal"
                ],
                "description": "create EstadoRegistroPresupuestal",
                "operationId": "EstadoRegistroPresupuestalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoRegistroPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoRegistroPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoRegistroPresupuestal"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_registro_presupuestal/{id}": {
            "get": {
                "tags": [
                    "estado_registro_presupuestal"
                ],
                "description": "get EstadoRegistroPresupuestal by id",
                "operationId": "EstadoRegistroPresupuestalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoRegistroPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_registro_presupuestal"
                ],
                "description": "update the EstadoRegistroPresupuestal",
                "operationId": "EstadoRegistroPresupuestalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoRegistroPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoRegistroPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoRegistroPresupuestal"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_registro_presupuestal"
                ],
                "description": "delete the EstadoRegistroPresupuestal",
                "operationId": "EstadoRegistroPresupuestalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_reserva_presupuestal/": {
            "get": {
                "tags": [
                    "estado_reserva_presupuestal"
                ],
                "description": "get EstadoReservaPresupuestal",
                "operationId": "EstadoReservaPresupuestalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoReservaPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_reserva_presupuestal"
                ],
                "description": "create EstadoReservaPresupuestal",
                "operationId": "EstadoReservaPresupuestalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoReservaPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoReservaPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoReservaPresupuestal"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_reserva_presupuestal/{id}": {
            "get": {
                "tags": [
                    "estado_reserva_presupuestal"
                ],
                "description": "get EstadoReservaPresupuestal by id",
                "operationId": "EstadoReservaPresupuestalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoReservaPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_reserva_presupuestal"
                ],
                "description": "update the EstadoReservaPresupuestal",
                "operationId": "EstadoReservaPresupuestalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoReservaPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoReservaPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoReservaPresupuestal"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_reserva_presupuestal"
                ],
                "description": "delete the EstadoReservaPresupuestal",
                "operationId": "EstadoReservaPresupuestalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estructura_cuentas/": {
            "get": {
                "tags": [
                    "estructura_cuentas"
                ],
                "description": "get EstructuraCuentas",
                "operationId": "EstructuraCuentasController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstructuraCuentas"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estructura_cuentas"
                ],
                "description": "create EstructuraCuentas",
                "operationId": "EstructuraCuentasController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstructuraCuentas content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstructuraCuentas"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstructuraCuentas"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estructura_cuentas/{id}": {
            "get": {
                "tags": [
                    "estructura_cuentas"
                ],
                "description": "get EstructuraCuentas by id",
                "operationId": "EstructuraCuentasController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstructuraCuentas"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estructura_cuentas"
                ],
                "description": "update the EstructuraCuentas",
                "operationId": "EstructuraCuentasController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstructuraCuentas content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstructuraCuentas"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstructuraCuentas"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estructura_cuentas"
                ],
                "description": "delete the EstructuraCuentas",
                "operationId": "EstructuraCuentasController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estructura_niveles_clasificacion/": {
            "get": {
                "tags": [
                    "estructura_niveles_clasificacion"
                ],
                "description": "get EstructuraNivelesClasificacion",
                "operationId": "EstructuraNivelesClasificacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstructuraNivelesClasificacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estructura_niveles_clasificacion"
                ],
                "description": "create EstructuraNivelesClasificacion",
                "operationId": "EstructuraNivelesClasificacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstructuraNivelesClasificacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstructuraNivelesClasificacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstructuraNivelesClasificacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estructura_niveles_clasificacion/{id}": {
            "get": {
                "tags": [
                    "estructura_niveles_clasificacion"
                ],
                "description": "get EstructuraNivelesClasificacion by id",
                "operationId": "EstructuraNivelesClasificacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstructuraNivelesClasificacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estructura_niveles_clasificacion"
                ],
                "description": "update the EstructuraNivelesClasificacion",
                "operationId": "EstructuraNivelesClasificacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstructuraNivelesClasificacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstructuraNivelesClasificacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstructuraNivelesClasificacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estructura_niveles_clasificacion"
                ],
                "description": "delete the EstructuraNivelesClasificacion",
                "operationId": "EstructuraNivelesClasificacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/etapa_avance/": {
            "get": {
                "tags": [
                    "etapa_avance"
                ],
                "description": "get EtapaAvance",
                "operationId": "EtapaAvanceController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EtapaAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "etapa_avance"
                ],
                "description": "create EtapaAvance",
                "operationId": "EtapaAvanceController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EtapaAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EtapaAvance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EtapaAvance"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/etapa_avance/{id}": {
            "get": {
                "tags": [
                    "etapa_avance"
                ],
                "description": "get EtapaAvance by id",
                "operationId": "EtapaAvanceController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EtapaAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "etapa_avance"
                ],
                "description": "update the EtapaAvance",
                "operationId": "EtapaAvanceController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EtapaAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EtapaAvance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EtapaAvance"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "etapa_avance"
                ],
                "description": "delete the EtapaAvance",
                "operationId": "EtapaAvanceController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/forma_ingreso/": {
            "get": {
                "tags": [
                    "forma_ingreso"
                ],
                "description": "get FormaIngreso",
                "operationId": "FormaIngresoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FormaIngreso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "forma_ingreso"
                ],
                "description": "create FormaIngreso",
                "operationId": "FormaIngresoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FormaIngreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FormaIngreso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FormaIngreso"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/forma_ingreso/{id}": {
            "get": {
                "tags": [
                    "forma_ingreso"
                ],
                "description": "get FormaIngreso by id",
                "operationId": "FormaIngresoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FormaIngreso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "forma_ingreso"
                ],
                "description": "update the FormaIngreso",
                "operationId": "FormaIngresoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FormaIngreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FormaIngreso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FormaIngreso"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "forma_ingreso"
                ],
                "description": "delete the FormaIngreso",
                "operationId": "FormaIngresoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/forma_pago/": {
            "get": {
                "tags": [
                    "forma_pago"
                ],
                "description": "get FormaPago",
                "operationId": "FormaPagoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FormaPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "forma_pago"
                ],
                "description": "create FormaPago",
                "operationId": "FormaPagoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FormaPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FormaPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FormaPago"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/forma_pago/{id}": {
            "get": {
                "tags": [
                    "forma_pago"
                ],
                "description": "get FormaPago by id",
                "operationId": "FormaPagoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FormaPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "forma_pago"
                ],
                "description": "update the FormaPago",
                "operationId": "FormaPagoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FormaPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FormaPago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FormaPago"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "forma_pago"
                ],
                "description": "delete the FormaPago",
                "operationId": "FormaPagoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/fuente_financiamiento/": {
            "get": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "get FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "create FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FuenteFinanciamiento"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/fuente_financiamiento/DeleteModificacionFuenteFinanciamientoTr": {
            "post": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "Delete ModificacionFuenteFinanciamiento with Tr",
                "operationId": "FuenteFinanciamientoController.DeleteModificacionFuenteFinanciamientoTr",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FuenteFinanciamiento"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento/DeleteMovimientoFuenteFinanciamientoTr/{id}": {
            "delete": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "delete FuenteFinanciamiento with Tr",
                "operationId": "FuenteFinanciamientoController.DeleteMovimientoFuenteFinanciamientoTr",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FuenteFinanciamiento"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento/MovimientoFuenteFinanciamientoTr": {
            "post": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "create FuenteFinanciamiento with Tr",
                "operationId": "FuenteFinanciamientoController.MovimientoFuenteFinanciamientoTr",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FuenteFinanciamiento"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento/RegistrarFuenteFinanciamientoTr": {
            "post": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "create FuenteFinanciamiento with Tr",
                "operationId": "FuenteFinanciamientoController.RegistrarFuenteFinanciamientoTr",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FuenteFinanciamiento"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento/{id}": {
            "get": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "get FuenteFinanciamiento by id",
                "operationId": "FuenteFinanciamientoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "update the FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "delete the FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/fuente_financiamiento_apropiacion/": {
            "get": {
                "tags": [
                    "fuente_financiamiento_apropiacion"
                ],
                "description": "get FuenteFinanciamientoApropiacion",
                "operationId": "FuenteFinanciamientoApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "fuente_financiamiento_apropiacion"
                ],
                "description": "create FuenteFinanciamientoApropiacion",
                "operationId": "FuenteFinanciamientoApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FuenteFinanciamientoApropiacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/fuente_financiamiento_apropiacion/{id}": {
            "get": {
                "tags": [
                    "fuente_financiamiento_apropiacion"
                ],
                "description": "get FuenteFinanciamientoApropiacion by id",
                "operationId": "FuenteFinanciamientoApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "fuente_financiamiento_apropiacion"
                ],
                "description": "update the FuenteFinanciamientoApropiacion",
                "operationId": "FuenteFinanciamientoApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fuente_financiamiento_apropiacion"
                ],
                "description": "delete the FuenteFinanciamientoApropiacion",
                "operationId": "FuenteFinanciamientoApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/giro/": {
            "get": {
                "tags": [
                    "giro"
                ],
                "description": "get Giro",
                "operationId": "GiroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Giro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "giro"
                ],
                "description": "create Giro",
                "operationId": "GiroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Giro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Giro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Giro"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/giro/GetCuentasEspeciales": {
            "get": {
                "tags": [
                    "giro"
                ],
                "description": "obtiene las Cuentas Especiales de cada Orden de Pago",
                "operationId": "GiroController.GetCuentasEspeciales",
                "parameters": [
                    {
                        "in": "idordenpago",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Giro"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/giro/GetSumGiro/": {
            "get": {
                "tags": [
                    "giro"
                ],
                "description": "obtiene la Suma del Giro",
                "operationId": "GiroController.GetSumGiro",
                "parameters": [
                    {
                        "in": "idordenpago",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Giro"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/giro/GetValueEndoso/": {
            "get": {
                "tags": [
                    "giro"
                ],
                "description": "obtiene el valor del Endoso",
                "operationId": "GiroController.GetValueEndoso",
                "parameters": [
                    {
                        "in": "IdGiro",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "idordenpago",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Giro"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/giro/RegistrarGiroDescuentos": {
            "post": {
                "tags": [
                    "giro"
                ],
                "description": "RegistrarGiroDescuentos orden_pago de proveedor, concepto_ordenpago, movimientos contables",
                "operationId": "GiroController.RegistrarGiroDescuentos",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for giro descuentos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Goru"
                        }
                    },
                    {
                        "in": "query",
                        "name": "idcuenta",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "idordenpago",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "idgiro",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Giro"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/giro/{id}": {
            "get": {
                "tags": [
                    "giro"
                ],
                "description": "get Giro by id",
                "operationId": "GiroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Giro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "giro"
                ],
                "description": "update the Giro",
                "operationId": "GiroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Giro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Giro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Giro"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "giro"
                ],
                "description": "delete the Giro",
                "operationId": "GiroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/giroRegistrarGiro": {
            "post": {
                "tags": [
                    "giro"
                ],
                "description": "Registrar Giro orden_pago de proveedor, concepto_ordenpago, mivimientos contables",
                "operationId": "GiroController.RegistrarGiro",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for giro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.giro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Giro"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/giro_detalle/": {
            "get": {
                "tags": [
                    "giro_detalle"
                ],
                "description": "get GiroDetalle",
                "operationId": "GiroDetalleController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GiroDetalle"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "giro_detalle"
                ],
                "description": "create GiroDetalle",
                "operationId": "GiroDetalleController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for GiroDetalle content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GiroDetalle"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.GiroDetalle"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/giro_detalle/{id}": {
            "get": {
                "tags": [
                    "giro_detalle"
                ],
                "description": "get GiroDetalle by id",
                "operationId": "GiroDetalleController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GiroDetalle"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "giro_detalle"
                ],
                "description": "update the GiroDetalle",
                "operationId": "GiroDetalleController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for GiroDetalle content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GiroDetalle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GiroDetalle"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "giro_detalle"
                ],
                "description": "delete the GiroDetalle",
                "operationId": "GiroDetalleController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/giro_estado_giro/": {
            "get": {
                "tags": [
                    "giro_estado_giro"
                ],
                "description": "get GiroEstadoGiro",
                "operationId": "GiroEstadoGiroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GiroEstadoGiro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "giro_estado_giro"
                ],
                "description": "create GiroEstadoGiro",
                "operationId": "GiroEstadoGiroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for GiroEstadoGiro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GiroEstadoGiro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.GiroEstadoGiro"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/giro_estado_giro/{id}": {
            "get": {
                "tags": [
                    "giro_estado_giro"
                ],
                "description": "get GiroEstadoGiro by id",
                "operationId": "GiroEstadoGiroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GiroEstadoGiro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "giro_estado_giro"
                ],
                "description": "update the GiroEstadoGiro",
                "operationId": "GiroEstadoGiroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for GiroEstadoGiro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GiroEstadoGiro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GiroEstadoGiro"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "giro_estado_giro"
                ],
                "description": "delete the GiroEstadoGiro",
                "operationId": "GiroEstadoGiroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/historico_inversion/": {
            "get": {
                "tags": [
                    "historico_inversion"
                ],
                "description": "get HistoricoInversion",
                "operationId": "HistoricoInversionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HistoricoInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "historico_inversion"
                ],
                "description": "create HistoricoInversion",
                "operationId": "HistoricoInversionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for HistoricoInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HistoricoInversion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.HistoricoInversion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/historico_inversion/{id}": {
            "get": {
                "tags": [
                    "historico_inversion"
                ],
                "description": "get HistoricoInversion by id",
                "operationId": "HistoricoInversionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HistoricoInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "historico_inversion"
                ],
                "description": "update the HistoricoInversion",
                "operationId": "HistoricoInversionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for HistoricoInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HistoricoInversion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HistoricoInversion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "historico_inversion"
                ],
                "description": "delete the HistoricoInversion",
                "operationId": "HistoricoInversionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/homologacion_comprobantes/": {
            "get": {
                "tags": [
                    "homologacion_comprobantes"
                ],
                "description": "get HomologacionComprobantes",
                "operationId": "HomologacionComprobantesController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionComprobantes"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "homologacion_comprobantes"
                ],
                "description": "create HomologacionComprobantes",
                "operationId": "HomologacionComprobantesController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for HomologacionComprobantes content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionComprobantes"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.HomologacionComprobantes"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/homologacion_comprobantes/{id}": {
            "get": {
                "tags": [
                    "homologacion_comprobantes"
                ],
                "description": "get HomologacionComprobantes by id",
                "operationId": "HomologacionComprobantesController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionComprobantes"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "homologacion_comprobantes"
                ],
                "description": "update the HomologacionComprobantes",
                "operationId": "HomologacionComprobantesController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for HomologacionComprobantes content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionComprobantes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionComprobantes"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "homologacion_comprobantes"
                ],
                "description": "delete the HomologacionComprobantes",
                "operationId": "HomologacionComprobantesController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/homologacion_concepto/": {
            "get": {
                "tags": [
                    "homologacion_concepto"
                ],
                "description": "get HomologacionConcepto",
                "operationId": "HomologacionConceptoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "homologacion_concepto"
                ],
                "description": "create HomologacionConcepto",
                "operationId": "HomologacionConceptoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for HomologacionConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionConcepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.HomologacionConcepto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/homologacion_concepto/{id}": {
            "get": {
                "tags": [
                    "homologacion_concepto"
                ],
                "description": "get HomologacionConcepto by id",
                "operationId": "HomologacionConceptoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "homologacion_concepto"
                ],
                "description": "update the HomologacionConcepto",
                "operationId": "HomologacionConceptoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for HomologacionConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionConcepto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionConcepto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "homologacion_concepto"
                ],
                "description": "delete the HomologacionConcepto",
                "operationId": "HomologacionConceptoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/homologacion_conceptoActualizarHomologacionConcepto": {
            "post": {
                "tags": [
                    "homologacion_concepto"
                ],
                "description": "Actualiza homologacion_concepto y  de concepto_tesoral_facultad_proyecto",
                "operationId": "HomologacionConceptoController.ActualizarHomologacionConcepto",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for homologacion_concepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.homologacion_concepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenPago"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/homologacion_conceptoRegistrarHomologacionConcepto": {
            "post": {
                "tags": [
                    "homologacion_concepto"
                ],
                "description": "Registrar homologacion_concepto y  de concepto_tesoral_facultad_proyecto",
                "operationId": "HomologacionConceptoController.RegistrarHomologacionConcepto",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for homologacion_concepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.homologacion_concepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenPago"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/homologacion_descuento/": {
            "get": {
                "tags": [
                    "homologacion_descuento"
                ],
                "description": "get HomologacionDescuento",
                "operationId": "HomologacionDescuentoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionDescuento"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "homologacion_descuento"
                ],
                "description": "create HomologacionDescuento",
                "operationId": "HomologacionDescuentoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for HomologacionDescuento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionDescuento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.HomologacionDescuento"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/homologacion_descuento/{id}": {
            "get": {
                "tags": [
                    "homologacion_descuento"
                ],
                "description": "get HomologacionDescuento by id",
                "operationId": "HomologacionDescuentoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionDescuento"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "homologacion_descuento"
                ],
                "description": "update the HomologacionDescuento",
                "operationId": "HomologacionDescuentoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for HomologacionDescuento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionDescuento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HomologacionDescuento"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "homologacion_descuento"
                ],
                "description": "delete the HomologacionDescuento",
                "operationId": "HomologacionDescuentoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/informacion_adicional_banco/": {
            "get": {
                "tags": [
                    "informacion_adicional_banco"
                ],
                "description": "get InformacionAdicionalBanco",
                "operationId": "InformacionAdicionalBancoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InformacionAdicionalBanco"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "informacion_adicional_banco"
                ],
                "description": "create InformacionAdicionalBanco",
                "operationId": "InformacionAdicionalBancoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionAdicionalBanco content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionAdicionalBanco"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InformacionAdicionalBanco"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/informacion_adicional_banco/{id}": {
            "get": {
                "tags": [
                    "informacion_adicional_banco"
                ],
                "description": "get InformacionAdicionalBanco by id",
                "operationId": "InformacionAdicionalBancoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InformacionAdicionalBanco"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "informacion_adicional_banco"
                ],
                "description": "update the InformacionAdicionalBanco",
                "operationId": "InformacionAdicionalBancoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionAdicionalBanco content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionAdicionalBanco"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InformacionAdicionalBanco"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "informacion_adicional_banco"
                ],
                "description": "delete the InformacionAdicionalBanco",
                "operationId": "InformacionAdicionalBancoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/ingreso/": {
            "get": {
                "tags": [
                    "ingreso"
                ],
                "description": "get Ingreso",
                "operationId": "IngresoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Ingreso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "ingreso"
                ],
                "description": "create Ingreso",
                "operationId": "IngresoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Ingreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Ingreso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Ingreso"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/ingreso/AprobacionContableIngreso": {
            "post": {
                "tags": [
                    "ingreso"
                ],
                "description": "Aprobar Ingreso",
                "operationId": "IngresoController.AprobacionContableIngreso",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Ingreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Ingreso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Ingreso"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/ingreso/AprobacionPresupuestalIngreso": {
            "post": {
                "tags": [
                    "ingreso"
                ],
                "description": "Aprobar Ingreso",
                "operationId": "IngresoController.AprobacionPresupuestalIngreso",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Ingreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Ingreso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Ingreso"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/ingreso/CreateIngresos": {
            "post": {
                "tags": [
                    "ingreso"
                ],
                "description": "create Ingreso",
                "operationId": "IngresoController.CreateIngresos",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Ingreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Ingreso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Ingreso"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/ingreso/RechazoContableIngreso": {
            "post": {
                "tags": [
                    "ingreso"
                ],
                "description": "Aprobar Ingreso",
                "operationId": "IngresoController.RechazoContableIngreso",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Ingreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Ingreso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Ingreso"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/ingreso/RechazoPresupuestalIngreso": {
            "post": {
                "tags": [
                    "ingreso"
                ],
                "description": "Aprobar Ingreso",
                "operationId": "IngresoController.RechazoPresupuestalIngreso",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Ingreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Ingreso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Ingreso"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/ingreso/{id}": {
            "get": {
                "tags": [
                    "ingreso"
                ],
                "description": "get Ingreso by id",
                "operationId": "IngresoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Ingreso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "ingreso"
                ],
                "description": "update the Ingreso",
                "operationId": "IngresoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Ingreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Ingreso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Ingreso"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ingreso"
                ],
                "description": "delete the Ingreso",
                "operationId": "IngresoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/ingreso_concepto/": {
            "get": {
                "tags": [
                    "ingreso_concepto"
                ],
                "description": "get IngresoConcepto",
                "operationId": "IngresoConceptoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.IngresoConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "ingreso_concepto"
                ],
                "description": "create IngresoConcepto",
                "operationId": "IngresoConceptoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for IngresoConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IngresoConcepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.IngresoConcepto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/ingreso_concepto/{id}": {
            "get": {
                "tags": [
                    "ingreso_concepto"
                ],
                "description": "get IngresoConcepto by id",
                "operationId": "IngresoConceptoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.IngresoConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "ingreso_concepto"
                ],
                "description": "update the IngresoConcepto",
                "operationId": "IngresoConceptoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for IngresoConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IngresoConcepto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.IngresoConcepto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ingreso_concepto"
                ],
                "description": "delete the IngresoConcepto",
                "operationId": "IngresoConceptoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/ingreso_estado_ingreso/": {
            "get": {
                "tags": [
                    "ingreso_estado_ingreso"
                ],
                "description": "get IngresoEstadoIngreso",
                "operationId": "IngresoEstadoIngresoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.IngresoEstadoIngreso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "ingreso_estado_ingreso"
                ],
                "description": "create IngresoEstadoIngreso",
                "operationId": "IngresoEstadoIngresoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for IngresoEstadoIngreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IngresoEstadoIngreso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.IngresoEstadoIngreso"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/ingreso_estado_ingreso/{id}": {
            "get": {
                "tags": [
                    "ingreso_estado_ingreso"
                ],
                "description": "get IngresoEstadoIngreso by id",
                "operationId": "IngresoEstadoIngresoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.IngresoEstadoIngreso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "ingreso_estado_ingreso"
                ],
                "description": "update the IngresoEstadoIngreso",
                "operationId": "IngresoEstadoIngresoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for IngresoEstadoIngreso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IngresoEstadoIngreso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.IngresoEstadoIngreso"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ingreso_estado_ingreso"
                ],
                "description": "delete the IngresoEstadoIngreso",
                "operationId": "IngresoEstadoIngresoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/ingreso_sin_situacion_fondos/": {
            "get": {
                "tags": [
                    "ingreso_sin_situacion_fondos"
                ],
                "description": "get IngresoSinSituacionFondos",
                "operationId": "IngresoSinSituacionFondosController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.IngresoSinSituacionFondos"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "ingreso_sin_situacion_fondos"
                ],
                "description": "create IngresoSinSituacionFondos",
                "operationId": "IngresoSinSituacionFondosController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for IngresoSinSituacionFondos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IngresoSinSituacionFondos"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.IngresoSinSituacionFondos"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/ingreso_sin_situacion_fondos/{id}": {
            "get": {
                "tags": [
                    "ingreso_sin_situacion_fondos"
                ],
                "description": "get IngresoSinSituacionFondos by id",
                "operationId": "IngresoSinSituacionFondosController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.IngresoSinSituacionFondos"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "ingreso_sin_situacion_fondos"
                ],
                "description": "update the IngresoSinSituacionFondos",
                "operationId": "IngresoSinSituacionFondosController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for IngresoSinSituacionFondos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IngresoSinSituacionFondos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.IngresoSinSituacionFondos"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ingreso_sin_situacion_fondos"
                ],
                "description": "delete the IngresoSinSituacionFondos",
                "operationId": "IngresoSinSituacionFondosController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/ingreso_sin_situacion_fondos_estado/": {
            "get": {
                "tags": [
                    "ingreso_sin_situacion_fondos_estado"
                ],
                "description": "get IngresoSinSituacionFondosEstado",
                "operationId": "IngresoSinSituacionFondosEstadoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.IngresoSinSituacionFondosEstado"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "ingreso_sin_situacion_fondos_estado"
                ],
                "description": "create IngresoSinSituacionFondosEstado",
                "operationId": "IngresoSinSituacionFondosEstadoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for IngresoSinSituacionFondosEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IngresoSinSituacionFondosEstado"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.IngresoSinSituacionFondosEstado"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/ingreso_sin_situacion_fondos_estado/{id}": {
            "get": {
                "tags": [
                    "ingreso_sin_situacion_fondos_estado"
                ],
                "description": "get IngresoSinSituacionFondosEstado by id",
                "operationId": "IngresoSinSituacionFondosEstadoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.IngresoSinSituacionFondosEstado"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "ingreso_sin_situacion_fondos_estado"
                ],
                "description": "update the IngresoSinSituacionFondosEstado",
                "operationId": "IngresoSinSituacionFondosEstadoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for IngresoSinSituacionFondosEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IngresoSinSituacionFondosEstado"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.IngresoSinSituacionFondosEstado"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ingreso_sin_situacion_fondos_estado"
                ],
                "description": "delete the IngresoSinSituacionFondosEstado",
                "operationId": "IngresoSinSituacionFondosEstadoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/ingreso_sin_situacion_fondos_estadoChangeExistingStates/": {
            "post": {
                "tags": [
                    "ingreso_sin_situacion_fondos_estado"
                ],
                "description": "Change Existing States for IngresoSinSituacionFondosEstado",
                "operationId": "IngresoSinSituacionFondosEstadoController.ChangeExistingStates",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for IngresoSinSituacionFondosEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IngresoSinSituacionFondosEstado"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.IngresoSinSituacionFondosEstado"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/inversion/": {
            "get": {
                "tags": [
                    "inversion"
                ],
                "description": "get Inversion",
                "operationId": "InversionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Inversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "inversion"
                ],
                "description": "create Inversion",
                "operationId": "InversionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Inversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Inversion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Inversion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/inversion/{id}": {
            "get": {
                "tags": [
                    "inversion"
                ],
                "description": "get Inversion by id",
                "operationId": "InversionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Inversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "inversion"
                ],
                "description": "update the Inversion",
                "operationId": "InversionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Inversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Inversion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Inversion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "inversion"
                ],
                "description": "delete the Inversion",
                "operationId": "InversionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/inversion_concepto/": {
            "get": {
                "tags": [
                    "inversion_concepto"
                ],
                "description": "get InversionConcepto",
                "operationId": "InversionConceptoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InversionConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "inversion_concepto"
                ],
                "description": "create InversionConcepto",
                "operationId": "InversionConceptoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InversionConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InversionConcepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InversionConcepto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/inversion_concepto/{id}": {
            "get": {
                "tags": [
                    "inversion_concepto"
                ],
                "description": "get InversionConcepto by id",
                "operationId": "InversionConceptoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InversionConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "inversion_concepto"
                ],
                "description": "update the InversionConcepto",
                "operationId": "InversionConceptoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InversionConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InversionConcepto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InversionConcepto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "inversion_concepto"
                ],
                "description": "delete the InversionConcepto",
                "operationId": "InversionConceptoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/inversion_estado_inversion/": {
            "get": {
                "tags": [
                    "inversion_estado_inversion"
                ],
                "description": "get InversionEstadoInversion",
                "operationId": "InversionEstadoInversionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InversionEstadoInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "inversion_estado_inversion"
                ],
                "description": "create InversionEstadoInversion",
                "operationId": "InversionEstadoInversionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InversionEstadoInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InversionEstadoInversion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InversionEstadoInversion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/inversion_estado_inversion/AddEstadoInv": {
            "post": {
                "tags": [
                    "inversion_estado_inversion"
                ],
                "description": "Insert a record to modify status to a inversion",
                "operationId": "InversionEstadoInversionController.AddEstadoInv",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InversionEstadoInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InversionEstadoInversion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InversionEstadoInversion"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/inversion_estado_inversion/{id}": {
            "get": {
                "tags": [
                    "inversion_estado_inversion"
                ],
                "description": "get InversionEstadoInversion by id",
                "operationId": "InversionEstadoInversionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InversionEstadoInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "inversion_estado_inversion"
                ],
                "description": "update the InversionEstadoInversion",
                "operationId": "InversionEstadoInversionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InversionEstadoInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InversionEstadoInversion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InversionEstadoInversion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "inversion_estado_inversion"
                ],
                "description": "delete the InversionEstadoInversion",
                "operationId": "InversionEstadoInversionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/inversiones_acta_inversion/": {
            "get": {
                "tags": [
                    "inversiones_acta_inversion"
                ],
                "description": "get InversionesActaInversion",
                "operationId": "InversionesActaInversionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InversionesActaInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "inversiones_acta_inversion"
                ],
                "description": "create InversionesActaInversion",
                "operationId": "InversionesActaInversionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InversionesActaInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InversionesActaInversion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InversionesActaInversion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/inversiones_acta_inversion/CreateInversion": {
            "post": {
                "tags": [
                    "inversiones_acta_inversion"
                ],
                "description": "Insert an entire inversion in database returns error if record cant be inserted",
                "operationId": "InversionesActaInversionController.CreateInversion",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InversionesActaInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InversionesActaInversion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InversionesActaInversion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/inversiones_acta_inversion/{id}": {
            "get": {
                "tags": [
                    "inversiones_acta_inversion"
                ],
                "description": "get InversionesActaInversion by id",
                "operationId": "InversionesActaInversionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InversionesActaInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "inversiones_acta_inversion"
                ],
                "description": "update the InversionesActaInversion",
                "operationId": "InversionesActaInversionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InversionesActaInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InversionesActaInversion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.InversionesActaInversion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "inversiones_acta_inversion"
                ],
                "description": "delete the InversionesActaInversion",
                "operationId": "InversionesActaInversionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/modificacion_presupuestal/": {
            "get": {
                "tags": [
                    "modificacion_presupuestal"
                ],
                "description": "get ModificacionPresupuestal",
                "operationId": "ModificacionPresupuestalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ModificacionPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "modificacion_presupuestal"
                ],
                "description": "create ModificacionPresupuestal",
                "operationId": "ModificacionPresupuestalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ModificacionPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModificacionPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ModificacionPresupuestal"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/modificacion_presupuestal/{id}": {
            "get": {
                "tags": [
                    "modificacion_presupuestal"
                ],
                "description": "get ModificacionPresupuestal by id",
                "operationId": "ModificacionPresupuestalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ModificacionPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "modificacion_presupuestal"
                ],
                "description": "update the ModificacionPresupuestal",
                "operationId": "ModificacionPresupuestalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ModificacionPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModificacionPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ModificacionPresupuestal"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "modificacion_presupuestal"
                ],
                "description": "delete the ModificacionPresupuestal",
                "operationId": "ModificacionPresupuestalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/modulo_kronos/": {
            "get": {
                "tags": [
                    "modulo_kronos"
                ],
                "description": "get ModuloKronos",
                "operationId": "ModuloKronosController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ModuloKronos"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "modulo_kronos"
                ],
                "description": "create ModuloKronos",
                "operationId": "ModuloKronosController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ModuloKronos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModuloKronos"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ModuloKronos"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/modulo_kronos/{id}": {
            "get": {
                "tags": [
                    "modulo_kronos"
                ],
                "description": "get ModuloKronos by id",
                "operationId": "ModuloKronosController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ModuloKronos"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "modulo_kronos"
                ],
                "description": "update the ModuloKronos",
                "operationId": "ModuloKronosController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ModuloKronos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModuloKronos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ModuloKronos"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "modulo_kronos"
                ],
                "description": "delete the ModuloKronos",
                "operationId": "ModuloKronosController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/movimiento_apropiacion/": {
            "get": {
                "tags": [
                    "movimiento_apropiacion"
                ],
                "description": "get MovimientoApropiacion",
                "operationId": "MovimientoApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "movimiento_apropiacion"
                ],
                "description": "create MovimientoApropiacion",
                "operationId": "MovimientoApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MovimientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MovimientoApropiacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/movimiento_apropiacion/AprobarMovimietnoApropiacion": {
            "post": {
                "tags": [
                    "movimiento_apropiacion"
                ],
                "description": "create MovimientoApropiacion",
                "operationId": "MovimientoApropiacionController.AprobarMovimietnoApropiacion",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MovimientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MovimientoApropiacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/movimiento_apropiacion/RegistroSolicitudMovimientoApropiacion": {
            "post": {
                "tags": [
                    "movimiento_apropiacion"
                ],
                "description": "create MovimientoApropiacion",
                "operationId": "MovimientoApropiacionController.RegistroSolicitudMovimientoApropiacion",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MovimientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MovimientoApropiacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/movimiento_apropiacion/TotalMovimientosApropiacion/{vigencia}": {
            "get": {
                "tags": [
                    "movimiento_apropiacion"
                ],
                "description": "numero de movimientos segun vigencia",
                "operationId": "MovimientoApropiacionController.TotalMovimientosApropiacion",
                "parameters": [
                    {
                        "in": "query",
                        "name": "vigencia",
                        "description": "vigencia para la consulta del total de disponibilidades",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "UnidadEjecutora",
                        "description": "unidad ejecutora de las solicitudes a consultar",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} total"
                    },
                    "403": {
                        "description": "vigencia is empty"
                    }
                }
            }
        },
        "/movimiento_apropiacion/{id}": {
            "get": {
                "tags": [
                    "movimiento_apropiacion"
                ],
                "description": "get MovimientoApropiacion by id",
                "operationId": "MovimientoApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "movimiento_apropiacion"
                ],
                "description": "update the MovimientoApropiacion",
                "operationId": "MovimientoApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "The fields you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MovimientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "movimiento_apropiacion"
                ],
                "description": "delete the MovimientoApropiacion",
                "operationId": "MovimientoApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/movimiento_apropiacionGetMovimientosApropiacionByApropiacion/{id}": {
            "get": {
                "tags": [
                    "movimiento_apropiacion"
                ],
                "description": "get MovimientoApropiacion by id",
                "operationId": "MovimientoApropiacionController.GetMovimientosApropiacionByApropiacion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/movimiento_apropiacion_disponibilidad_apropiacion/": {
            "get": {
                "tags": [
                    "movimiento_apropiacion_disponibilidad_apropiacion"
                ],
                "description": "get MovimientoApropiacionDisponibilidadApropiacion",
                "operationId": "MovimientoApropiacionDisponibilidadApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacionDisponibilidadApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "movimiento_apropiacion_disponibilidad_apropiacion"
                ],
                "description": "create MovimientoApropiacionDisponibilidadApropiacion",
                "operationId": "MovimientoApropiacionDisponibilidadApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MovimientoApropiacionDisponibilidadApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacionDisponibilidadApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MovimientoApropiacionDisponibilidadApropiacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/movimiento_apropiacion_disponibilidad_apropiacion/{id}": {
            "get": {
                "tags": [
                    "movimiento_apropiacion_disponibilidad_apropiacion"
                ],
                "description": "get MovimientoApropiacionDisponibilidadApropiacion by id",
                "operationId": "MovimientoApropiacionDisponibilidadApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacionDisponibilidadApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "movimiento_apropiacion_disponibilidad_apropiacion"
                ],
                "description": "update the MovimientoApropiacionDisponibilidadApropiacion",
                "operationId": "MovimientoApropiacionDisponibilidadApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MovimientoApropiacionDisponibilidadApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacionDisponibilidadApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoApropiacionDisponibilidadApropiacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "movimiento_apropiacion_disponibilidad_apropiacion"
                ],
                "description": "delete the MovimientoApropiacionDisponibilidadApropiacion",
                "operationId": "MovimientoApropiacionDisponibilidadApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/movimiento_contable/": {
            "get": {
                "tags": [
                    "movimiento_contable"
                ],
                "description": "get MovimientoContable",
                "operationId": "MovimientoContableController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoContable"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "movimiento_contable"
                ],
                "description": "create MovimientoContable",
                "operationId": "MovimientoContableController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MovimientoContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoContable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MovimientoContable"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/movimiento_contable/GetSumMovimientos/": {
            "get": {
                "tags": [
                    "movimiento_contable"
                ],
                "description": "obtiene la Suma del los Movimientos",
                "operationId": "MovimientoContableController.GetSumMovimientos",
                "parameters": [
                    {
                        "in": "idordenpago",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoContable"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/movimiento_contable/{id}": {
            "get": {
                "tags": [
                    "movimiento_contable"
                ],
                "description": "get MovimientoContable by id",
                "operationId": "MovimientoContableController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoContable"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "movimiento_contable"
                ],
                "description": "update the MovimientoContable",
                "operationId": "MovimientoContableController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MovimientoContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoContable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoContable"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "movimiento_contable"
                ],
                "description": "delete the MovimientoContable",
                "operationId": "MovimientoContableController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/movimiento_contablePostArray/": {
            "post": {
                "tags": [
                    "movimiento_contable"
                ],
                "description": "create Array of MovimientoContable",
                "operationId": "MovimientoContableController.Post Array",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MovimientoContable content",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MovimientoContable"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} interface{}"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/movimiento_fuente_financiamiento_apropiacion/": {
            "get": {
                "tags": [
                    "movimiento_fuente_financiamiento_apropiacion"
                ],
                "description": "get MovimientoFuenteFinanciamientoApropiacion",
                "operationId": "MovimientoFuenteFinanciamientoApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoFuenteFinanciamientoApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "movimiento_fuente_financiamiento_apropiacion"
                ],
                "description": "create MovimientoFuenteFinanciamientoApropiacion",
                "operationId": "MovimientoFuenteFinanciamientoApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MovimientoFuenteFinanciamientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoFuenteFinanciamientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MovimientoFuenteFinanciamientoApropiacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/movimiento_fuente_financiamiento_apropiacion/{id}": {
            "get": {
                "tags": [
                    "movimiento_fuente_financiamiento_apropiacion"
                ],
                "description": "get MovimientoFuenteFinanciamientoApropiacion by id",
                "operationId": "MovimientoFuenteFinanciamientoApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoFuenteFinanciamientoApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "movimiento_fuente_financiamiento_apropiacion"
                ],
                "description": "update the MovimientoFuenteFinanciamientoApropiacion",
                "operationId": "MovimientoFuenteFinanciamientoApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MovimientoFuenteFinanciamientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoFuenteFinanciamientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoFuenteFinanciamientoApropiacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "movimiento_fuente_financiamiento_apropiacion"
                ],
                "description": "delete the MovimientoFuenteFinanciamientoApropiacion",
                "operationId": "MovimientoFuenteFinanciamientoApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/nivel_clasificacion/": {
            "get": {
                "tags": [
                    "nivel_clasificacion"
                ],
                "description": "get NivelClasificacion",
                "operationId": "NivelClasificacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.NivelClasificacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "nivel_clasificacion"
                ],
                "description": "create NivelClasificacion",
                "operationId": "NivelClasificacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NivelClasificacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NivelClasificacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.NivelClasificacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/nivel_clasificacion/primer_nivel": {
            "get": {
                "tags": [
                    "nivel_clasificacion"
                ],
                "description": "get GetPrimerNivelClasificacion in EstructuraNivelesClasificacion",
                "operationId": "NivelClasificacionController.Get First Level",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.NivelClasificacion"
                        }
                    },
                    "403": {
                        "description": "raw no exists"
                    }
                }
            }
        },
        "/nivel_clasificacion/{id}": {
            "get": {
                "tags": [
                    "nivel_clasificacion"
                ],
                "description": "get NivelClasificacion by id",
                "operationId": "NivelClasificacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.NivelClasificacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "nivel_clasificacion"
                ],
                "description": "update the NivelClasificacion",
                "operationId": "NivelClasificacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NivelClasificacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NivelClasificacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.NivelClasificacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "nivel_clasificacion"
                ],
                "description": "delete the NivelClasificacion",
                "operationId": "NivelClasificacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/observacion_calendario/": {
            "get": {
                "tags": [
                    "observacion_calendario"
                ],
                "description": "get ObservacionCalendario",
                "operationId": "ObservacionCalendarioController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ObservacionCalendario"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "observacion_calendario"
                ],
                "description": "create ObservacionCalendario",
                "operationId": "ObservacionCalendarioController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ObservacionCalendario content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObservacionCalendario"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ObservacionCalendario"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/observacion_calendario/{id}": {
            "get": {
                "tags": [
                    "observacion_calendario"
                ],
                "description": "get ObservacionCalendario by id",
                "operationId": "ObservacionCalendarioController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ObservacionCalendario"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "observacion_calendario"
                ],
                "description": "update the ObservacionCalendario",
                "operationId": "ObservacionCalendarioController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ObservacionCalendario content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObservacionCalendario"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ObservacionCalendario"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "observacion_calendario"
                ],
                "description": "delete the ObservacionCalendario",
                "operationId": "ObservacionCalendarioController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/orden_devolucion/": {
            "get": {
                "tags": [
                    "orden_devolucion"
                ],
                "description": "get OrdenDevolucion",
                "operationId": "OrdenDevolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "orden_devolucion"
                ],
                "description": "create OrdenDevolucion",
                "operationId": "OrdenDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/orden_devolucion/AddDevolutionOrder": {
            "post": {
                "tags": [
                    "orden_devolucion"
                ],
                "description": "insert devolution order wit all its relations",
                "operationId": "OrdenDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/orden_devolucion/{id}": {
            "get": {
                "tags": [
                    "orden_devolucion"
                ],
                "description": "get OrdenDevolucion by id",
                "operationId": "OrdenDevolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "orden_devolucion"
                ],
                "description": "update the OrdenDevolucion",
                "operationId": "OrdenDevolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "orden_devolucion"
                ],
                "description": "delete the OrdenDevolucion",
                "operationId": "OrdenDevolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/orden_devolucion_estado_devolucion/": {
            "get": {
                "tags": [
                    "orden_devolucion_estado_devolucion"
                ],
                "description": "get OrdenDevolucionEstadoDevolucion",
                "operationId": "OrdenDevolucionEstadoDevolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucionEstadoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "orden_devolucion_estado_devolucion"
                ],
                "description": "create OrdenDevolucionEstadoDevolucion",
                "operationId": "OrdenDevolucionEstadoDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenDevolucionEstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucionEstadoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenDevolucionEstadoDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/orden_devolucion_estado_devolucion/AddEstadoOrdenDevol": {
            "post": {
                "tags": [
                    "orden_devolucion_estado_devolucion"
                ],
                "description": "Insert a record to modify status to a devolution",
                "operationId": "OrdenDevolucionEstadoDevolucionController.AddEstadoOrdenDevol",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenDevolucionEstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucionEstadoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucionEstadoDevolucion"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/orden_devolucion_estado_devolucion/{id}": {
            "get": {
                "tags": [
                    "orden_devolucion_estado_devolucion"
                ],
                "description": "get OrdenDevolucionEstadoDevolucion by id",
                "operationId": "OrdenDevolucionEstadoDevolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucionEstadoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "orden_devolucion_estado_devolucion"
                ],
                "description": "update the OrdenDevolucionEstadoDevolucion",
                "operationId": "OrdenDevolucionEstadoDevolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenDevolucionEstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucionEstadoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucionEstadoDevolucion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "orden_devolucion_estado_devolucion"
                ],
                "description": "delete the OrdenDevolucionEstadoDevolucion",
                "operationId": "OrdenDevolucionEstadoDevolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/orden_devolucion_solicitud_devolucion/": {
            "get": {
                "tags": [
                    "orden_devolucion_solicitud_devolucion"
                ],
                "description": "get OrdenDevolucionSolicitudDevolucion",
                "operationId": "OrdenDevolucionSolicitudDevolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucionSolicitudDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "orden_devolucion_solicitud_devolucion"
                ],
                "description": "create OrdenDevolucionSolicitudDevolucion",
                "operationId": "OrdenDevolucionSolicitudDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenDevolucionSolicitudDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucionSolicitudDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenDevolucionSolicitudDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/orden_devolucion_solicitud_devolucion/{id}": {
            "get": {
                "tags": [
                    "orden_devolucion_solicitud_devolucion"
                ],
                "description": "get OrdenDevolucionSolicitudDevolucion by id",
                "operationId": "OrdenDevolucionSolicitudDevolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucionSolicitudDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "orden_devolucion_solicitud_devolucion"
                ],
                "description": "update the OrdenDevolucionSolicitudDevolucion",
                "operationId": "OrdenDevolucionSolicitudDevolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenDevolucionSolicitudDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucionSolicitudDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenDevolucionSolicitudDevolucion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "orden_devolucion_solicitud_devolucion"
                ],
                "description": "delete the OrdenDevolucionSolicitudDevolucion",
                "operationId": "OrdenDevolucionSolicitudDevolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/orden_pago/": {
            "get": {
                "tags": [
                    "orden_pago"
                ],
                "description": "get OrdenPago",
                "operationId": "OrdenPagoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "orden_pago"
                ],
                "description": "create OrdenPago",
                "operationId": "OrdenPagoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenPago"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/orden_pago/GetOrdenPagoByEstado": {
            "get": {
                "tags": [
                    "orden_pago"
                ],
                "description": "return OrdenPago by Estado",
                "operationId": "OrdenPagoController.GetOrdenPagoByEstado",
                "parameters": [
                    {
                        "in": "query",
                        "name": "codigoEstado",
                        "description": "code estado OrdenPago for search",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "vigencia",
                        "description": "vigencia of OrdenPago for search",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "tipoOp",
                        "description": "tipo OrdenPago for search",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "formaPago",
                        "description": "forma pago OrdenPago for search",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenPago"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/orden_pago/{formato}": {
            "get": {
                "tags": [
                    "orden_pago"
                ],
                "description": "retorba fecga del servidor",
                "operationId": "OrdenPagoController.FechaActual",
                "parameters": [
                    {
                        "in": "formato",
                        "name": "formato",
                        "description": "quiere",
                        "schema": {
                            "$ref": "#/definitions/como"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/orden_pago/{id}": {
            "get": {
                "tags": [
                    "orden_pago"
                ],
                "description": "get OrdenPago by id",
                "operationId": "OrdenPagoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "orden_pago"
                ],
                "description": "update the OrdenPago",
                "operationId": "OrdenPagoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPago"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "orden_pago"
                ],
                "description": "delete the OrdenPago",
                "operationId": "OrdenPagoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/orden_pagoActualizarOpProveedor": {
            "post": {
                "tags": [
                    "orden_pago"
                ],
                "description": "Actualiza orden_pago de proveedor, concepto_ordenpago, mivimientos contables",
                "operationId": "OrdenPagoController.ActualizarOpProveedor",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenPago"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/orden_pagoRegistrarOpProveedor": {
            "post": {
                "tags": [
                    "orden_pago"
                ],
                "description": "Registrar orden_pago de proveedor, concepto_ordenpago, mivimientos contables",
                "operationId": "OrdenPagoController.RegistrarOpProveedor",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenPago"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/orden_pagoValorTotal/{id}": {
            "post": {
                "tags": [
                    "orden_pago"
                ],
                "description": "Valor Total of the OrdenPago",
                "operationId": "OrdenPagoController.ValorTotal",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of orden pago",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPago"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            }
        },
        "/orden_pago_avance_legalizacion/": {
            "get": {
                "tags": [
                    "orden_pago_avance_legalizacion"
                ],
                "description": "get OrdenPagoAvanceLegalizacion",
                "operationId": "OrdenPagoAvanceLegalizacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoAvanceLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "orden_pago_avance_legalizacion"
                ],
                "description": "create OrdenPagoAvanceLegalizacion",
                "operationId": "OrdenPagoAvanceLegalizacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPagoAvanceLegalizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoAvanceLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenPagoAvanceLegalizacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/orden_pago_avance_legalizacion/AddOPAvance": {
            "post": {
                "tags": [
                    "orden_pago_avance_legalizacion"
                ],
                "description": "insert entire pay array for a devolution",
                "operationId": "OrdenPagoAvanceLegalizacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPagoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributaria"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenPagoAvanceLegalizacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/orden_pago_avance_legalizacion/{id}": {
            "get": {
                "tags": [
                    "orden_pago_avance_legalizacion"
                ],
                "description": "get OrdenPagoAvanceLegalizacion by id",
                "operationId": "OrdenPagoAvanceLegalizacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoAvanceLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "orden_pago_avance_legalizacion"
                ],
                "description": "update the OrdenPagoAvanceLegalizacion",
                "operationId": "OrdenPagoAvanceLegalizacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPagoAvanceLegalizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoAvanceLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoAvanceLegalizacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "orden_pago_avance_legalizacion"
                ],
                "description": "delete the OrdenPagoAvanceLegalizacion",
                "operationId": "OrdenPagoAvanceLegalizacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/orden_pago_cuenta_especial/": {
            "get": {
                "tags": [
                    "orden_pago_cuenta_especial"
                ],
                "description": "get OrdenPagoCuentaEspecial",
                "operationId": "OrdenPagoCuentaEspecialController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoCuentaEspecial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "orden_pago_cuenta_especial"
                ],
                "description": "create OrdenPagoCuentaEspecial",
                "operationId": "OrdenPagoCuentaEspecialController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPagoCuentaEspecial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoCuentaEspecial"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenPagoCuentaEspecial"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/orden_pago_cuenta_especial/{id}": {
            "get": {
                "tags": [
                    "orden_pago_cuenta_especial"
                ],
                "description": "get OrdenPagoCuentaEspecial by id",
                "operationId": "OrdenPagoCuentaEspecialController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoCuentaEspecial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "orden_pago_cuenta_especial"
                ],
                "description": "update the OrdenPagoCuentaEspecial",
                "operationId": "OrdenPagoCuentaEspecialController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPagoCuentaEspecial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoCuentaEspecial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoCuentaEspecial"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "orden_pago_cuenta_especial"
                ],
                "description": "delete the OrdenPagoCuentaEspecial",
                "operationId": "OrdenPagoCuentaEspecialController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/orden_pago_estado_orden_pago/": {
            "get": {
                "tags": [
                    "orden_pago_estado_orden_pago"
                ],
                "description": "get OrdenPagoEstadoOrdenPago",
                "operationId": "OrdenPagoEstadoOrdenPagoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoEstadoOrdenPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "orden_pago_estado_orden_pago"
                ],
                "description": "create OrdenPagoEstadoOrdenPago",
                "operationId": "OrdenPagoEstadoOrdenPagoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPagoEstadoOrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoEstadoOrdenPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenPagoEstadoOrdenPago"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/orden_pago_estado_orden_pago/{id}": {
            "get": {
                "tags": [
                    "orden_pago_estado_orden_pago"
                ],
                "description": "get OrdenPagoEstadoOrdenPago by id",
                "operationId": "OrdenPagoEstadoOrdenPagoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoEstadoOrdenPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "orden_pago_estado_orden_pago"
                ],
                "description": "update the OrdenPagoEstadoOrdenPago",
                "operationId": "OrdenPagoEstadoOrdenPagoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPagoEstadoOrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoEstadoOrdenPago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoEstadoOrdenPago"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "orden_pago_estado_orden_pago"
                ],
                "description": "delete the OrdenPagoEstadoOrdenPago",
                "operationId": "OrdenPagoEstadoOrdenPagoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/orden_pago_estado_orden_pagoWorkFlowOrdenPago": {
            "post": {
                "tags": [
                    "orden_pago_estado_orden_pago"
                ],
                "description": "Registrar orden_pago de proveedor, concepto_ordenpago, mivimientos contables",
                "operationId": "OrdenPagoEstadoOrdenPagoController.WorkFlowOrdenPago",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenPago"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/orden_pago_registro_presupuestal/": {
            "get": {
                "tags": [
                    "orden_pago_registro_presupuestal"
                ],
                "description": "get OrdenPagoRegistroPresupuestal",
                "operationId": "OrdenPagoRegistroPresupuestalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoRegistroPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "orden_pago_registro_presupuestal"
                ],
                "description": "create OrdenPagoRegistroPresupuestal",
                "operationId": "OrdenPagoRegistroPresupuestalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPagoRegistroPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoRegistroPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenPagoRegistroPresupuestal"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/orden_pago_registro_presupuestal/{id}": {
            "get": {
                "tags": [
                    "orden_pago_registro_presupuestal"
                ],
                "description": "get OrdenPagoRegistroPresupuestal by id",
                "operationId": "OrdenPagoRegistroPresupuestalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoRegistroPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "orden_pago_registro_presupuestal"
                ],
                "description": "update the OrdenPagoRegistroPresupuestal",
                "operationId": "OrdenPagoRegistroPresupuestalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenPagoRegistroPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoRegistroPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.OrdenPagoRegistroPresupuestal"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "orden_pago_registro_presupuestal"
                ],
                "description": "delete the OrdenPagoRegistroPresupuestal",
                "operationId": "OrdenPagoRegistroPresupuestalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/pasivos_fenecidos/": {
            "post": {
                "tags": [
                    "pasivos_fenecidos"
                ],
                "description": "create Pasivos_fenecidos",
                "operationId": "Pasivos_fenecidosController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Pasivos_fenecidos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pasivos_fenecidos"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Pasivos_fenecidos"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/periodo_contable/": {
            "get": {
                "tags": [
                    "periodo_contable"
                ],
                "description": "get PeriodoContable",
                "operationId": "PeriodoContableController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoContable"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "periodo_contable"
                ],
                "description": "create PeriodoContable",
                "operationId": "PeriodoContableController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PeriodoContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoContable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.PeriodoContable"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/periodo_contable/{id}": {
            "get": {
                "tags": [
                    "periodo_contable"
                ],
                "description": "get PeriodoContable by id",
                "operationId": "PeriodoContableController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoContable"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "periodo_contable"
                ],
                "description": "update the PeriodoContable",
                "operationId": "PeriodoContableController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PeriodoContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoContable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoContable"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "periodo_contable"
                ],
                "description": "delete the PeriodoContable",
                "operationId": "PeriodoContableController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/periodo_plan_cuentas/": {
            "get": {
                "tags": [
                    "periodo_plan_cuentas"
                ],
                "description": "get PeriodoPlanCuentas",
                "operationId": "PeriodoPlanCuentasController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoPlanCuentas"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "periodo_plan_cuentas"
                ],
                "description": "create PeriodoPlanCuentas",
                "operationId": "PeriodoPlanCuentasController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PeriodoPlanCuentas content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoPlanCuentas"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.PeriodoPlanCuentas"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/periodo_plan_cuentas/{id}": {
            "get": {
                "tags": [
                    "periodo_plan_cuentas"
                ],
                "description": "get PeriodoPlanCuentas by id",
                "operationId": "PeriodoPlanCuentasController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoPlanCuentas"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "periodo_plan_cuentas"
                ],
                "description": "update the PeriodoPlanCuentas",
                "operationId": "PeriodoPlanCuentasController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PeriodoPlanCuentas content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoPlanCuentas"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoPlanCuentas"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "periodo_plan_cuentas"
                ],
                "description": "delete the PeriodoPlanCuentas",
                "operationId": "PeriodoPlanCuentasController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/plan_cuentas/": {
            "get": {
                "tags": [
                    "plan_cuentas"
                ],
                "description": "get PlanCuentas",
                "operationId": "PlanCuentasController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PlanCuentas"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "plan_cuentas"
                ],
                "description": "create PlanCuentas",
                "operationId": "PlanCuentasController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PlanCuentas content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PlanCuentas"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.PlanCuentas"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/plan_cuentas/{id}": {
            "get": {
                "tags": [
                    "plan_cuentas"
                ],
                "description": "get PlanCuentas by id",
                "operationId": "PlanCuentasController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PlanCuentas"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "plan_cuentas"
                ],
                "description": "update the PlanCuentas",
                "operationId": "PlanCuentasController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PlanCuentas content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PlanCuentas"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PlanCuentas"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "plan_cuentas"
                ],
                "description": "delete the PlanCuentas",
                "operationId": "PlanCuentasController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/presupuesto_avance/": {
            "get": {
                "tags": [
                    "presupuesto_avance"
                ],
                "description": "get PresupuestoAvance",
                "operationId": "PresupuestoAvanceController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PresupuestoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "presupuesto_avance"
                ],
                "description": "create PresupuestoAvance",
                "operationId": "PresupuestoAvanceController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PresupuestoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PresupuestoAvance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.PresupuestoAvance"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/presupuesto_avance/{id}": {
            "get": {
                "tags": [
                    "presupuesto_avance"
                ],
                "description": "get PresupuestoAvance by id",
                "operationId": "PresupuestoAvanceController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PresupuestoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "presupuesto_avance"
                ],
                "description": "update the PresupuestoAvance",
                "operationId": "PresupuestoAvanceController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PresupuestoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PresupuestoAvance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PresupuestoAvance"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "presupuesto_avance"
                ],
                "description": "delete the PresupuestoAvance",
                "operationId": "PresupuestoAvanceController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/producto/": {
            "get": {
                "tags": [
                    "producto"
                ],
                "description": "get Producto",
                "operationId": "ProductoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Producto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "producto"
                ],
                "description": "create Producto",
                "operationId": "ProductoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Producto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Producto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Producto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/producto/TotalProductos/": {
            "get": {
                "tags": [
                    "producto"
                ],
                "description": "numero de Productos",
                "operationId": "ProductoController.TotalProductos",
                "responses": {
                    "201": {
                        "description": "{int} total"
                    },
                    "403": {
                        "description": "internal error"
                    }
                }
            }
        },
        "/producto/{id}": {
            "get": {
                "tags": [
                    "producto"
                ],
                "description": "get Producto by id",
                "operationId": "ProductoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Producto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "producto"
                ],
                "description": "update the Producto",
                "operationId": "ProductoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Producto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Producto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Producto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "producto"
                ],
                "description": "delete the Producto",
                "operationId": "ProductoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/producto_rubro/": {
            "get": {
                "tags": [
                    "producto_rubro"
                ],
                "description": "get ProductoRubro",
                "operationId": "ProductoRubroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ProductoRubro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "producto_rubro"
                ],
                "description": "create ProductoRubro",
                "operationId": "ProductoRubroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ProductoRubro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductoRubro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ProductoRubro"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/producto_rubro/AddProductoRubrotr/": {
            "post": {
                "tags": [
                    "producto_rubro"
                ],
                "description": "set new product for rubro producto relation",
                "operationId": "ProductoRubroController.AddProductoRubrotr",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ProductoRubro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductoRubro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Alert"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/producto_rubro/SetVariacionProducto/": {
            "post": {
                "tags": [
                    "producto_rubro"
                ],
                "description": "set new product variation",
                "operationId": "ProductoRubroController.SetVariacionProducto",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ProductoRubro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductoRubro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Alert"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/producto_rubro/{id}": {
            "get": {
                "tags": [
                    "producto_rubro"
                ],
                "description": "get ProductoRubro by id",
                "operationId": "ProductoRubroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ProductoRubro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "producto_rubro"
                ],
                "description": "update the ProductoRubro",
                "operationId": "ProductoRubroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ProductoRubro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductoRubro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ProductoRubro"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "producto_rubro"
                ],
                "description": "delete the ProductoRubro",
                "operationId": "ProductoRubroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/razon_devolucion/": {
            "get": {
                "tags": [
                    "razon_devolucion"
                ],
                "description": "get RazonDevolucion",
                "operationId": "RazonDevolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RazonDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "razon_devolucion"
                ],
                "description": "create RazonDevolucion",
                "operationId": "RazonDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RazonDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RazonDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RazonDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/razon_devolucion/{id}": {
            "get": {
                "tags": [
                    "razon_devolucion"
                ],
                "description": "get RazonDevolucion by id",
                "operationId": "RazonDevolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RazonDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "razon_devolucion"
                ],
                "description": "update the RazonDevolucion",
                "operationId": "RazonDevolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RazonDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RazonDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RazonDevolucion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "razon_devolucion"
                ],
                "description": "delete the RazonDevolucion",
                "operationId": "RazonDevolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/registro_comprobantes/": {
            "get": {
                "tags": [
                    "registro_comprobantes"
                ],
                "description": "get RegistroComprobantes",
                "operationId": "RegistroComprobantesController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RegistroComprobantes"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "registro_comprobantes"
                ],
                "description": "create RegistroComprobantes",
                "operationId": "RegistroComprobantesController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RegistroComprobantes content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegistroComprobantes"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RegistroComprobantes"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/registro_comprobantes/{id}": {
            "get": {
                "tags": [
                    "registro_comprobantes"
                ],
                "description": "get RegistroComprobantes by id",
                "operationId": "RegistroComprobantesController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RegistroComprobantes"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "registro_comprobantes"
                ],
                "description": "update the RegistroComprobantes",
                "operationId": "RegistroComprobantesController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RegistroComprobantes content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegistroComprobantes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RegistroComprobantes"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "registro_comprobantes"
                ],
                "description": "delete the RegistroComprobantes",
                "operationId": "RegistroComprobantesController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/registro_presupuestal/": {
            "get": {
                "tags": [
                    "registro_presupuestal"
                ],
                "description": "get RegistroPresupuestal",
                "operationId": "RegistroPresupuestalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "registro_presupuestal"
                ],
                "description": "create RegistroPresupuestal",
                "operationId": "RegistroPresupuestalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RegistroPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RegistroPresupuestal"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/registro_presupuestal/AprobarAnulacion": {
            "post": {
                "tags": [
                    "registro_presupuestal"
                ],
                "description": "aprueba la anulacion de un rp ya sea total o parcial",
                "operationId": "RegistroPresupuestalController.AprobarAnulacionRegistroresupuestal",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AnulacionRegistroPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnulacionRegistroPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AnulacionRegistroPresupuestal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/registro_presupuestal/DeleteRpData/{id}": {
            "delete": {
                "tags": [
                    "registro_presupuestal"
                ],
                "description": "delete the Disponibilidad",
                "operationId": "RegistroPresupuestalController.DeleteRpData",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/registro_presupuestal/TotalRp/{vigencia}": {
            "get": {
                "tags": [
                    "registro_presupuestal"
                ],
                "description": "numero de rp segun vigencia o rango de fechas",
                "operationId": "RegistroPresupuestalController.TotalRp",
                "parameters": [
                    {
                        "in": "query",
                        "name": "vigencia",
                        "description": "vigencia para la consulta del total de rp",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "UnidadEjecutora",
                        "description": "unidad ejecutora de las solicitudes a consultar",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "rangoinicio",
                        "description": "opcional, fecha inicio de consulta de rp",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "rangofin",
                        "description": "opcional, fecha fin de consulta de rp",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} total"
                    },
                    "403": {
                        "description": "vigencia is empty"
                    }
                }
            }
        },
        "/registro_presupuestal/{id}": {
            "get": {
                "tags": [
                    "registro_presupuestal"
                ],
                "description": "get RegistroPresupuestal by id",
                "operationId": "RegistroPresupuestalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "registro_presupuestal"
                ],
                "description": "update the RegistroPresupuestal",
                "operationId": "RegistroPresupuestalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RegistroPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestal"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "registro_presupuestal"
                ],
                "description": "delete the RegistroPresupuestal",
                "operationId": "RegistroPresupuestalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/registro_presupuestalAnular/": {
            "post": {
                "tags": [
                    "registro_presupuestal"
                ],
                "description": "create RegistroPresupuestal",
                "operationId": "RegistroPresupuestalController.Anular",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RegistroPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RegistroPresupuestal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/registro_presupuestalSaldoRp/": {
            "post": {
                "tags": [
                    "registro_presupuestal"
                ],
                "description": "create RegistroPresupuestal",
                "operationId": "RegistroPresupuestalController.SaldoRp",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RegistroPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RegistroPresupuestal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/registro_presupuestalValorActualRp/{id}": {
            "get": {
                "tags": [
                    "registro_presupuestal"
                ],
                "description": "retorna valor actual del RegistroPresupuestal por id",
                "operationId": "RegistroPresupuestalController.Valor Actual Rp",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RegistroPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} suma valor de los RegistroPresupuestal por id"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/registro_presupuestal_disponibilidad_apropiacion/": {
            "get": {
                "tags": [
                    "registro_presupuestal_disponibilidad_apropiacion"
                ],
                "description": "get RegistroPresupuestalDisponibilidadApropiacion",
                "operationId": "RegistroPresupuestalDisponibilidadApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidadApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "registro_presupuestal_disponibilidad_apropiacion"
                ],
                "description": "create RegistroPresupuestalDisponibilidadApropiacion",
                "operationId": "RegistroPresupuestalDisponibilidadApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RegistroPresupuestalDisponibilidadApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidadApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RegistroPresupuestalDisponibilidadApropiacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/registro_presupuestal_disponibilidad_apropiacion/{id}": {
            "get": {
                "tags": [
                    "registro_presupuestal_disponibilidad_apropiacion"
                ],
                "description": "get RegistroPresupuestalDisponibilidadApropiacion by id",
                "operationId": "RegistroPresupuestalDisponibilidadApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidadApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "registro_presupuestal_disponibilidad_apropiacion"
                ],
                "description": "update the RegistroPresupuestalDisponibilidadApropiacion",
                "operationId": "RegistroPresupuestalDisponibilidadApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RegistroPresupuestalDisponibilidadApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidadApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidadApropiacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "registro_presupuestal_disponibilidad_apropiacion"
                ],
                "description": "delete the RegistroPresupuestalDisponibilidadApropiacion",
                "operationId": "RegistroPresupuestalDisponibilidadApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/reintegro/": {
            "get": {
                "tags": [
                    "reintegro"
                ],
                "description": "get Reintegro",
                "operationId": "ReintegroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Reintegro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "reintegro"
                ],
                "description": "create Reintegro",
                "operationId": "ReintegroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Reintegro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reintegro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Reintegro"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/reintegro/Create": {
            "post": {
                "tags": [
                    "reintegro"
                ],
                "description": "create Reintegro",
                "operationId": "ReintegroController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Reintegro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reintegro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Reintegro"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/reintegro/GetAllReintegroDisponible": {
            "get": {
                "tags": [
                    "reintegro"
                ],
                "description": "get Reintegro if income its aproved",
                "operationId": "ReintegroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Reintegro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/reintegro/{id}": {
            "get": {
                "tags": [
                    "reintegro"
                ],
                "description": "get Reintegro by id",
                "operationId": "ReintegroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Reintegro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "reintegro"
                ],
                "description": "update the Reintegro",
                "operationId": "ReintegroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Reintegro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reintegro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Reintegro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "reintegro"
                ],
                "description": "delete the Reintegro",
                "operationId": "ReintegroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/reintegro_avance_legalizacion/": {
            "get": {
                "tags": [
                    "reintegro_avance_legalizacion"
                ],
                "description": "get ReintegroAvanceLegalizacion",
                "operationId": "ReintegroAvanceLegalizacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ReintegroAvanceLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "reintegro_avance_legalizacion"
                ],
                "description": "create ReintegroAvanceLegalizacion",
                "operationId": "ReintegroAvanceLegalizacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ReintegroAvanceLegalizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReintegroAvanceLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ReintegroAvanceLegalizacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/reintegro_avance_legalizacion/AddReintegroAvance": {
            "post": {
                "tags": [
                    "reintegro_avance_legalizacion"
                ],
                "description": "insert tributary devolution wit all its relations",
                "operationId": "ReintegroAvanceLegalizacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevolucionTributaria"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ReintegroAvanceLegalizacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/reintegro_avance_legalizacion/{id}": {
            "get": {
                "tags": [
                    "reintegro_avance_legalizacion"
                ],
                "description": "get ReintegroAvanceLegalizacion by id",
                "operationId": "ReintegroAvanceLegalizacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ReintegroAvanceLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "reintegro_avance_legalizacion"
                ],
                "description": "update the ReintegroAvanceLegalizacion",
                "operationId": "ReintegroAvanceLegalizacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ReintegroAvanceLegalizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReintegroAvanceLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ReintegroAvanceLegalizacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "reintegro_avance_legalizacion"
                ],
                "description": "delete the ReintegroAvanceLegalizacion",
                "operationId": "ReintegroAvanceLegalizacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/requisito_avance/": {
            "get": {
                "tags": [
                    "requisito_avance"
                ],
                "description": "get RequisitoAvance",
                "operationId": "RequisitoAvanceController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "requisito_avance"
                ],
                "description": "create RequisitoAvance",
                "operationId": "RequisitoAvanceController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RequisitoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoAvance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RequisitoAvance"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/requisito_avance/{id}": {
            "get": {
                "tags": [
                    "requisito_avance"
                ],
                "description": "get RequisitoAvance by id",
                "operationId": "RequisitoAvanceController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "requisito_avance"
                ],
                "description": "update the RequisitoAvance",
                "operationId": "RequisitoAvanceController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RequisitoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoAvance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoAvance"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "requisito_avance"
                ],
                "description": "delete the RequisitoAvance",
                "operationId": "RequisitoAvanceController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/requisito_tipo_avance/": {
            "get": {
                "tags": [
                    "requisito_tipo_avance"
                ],
                "description": "get RequisitoTipoAvance",
                "operationId": "RequisitoTipoAvanceController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoTipoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "requisito_tipo_avance"
                ],
                "description": "create RequisitoTipoAvance",
                "operationId": "RequisitoTipoAvanceController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RequisitoTipoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoTipoAvance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RequisitoTipoAvance"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/requisito_tipo_avance/{id}": {
            "get": {
                "tags": [
                    "requisito_tipo_avance"
                ],
                "description": "get RequisitoTipoAvance by id",
                "operationId": "RequisitoTipoAvanceController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoTipoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "requisito_tipo_avance"
                ],
                "description": "update the RequisitoTipoAvance",
                "operationId": "RequisitoTipoAvanceController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RequisitoTipoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoTipoAvance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoTipoAvance"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "requisito_tipo_avance"
                ],
                "description": "delete the RequisitoTipoAvance",
                "operationId": "RequisitoTipoAvanceController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/reserva_presupuestal/": {
            "get": {
                "tags": [
                    "reserva_presupuestal"
                ],
                "description": "get ReservaPresupuestal",
                "operationId": "ReservaPresupuestalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ReservaPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "reserva_presupuestal"
                ],
                "description": "create ReservaPresupuestal",
                "operationId": "ReservaPresupuestalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ReservaPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReservaPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ReservaPresupuestal"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/reserva_presupuestal/{id}": {
            "get": {
                "tags": [
                    "reserva_presupuestal"
                ],
                "description": "get ReservaPresupuestal by id",
                "operationId": "ReservaPresupuestalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ReservaPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "reserva_presupuestal"
                ],
                "description": "update the ReservaPresupuestal",
                "operationId": "ReservaPresupuestalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ReservaPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReservaPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ReservaPresupuestal"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "reserva_presupuestal"
                ],
                "description": "delete the ReservaPresupuestal",
                "operationId": "ReservaPresupuestalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/rubro/": {
            "get": {
                "tags": [
                    "rubro"
                ],
                "description": "get Rubro",
                "operationId": "RubroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "rubro"
                ],
                "description": "create Rubro",
                "operationId": "RubroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Rubro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Rubro"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/rubro/GetIngresoCierre": {
            "get": {
                "tags": [
                    "rubro"
                ],
                "description": "Obtiene informacion para cierre ingresos mes",
                "operationId": "RubroController.Get Ingreso Cierre",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "valor vigencia apropiacion",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "codigo",
                        "description": "numero inicial de codigo rubro consultar",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "mes",
                        "description": "fecha de inicio para el reporte",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/rubro/GetPacValue": {
            "get": {
                "tags": [
                    "rubro"
                ],
                "description": "Obtiene el valor de ejecucion para meses cesrrados",
                "operationId": "RubroController.Get Pac value",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "valor vigencia apropiacion",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "mes",
                        "description": "valor mes a consultar cierre",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "rubro",
                        "description": "id rubro a consultar",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "fuente",
                        "description": "valor de la fuente a consultar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/rubro/GetRubroIngreso": {
            "get": {
                "tags": [
                    "rubro"
                ],
                "description": "get Apropiaciones Hijo",
                "operationId": "RubroController.Get Ingreso Rubro",
                "parameters": [
                    {
                        "in": "path",
                        "name": "apropiacion",
                        "description": "apropiacion a consultar",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "fuente",
                        "description": "fuente a consultar",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "finicio",
                        "description": "fecha de inicio para el reporte",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "ffin",
                        "description": "fecha final para el reporte",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/rubro/GetRubroOrdenPago": {
            "get": {
                "tags": [
                    "rubro"
                ],
                "description": "get Apropiaciones Hijo",
                "operationId": "RubroController.Get Rubro Orden",
                "parameters": [
                    {
                        "in": "path",
                        "name": "apropiacion",
                        "description": "apropiacion a consultar",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "fuente",
                        "description": "fuente a consultar",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/rubro/GetRubroPac": {
            "get": {
                "tags": [
                    "rubro"
                ],
                "description": "get Apropiaciones Hijo",
                "operationId": "RubroController.Get Pac Rubro",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "apropiacion a consultar",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "mes",
                        "description": "fuente a consultar",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "idRubro",
                        "description": "fecha de inicio para el reporte",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "idFuente",
                        "description": "fecha final para el reporte",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "interface{}"
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/rubro/GetSumbySource": {
            "get": {
                "tags": [
                    "rubro"
                ],
                "description": "Obtiene el valor de ejecucion para meses cesrrados",
                "operationId": "RubroController.Get Pac value",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "valor vigencia apropiacion",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "mes",
                        "description": "valor mes a consultar cierre",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "fuente",
                        "description": "valor de la fuente a consultar",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tipo",
                        "description": "ingresos :2, egresos:3",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/rubro/{id}": {
            "get": {
                "tags": [
                    "rubro"
                ],
                "description": "get Rubro by id",
                "operationId": "RubroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "rubro"
                ],
                "description": "update the Rubro",
                "operationId": "RubroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Rubro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rubro"
                ],
                "description": "delete the Rubro",
                "operationId": "RubroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/rubroApropiacionReporte/": {
            "post": {
                "tags": [
                    "rubro"
                ],
                "description": "Obtener reporte ingresos egresos de los rubros dada una vigencia",
                "operationId": "RubroController.ApropiacionReporte",
                "parameters": [
                    {
                        "in": "path",
                        "name": "finicio",
                        "description": "fecha de inicio para el reporte",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "ffin",
                        "description": "fecha final para el reporte",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/interface{}"
                        }
                    },
                    "403": {
                        "description": "No se encontraron datos"
                    }
                }
            }
        },
        "/rubroArbolRubros/": {
            "get": {
                "tags": [
                    "rubro"
                ],
                "description": "genera arbol rubros",
                "operationId": "RubroController.ArbolRubros",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idpadre",
                        "description": "Id del padre para armar la rama default todos",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "UnidadEjecutora",
                        "description": "Id del padre para armar la rama default todos",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/rubro_homologado/": {
            "get": {
                "tags": [
                    "rubro_homologado"
                ],
                "description": "get RubroHomologado",
                "operationId": "RubroHomologadoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RubroHomologado"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "rubro_homologado"
                ],
                "description": "create RubroHomologado",
                "operationId": "RubroHomologadoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RubroHomologado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RubroHomologado"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RubroHomologado"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/rubro_homologado/ArbolRubros": {
            "get": {
                "tags": [
                    "rubro_homologado"
                ],
                "description": "genera arbol rubros",
                "operationId": "RubroHomologadoController.ArbolRubros",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idEntidad",
                        "description": "Id entidad para la cual se quieren consultar rubros",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "idPadre",
                        "description": "Id del padre para armar la rama default todos",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Rubro"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/rubro_homologado/GetRecordsNumberByEntity": {
            "get": {
                "tags": [
                    "rubro_homologado"
                ],
                "description": "get Number of records for a entity",
                "operationId": "RubroHomologadoController.Get Records Number RubroHomologado By Entity",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idEntidad",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/interface"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/rubro_homologado/GetRecordsNumberRubroHomologadoById/{id}": {
            "get": {
                "tags": [
                    "rubro_homologado"
                ],
                "description": "get Number of records for homologate item",
                "operationId": "RubroHomologadoController.Get Records Number RubroHomologado By Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RubroHomologado"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/rubro_homologado/GetRecordsNumberRubroHomologadoRubroById/{id}": {
            "get": {
                "tags": [
                    "rubro_homologado"
                ],
                "description": "get Number of records for item when its homologate",
                "operationId": "RubroHomologadoController.Get Records Number RubroHomologado By Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/interface"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/rubro_homologado/{id}": {
            "get": {
                "tags": [
                    "rubro_homologado"
                ],
                "description": "get RubroHomologado by id",
                "operationId": "RubroHomologadoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RubroHomologado"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "rubro_homologado"
                ],
                "description": "update the RubroHomologado",
                "operationId": "RubroHomologadoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RubroHomologado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RubroHomologado"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RubroHomologado"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rubro_homologado"
                ],
                "description": "delete the RubroHomologado",
                "operationId": "RubroHomologadoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/rubro_homologadoGetParentHomologation/": {
            "get": {
                "tags": [
                    "rubro_homologado"
                ],
                "description": "Identifies if exist homologation for item's parent",
                "operationId": "RubroHomologadoController.Get Parent Item Homologation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idRubro",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/interface"
                        }
                    },
                    "403": {
                        "description": "Rubro is empty"
                    }
                }
            }
        },
        "/rubro_homologado_rubro/": {
            "get": {
                "tags": [
                    "rubro_homologado_rubro"
                ],
                "description": "get RubroHomologadoRubro",
                "operationId": "RubroHomologadoRubroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RubroHomologadoRubro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "rubro_homologado_rubro"
                ],
                "description": "create RubroHomologadoRubro",
                "operationId": "RubroHomologadoRubroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RubroHomologadoRubro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RubroHomologadoRubro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RubroHomologadoRubro"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/rubro_homologado_rubro/{id}": {
            "get": {
                "tags": [
                    "rubro_homologado_rubro"
                ],
                "description": "get RubroHomologadoRubro by id",
                "operationId": "RubroHomologadoRubroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RubroHomologadoRubro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "rubro_homologado_rubro"
                ],
                "description": "update the RubroHomologadoRubro",
                "operationId": "RubroHomologadoRubroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RubroHomologadoRubro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RubroHomologadoRubro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RubroHomologadoRubro"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rubro_homologado_rubro"
                ],
                "description": "delete the RubroHomologadoRubro",
                "operationId": "RubroHomologadoRubroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/rubro_rubro/": {
            "get": {
                "tags": [
                    "rubro_rubro"
                ],
                "description": "get RubroRubro",
                "operationId": "RubroRubroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RubroRubro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "rubro_rubro"
                ],
                "description": "create RubroRubro",
                "operationId": "RubroRubroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RubroRubro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RubroRubro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RubroRubro"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/rubro_rubro/DeleteRubroRelation/{id}/{ue}": {
            "delete": {
                "tags": [
                    "rubro_rubro"
                ],
                "description": "delete the RubroRubro",
                "operationId": "RubroRubroController.DeleteRubroRelation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/rubro_rubro/{id}": {
            "get": {
                "tags": [
                    "rubro_rubro"
                ],
                "description": "get RubroRubro by id",
                "operationId": "RubroRubroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RubroRubro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "rubro_rubro"
                ],
                "description": "update the RubroRubro",
                "operationId": "RubroRubroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RubroRubro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RubroRubro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RubroRubro"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rubro_rubro"
                ],
                "description": "delete the RubroRubro",
                "operationId": "RubroRubroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/saldo_cuenta_contable/": {
            "get": {
                "tags": [
                    "saldo_cuenta_contable"
                ],
                "description": "get SaldoCuentaContable",
                "operationId": "SaldoCuentaContableController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SaldoCuentaContable"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "saldo_cuenta_contable"
                ],
                "description": "create SaldoCuentaContable",
                "operationId": "SaldoCuentaContableController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SaldoCuentaContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SaldoCuentaContable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SaldoCuentaContable"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/saldo_cuenta_contable/{id}": {
            "get": {
                "tags": [
                    "saldo_cuenta_contable"
                ],
                "description": "get SaldoCuentaContable by id",
                "operationId": "SaldoCuentaContableController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SaldoCuentaContable"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "saldo_cuenta_contable"
                ],
                "description": "update the SaldoCuentaContable",
                "operationId": "SaldoCuentaContableController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SaldoCuentaContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SaldoCuentaContable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SaldoCuentaContable"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "saldo_cuenta_contable"
                ],
                "description": "delete the SaldoCuentaContable",
                "operationId": "SaldoCuentaContableController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/solicitud_avance/": {
            "get": {
                "tags": [
                    "solicitud_avance"
                ],
                "description": "get SolicitudAvance",
                "operationId": "SolicitudAvanceController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "solicitud_avance"
                ],
                "description": "create SolicitudAvance",
                "operationId": "SolicitudAvanceController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudAvance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudAvance"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/solicitud_avance/GetSolicitudesNumber/": {
            "get": {
                "tags": [
                    "solicitud_avance"
                ],
                "description": "get Solcitudes Avance quantity",
                "operationId": "SolicitudAvanceController.GetSolicitudesNumber",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudAvance"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/solicitud_avance/{id}": {
            "get": {
                "tags": [
                    "solicitud_avance"
                ],
                "description": "get SolicitudAvance by id",
                "operationId": "SolicitudAvanceController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitud_avance"
                ],
                "description": "update the SolicitudAvance",
                "operationId": "SolicitudAvanceController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudAvance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudAvance"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitud_avance"
                ],
                "description": "delete the SolicitudAvance",
                "operationId": "SolicitudAvanceController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/solicitud_avanceTrSolicitudAvance/": {
            "post": {
                "tags": [
                    "solicitud_avance"
                ],
                "description": "create SolicitudAvance",
                "operationId": "SolicitudAvanceController.TrSolicitudAvance",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interface"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudAvance"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/solicitud_devolucion/": {
            "get": {
                "tags": [
                    "solicitud_devolucion"
                ],
                "description": "get SolicitudDevolucion",
                "operationId": "SolicitudDevolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "solicitud_devolucion"
                ],
                "description": "create SolicitudDevolucion",
                "operationId": "SolicitudDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/solicitud_devolucion/AddDevolution": {
            "post": {
                "tags": [
                    "solicitud_devolucion"
                ],
                "description": "add a entire DevolucionEstadoDevolucion",
                "operationId": "SolicitudDevolucionController.AddDevolution",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudDevolucion"
                    },
                    "403": {
                        "description": "bad devolution info"
                    }
                }
            }
        },
        "/solicitud_devolucion/{id}": {
            "get": {
                "tags": [
                    "solicitud_devolucion"
                ],
                "description": "get SolicitudDevolucion by id",
                "operationId": "SolicitudDevolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitud_devolucion"
                ],
                "description": "update the SolicitudDevolucion",
                "operationId": "SolicitudDevolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitud_devolucion"
                ],
                "description": "delete the SolicitudDevolucion",
                "operationId": "SolicitudDevolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/solicitud_devolucion_concepto/": {
            "get": {
                "tags": [
                    "solicitud_devolucion_concepto"
                ],
                "description": "get SolicitudDevolucionConcepto",
                "operationId": "SolicitudDevolucionConceptoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucionConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "solicitud_devolucion_concepto"
                ],
                "description": "create SolicitudDevolucionConcepto",
                "operationId": "SolicitudDevolucionConceptoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudDevolucionConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucionConcepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudDevolucionConcepto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/solicitud_devolucion_concepto/{id}": {
            "get": {
                "tags": [
                    "solicitud_devolucion_concepto"
                ],
                "description": "get SolicitudDevolucionConcepto by id",
                "operationId": "SolicitudDevolucionConceptoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucionConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitud_devolucion_concepto"
                ],
                "description": "update the SolicitudDevolucionConcepto",
                "operationId": "SolicitudDevolucionConceptoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudDevolucionConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucionConcepto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucionConcepto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitud_devolucion_concepto"
                ],
                "description": "delete the SolicitudDevolucionConcepto",
                "operationId": "SolicitudDevolucionConceptoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/solicitud_devolucion_estado_devolucion/": {
            "get": {
                "tags": [
                    "solicitud_devolucion_estado_devolucion"
                ],
                "description": "get SolicitudDevolucionEstadoDevolucion",
                "operationId": "SolicitudDevolucionEstadoDevolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucionEstadoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "solicitud_devolucion_estado_devolucion"
                ],
                "description": "create SolicitudDevolucionEstadoDevolucion",
                "operationId": "SolicitudDevolucionEstadoDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudDevolucionEstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucionEstadoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudDevolucionEstadoDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/solicitud_devolucion_estado_devolucion/{id}": {
            "get": {
                "tags": [
                    "solicitud_devolucion_estado_devolucion"
                ],
                "description": "get SolicitudDevolucionEstadoDevolucion by id",
                "operationId": "SolicitudDevolucionEstadoDevolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucionEstadoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitud_devolucion_estado_devolucion"
                ],
                "description": "update the SolicitudDevolucionEstadoDevolucion",
                "operationId": "SolicitudDevolucionEstadoDevolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudDevolucionEstadoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucionEstadoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDevolucionEstadoDevolucion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitud_devolucion_estado_devolucion"
                ],
                "description": "delete the SolicitudDevolucionEstadoDevolucion",
                "operationId": "SolicitudDevolucionEstadoDevolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/solicitud_requisito_tipo_avance/": {
            "get": {
                "tags": [
                    "solicitud_requisito_tipo_avance"
                ],
                "description": "get SolicitudRequisitoTipoAvance",
                "operationId": "SolicitudRequisitoTipoAvanceController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRequisitoTipoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "solicitud_requisito_tipo_avance"
                ],
                "description": "create SolicitudRequisitoTipoAvance",
                "operationId": "SolicitudRequisitoTipoAvanceController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudRequisitoTipoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRequisitoTipoAvance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudRequisitoTipoAvance"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/solicitud_requisito_tipo_avance/{id}": {
            "get": {
                "tags": [
                    "solicitud_requisito_tipo_avance"
                ],
                "description": "get SolicitudRequisitoTipoAvance by id",
                "operationId": "SolicitudRequisitoTipoAvanceController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRequisitoTipoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitud_requisito_tipo_avance"
                ],
                "description": "update the SolicitudRequisitoTipoAvance",
                "operationId": "SolicitudRequisitoTipoAvanceController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudRequisitoTipoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRequisitoTipoAvance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRequisitoTipoAvance"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitud_requisito_tipo_avance"
                ],
                "description": "delete the SolicitudRequisitoTipoAvance",
                "operationId": "SolicitudRequisitoTipoAvanceController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/solicitud_requisito_tipo_avanceTrValidarAvance/": {
            "post": {
                "tags": [
                    "solicitud_requisito_tipo_avance"
                ],
                "description": "Validar Avance",
                "operationId": "SolicitudRequisitoTipoAvanceController.TrValidarAvance",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interface"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudRequisitoTipoAvanceController"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/solicitud_tipo_avance/": {
            "get": {
                "tags": [
                    "solicitud_tipo_avance"
                ],
                "description": "get SolicitudTipoAvance",
                "operationId": "SolicitudTipoAvanceController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudTipoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "solicitud_tipo_avance"
                ],
                "description": "create SolicitudTipoAvance",
                "operationId": "SolicitudTipoAvanceController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudTipoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudTipoAvance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudTipoAvance"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/solicitud_tipo_avance/{id}": {
            "get": {
                "tags": [
                    "solicitud_tipo_avance"
                ],
                "description": "get SolicitudTipoAvance by id",
                "operationId": "SolicitudTipoAvanceController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudTipoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitud_tipo_avance"
                ],
                "description": "update the SolicitudTipoAvance",
                "operationId": "SolicitudTipoAvanceController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudTipoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudTipoAvance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudTipoAvance"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitud_tipo_avance"
                ],
                "description": "delete the SolicitudTipoAvance",
                "operationId": "SolicitudTipoAvanceController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/sub_tipo_orden_pago/": {
            "get": {
                "tags": [
                    "sub_tipo_orden_pago"
                ],
                "description": "get SubTipoOrdenPago",
                "operationId": "SubTipoOrdenPagoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SubTipoOrdenPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "sub_tipo_orden_pago"
                ],
                "description": "create SubTipoOrdenPago",
                "operationId": "SubTipoOrdenPagoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SubTipoOrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SubTipoOrdenPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SubTipoOrdenPago"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/sub_tipo_orden_pago/{id}": {
            "get": {
                "tags": [
                    "sub_tipo_orden_pago"
                ],
                "description": "get SubTipoOrdenPago by id",
                "operationId": "SubTipoOrdenPagoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SubTipoOrdenPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "sub_tipo_orden_pago"
                ],
                "description": "update the SubTipoOrdenPago",
                "operationId": "SubTipoOrdenPagoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SubTipoOrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SubTipoOrdenPago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SubTipoOrdenPago"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "sub_tipo_orden_pago"
                ],
                "description": "delete the SubTipoOrdenPago",
                "operationId": "SubTipoOrdenPagoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_afectacion/": {
            "get": {
                "tags": [
                    "tipo_afectacion"
                ],
                "description": "get TipoAfectacion",
                "operationId": "TipoAfectacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoAfectacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_afectacion"
                ],
                "description": "create TipoAfectacion",
                "operationId": "TipoAfectacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoAfectacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoAfectacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoAfectacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_afectacion/{id}": {
            "get": {
                "tags": [
                    "tipo_afectacion"
                ],
                "description": "get TipoAfectacion by id",
                "operationId": "TipoAfectacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoAfectacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_afectacion"
                ],
                "description": "update the TipoAfectacion",
                "operationId": "TipoAfectacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoAfectacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoAfectacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoAfectacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_afectacion"
                ],
                "description": "delete the TipoAfectacion",
                "operationId": "TipoAfectacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_anulacion_presupuestal/": {
            "get": {
                "tags": [
                    "tipo_anulacion_presupuestal"
                ],
                "description": "get TipoAnulacionPresupuestal",
                "operationId": "TipoAnulacionPresupuestalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoAnulacionPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_anulacion_presupuestal"
                ],
                "description": "create TipoAnulacionPresupuestal",
                "operationId": "TipoAnulacionPresupuestalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoAnulacionPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoAnulacionPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoAnulacionPresupuestal"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_anulacion_presupuestal/{id}": {
            "get": {
                "tags": [
                    "tipo_anulacion_presupuestal"
                ],
                "description": "get TipoAnulacionPresupuestal by id",
                "operationId": "TipoAnulacionPresupuestalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoAnulacionPresupuestal"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_anulacion_presupuestal"
                ],
                "description": "update the TipoAnulacionPresupuestal",
                "operationId": "TipoAnulacionPresupuestalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoAnulacionPresupuestal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoAnulacionPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoAnulacionPresupuestal"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_anulacion_presupuestal"
                ],
                "description": "delete the TipoAnulacionPresupuestal",
                "operationId": "TipoAnulacionPresupuestalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_avance/": {
            "get": {
                "tags": [
                    "tipo_avance"
                ],
                "description": "get TipoAvance",
                "operationId": "TipoAvanceController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_avance"
                ],
                "description": "create TipoAvance",
                "operationId": "TipoAvanceController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoAvance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoAvance"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_avance/{id}": {
            "get": {
                "tags": [
                    "tipo_avance"
                ],
                "description": "get TipoAvance by id",
                "operationId": "TipoAvanceController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoAvance"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_avance"
                ],
                "description": "update the TipoAvance",
                "operationId": "TipoAvanceController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoAvance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoAvance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoAvance"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_avance"
                ],
                "description": "delete the TipoAvance",
                "operationId": "TipoAvanceController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_avance_legalizacion/": {
            "get": {
                "tags": [
                    "tipo_avance_legalizacion"
                ],
                "description": "get TipoAvanceLegalizacion",
                "operationId": "TipoAvanceLegalizacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoAvanceLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_avance_legalizacion"
                ],
                "description": "create TipoAvanceLegalizacion",
                "operationId": "TipoAvanceLegalizacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoAvanceLegalizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoAvanceLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoAvanceLegalizacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_avance_legalizacion/{id}": {
            "get": {
                "tags": [
                    "tipo_avance_legalizacion"
                ],
                "description": "get TipoAvanceLegalizacion by id",
                "operationId": "TipoAvanceLegalizacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoAvanceLegalizacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_avance_legalizacion"
                ],
                "description": "update the TipoAvanceLegalizacion",
                "operationId": "TipoAvanceLegalizacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoAvanceLegalizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoAvanceLegalizacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoAvanceLegalizacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_avance_legalizacion"
                ],
                "description": "delete the TipoAvanceLegalizacion",
                "operationId": "TipoAvanceLegalizacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_comprobante/": {
            "get": {
                "tags": [
                    "tipo_comprobante"
                ],
                "description": "get TipoComprobante",
                "operationId": "TipoComprobanteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoComprobante"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_comprobante"
                ],
                "description": "create TipoComprobante",
                "operationId": "TipoComprobanteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoComprobante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoComprobante"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoComprobante"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_comprobante/{id}": {
            "get": {
                "tags": [
                    "tipo_comprobante"
                ],
                "description": "get TipoComprobante by id",
                "operationId": "TipoComprobanteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoComprobante"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_comprobante"
                ],
                "description": "update the TipoComprobante",
                "operationId": "TipoComprobanteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoComprobante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoComprobante"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoComprobante"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_comprobante"
                ],
                "description": "delete the TipoComprobante",
                "operationId": "TipoComprobanteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_compromiso_tesoral/": {
            "get": {
                "tags": [
                    "tipo_compromiso_tesoral"
                ],
                "description": "get TipoCompromisoTesoral",
                "operationId": "TipoCompromisoTesoralController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoCompromisoTesoral"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_compromiso_tesoral"
                ],
                "description": "create TipoCompromisoTesoral",
                "operationId": "TipoCompromisoTesoralController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoCompromisoTesoral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoCompromisoTesoral"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoCompromisoTesoral"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_compromiso_tesoral/{id}": {
            "get": {
                "tags": [
                    "tipo_compromiso_tesoral"
                ],
                "description": "get TipoCompromisoTesoral by id",
                "operationId": "TipoCompromisoTesoralController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoCompromisoTesoral"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_compromiso_tesoral"
                ],
                "description": "update the TipoCompromisoTesoral",
                "operationId": "TipoCompromisoTesoralController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoCompromisoTesoral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoCompromisoTesoral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoCompromisoTesoral"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_compromiso_tesoral"
                ],
                "description": "delete the TipoCompromisoTesoral",
                "operationId": "TipoCompromisoTesoralController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_concepto/": {
            "get": {
                "tags": [
                    "tipo_concepto"
                ],
                "description": "get TipoConcepto",
                "operationId": "TipoConceptoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_concepto"
                ],
                "description": "create TipoConcepto",
                "operationId": "TipoConceptoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoConcepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoConcepto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_concepto/{id}": {
            "get": {
                "tags": [
                    "tipo_concepto"
                ],
                "description": "get TipoConcepto by id",
                "operationId": "TipoConceptoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoConcepto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_concepto"
                ],
                "description": "update the TipoConcepto",
                "operationId": "TipoConceptoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoConcepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoConcepto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoConcepto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_concepto"
                ],
                "description": "delete the TipoConcepto",
                "operationId": "TipoConceptoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_cuenta_bancaria/": {
            "get": {
                "tags": [
                    "tipo_cuenta_bancaria"
                ],
                "description": "get TipoCuentaBancaria",
                "operationId": "TipoCuentaBancariaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoCuentaBancaria"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_cuenta_bancaria"
                ],
                "description": "create TipoCuentaBancaria",
                "operationId": "TipoCuentaBancariaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoCuentaBancaria content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoCuentaBancaria"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoCuentaBancaria"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_cuenta_bancaria/{id}": {
            "get": {
                "tags": [
                    "tipo_cuenta_bancaria"
                ],
                "description": "get TipoCuentaBancaria by id",
                "operationId": "TipoCuentaBancariaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoCuentaBancaria"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_cuenta_bancaria"
                ],
                "description": "update the TipoCuentaBancaria",
                "operationId": "TipoCuentaBancariaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoCuentaBancaria content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoCuentaBancaria"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoCuentaBancaria"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_cuenta_bancaria"
                ],
                "description": "delete the TipoCuentaBancaria",
                "operationId": "TipoCuentaBancariaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_cuenta_especial/": {
            "get": {
                "tags": [
                    "tipo_cuenta_especial"
                ],
                "description": "get TipoCuentaEspecial",
                "operationId": "TipoCuentaEspecialController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoCuentaEspecial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_cuenta_especial"
                ],
                "description": "create TipoCuentaEspecial",
                "operationId": "TipoCuentaEspecialController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoCuentaEspecial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoCuentaEspecial"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoCuentaEspecial"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_cuenta_especial/{id}": {
            "get": {
                "tags": [
                    "tipo_cuenta_especial"
                ],
                "description": "get TipoCuentaEspecial by id",
                "operationId": "TipoCuentaEspecialController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoCuentaEspecial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_cuenta_especial"
                ],
                "description": "update the TipoCuentaEspecial",
                "operationId": "TipoCuentaEspecialController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoCuentaEspecial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoCuentaEspecial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoCuentaEspecial"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_cuenta_especial"
                ],
                "description": "delete the TipoCuentaEspecial",
                "operationId": "TipoCuentaEspecialController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_devolucion/": {
            "get": {
                "tags": [
                    "tipo_devolucion"
                ],
                "description": "get TipoDevolucion",
                "operationId": "TipoDevolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_devolucion"
                ],
                "description": "create TipoDevolucion",
                "operationId": "TipoDevolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoDevolucion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_devolucion/{id}": {
            "get": {
                "tags": [
                    "tipo_devolucion"
                ],
                "description": "get TipoDevolucion by id",
                "operationId": "TipoDevolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoDevolucion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_devolucion"
                ],
                "description": "update the TipoDevolucion",
                "operationId": "TipoDevolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoDevolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoDevolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoDevolucion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_devolucion"
                ],
                "description": "delete the TipoDevolucion",
                "operationId": "TipoDevolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_disponibilidad/": {
            "get": {
                "tags": [
                    "tipo_disponibilidad"
                ],
                "description": "get TipoDisponibilidad",
                "operationId": "TipoDisponibilidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoDisponibilidad"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_disponibilidad"
                ],
                "description": "create TipoDisponibilidad",
                "operationId": "TipoDisponibilidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoDisponibilidad"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_disponibilidad/{id}": {
            "get": {
                "tags": [
                    "tipo_disponibilidad"
                ],
                "description": "get TipoDisponibilidad by id",
                "operationId": "TipoDisponibilidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoDisponibilidad"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_disponibilidad"
                ],
                "description": "update the TipoDisponibilidad",
                "operationId": "TipoDisponibilidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoDisponibilidad"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_disponibilidad"
                ],
                "description": "delete the TipoDisponibilidad",
                "operationId": "TipoDisponibilidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_documento_afectante/": {
            "get": {
                "tags": [
                    "tipo_documento_afectante"
                ],
                "description": "get TipoDocumentoAfectante",
                "operationId": "TipoDocumentoAfectanteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoDocumentoAfectante"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_documento_afectante"
                ],
                "description": "create TipoDocumentoAfectante",
                "operationId": "TipoDocumentoAfectanteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoDocumentoAfectante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoDocumentoAfectante"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoDocumentoAfectante"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_documento_afectante/{id}": {
            "get": {
                "tags": [
                    "tipo_documento_afectante"
                ],
                "description": "get TipoDocumentoAfectante by id",
                "operationId": "TipoDocumentoAfectanteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoDocumentoAfectante"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_documento_afectante"
                ],
                "description": "update the TipoDocumentoAfectante",
                "operationId": "TipoDocumentoAfectanteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoDocumentoAfectante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoDocumentoAfectante"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoDocumentoAfectante"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_documento_afectante"
                ],
                "description": "delete the TipoDocumentoAfectante",
                "operationId": "TipoDocumentoAfectanteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_entidad/": {
            "get": {
                "tags": [
                    "tipo_entidad"
                ],
                "description": "get TipoEntidad",
                "operationId": "TipoEntidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntidad"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_entidad"
                ],
                "description": "create TipoEntidad",
                "operationId": "TipoEntidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoEntidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoEntidad"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_entidad/{id}": {
            "get": {
                "tags": [
                    "tipo_entidad"
                ],
                "description": "get TipoEntidad by id",
                "operationId": "TipoEntidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntidad"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_entidad"
                ],
                "description": "update the TipoEntidad",
                "operationId": "TipoEntidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoEntidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntidad"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_entidad"
                ],
                "description": "delete the TipoEntidad",
                "operationId": "TipoEntidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_fuente_financiamiento/": {
            "get": {
                "tags": [
                    "tipo_fuente_financiamiento"
                ],
                "description": "get TipoFuenteFinanciamiento",
                "operationId": "TipoFuenteFinanciamientoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoFuenteFinanciamiento"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_fuente_financiamiento"
                ],
                "description": "create TipoFuenteFinanciamiento",
                "operationId": "TipoFuenteFinanciamientoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoFuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoFuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoFuenteFinanciamiento"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_fuente_financiamiento/{id}": {
            "get": {
                "tags": [
                    "tipo_fuente_financiamiento"
                ],
                "description": "get TipoFuenteFinanciamiento by id",
                "operationId": "TipoFuenteFinanciamientoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoFuenteFinanciamiento"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_fuente_financiamiento"
                ],
                "description": "update the TipoFuenteFinanciamiento",
                "operationId": "TipoFuenteFinanciamientoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoFuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoFuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoFuenteFinanciamiento"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_fuente_financiamiento"
                ],
                "description": "delete the TipoFuenteFinanciamiento",
                "operationId": "TipoFuenteFinanciamientoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_movimiento/": {
            "get": {
                "tags": [
                    "tipo_movimiento"
                ],
                "description": "get TipoMovimiento",
                "operationId": "TipoMovimientoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoMovimiento"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_movimiento"
                ],
                "description": "create TipoMovimiento",
                "operationId": "TipoMovimientoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoMovimiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoMovimiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoMovimiento"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_movimiento/{id}": {
            "get": {
                "tags": [
                    "tipo_movimiento"
                ],
                "description": "get TipoMovimiento by id",
                "operationId": "TipoMovimientoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoMovimiento"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_movimiento"
                ],
                "description": "update the TipoMovimiento",
                "operationId": "TipoMovimientoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoMovimiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoMovimiento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoMovimiento"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_movimiento"
                ],
                "description": "delete the TipoMovimiento",
                "operationId": "TipoMovimientoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_movimiento_apropiacion/": {
            "get": {
                "tags": [
                    "tipo_movimiento_apropiacion"
                ],
                "description": "get TipoMovimientoApropiacion",
                "operationId": "TipoMovimientoApropiacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoMovimientoApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_movimiento_apropiacion"
                ],
                "description": "create TipoMovimientoApropiacion",
                "operationId": "TipoMovimientoApropiacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoMovimientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoMovimientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoMovimientoApropiacion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_movimiento_apropiacion/{id}": {
            "get": {
                "tags": [
                    "tipo_movimiento_apropiacion"
                ],
                "description": "get TipoMovimientoApropiacion by id",
                "operationId": "TipoMovimientoApropiacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoMovimientoApropiacion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_movimiento_apropiacion"
                ],
                "description": "update the TipoMovimientoApropiacion",
                "operationId": "TipoMovimientoApropiacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoMovimientoApropiacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoMovimientoApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoMovimientoApropiacion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_movimiento_apropiacion"
                ],
                "description": "delete the TipoMovimientoApropiacion",
                "operationId": "TipoMovimientoApropiacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_orden_pago/": {
            "get": {
                "tags": [
                    "tipo_orden_pago"
                ],
                "description": "get TipoOrdenPago",
                "operationId": "TipoOrdenPagoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoOrdenPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_orden_pago"
                ],
                "description": "create TipoOrdenPago",
                "operationId": "TipoOrdenPagoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoOrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoOrdenPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoOrdenPago"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_orden_pago/{id}": {
            "get": {
                "tags": [
                    "tipo_orden_pago"
                ],
                "description": "get TipoOrdenPago by id",
                "operationId": "TipoOrdenPagoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoOrdenPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_orden_pago"
                ],
                "description": "update the TipoOrdenPago",
                "operationId": "TipoOrdenPagoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoOrdenPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoOrdenPago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoOrdenPago"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_orden_pago"
                ],
                "description": "delete the TipoOrdenPago",
                "operationId": "TipoOrdenPagoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_recurso/": {
            "get": {
                "tags": [
                    "tipo_recurso"
                ],
                "description": "get TipoRecurso",
                "operationId": "TipoRecursoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoRecurso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_recurso"
                ],
                "description": "create TipoRecurso",
                "operationId": "TipoRecursoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoRecurso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoRecurso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoRecurso"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_recurso/{id}": {
            "get": {
                "tags": [
                    "tipo_recurso"
                ],
                "description": "get TipoRecurso by id",
                "operationId": "TipoRecursoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoRecurso"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_recurso"
                ],
                "description": "update the TipoRecurso",
                "operationId": "TipoRecursoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoRecurso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoRecurso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoRecurso"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_recurso"
                ],
                "description": "delete the TipoRecurso",
                "operationId": "TipoRecursoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_transaccion_version/": {
            "get": {
                "tags": [
                    "tipo_transaccion_version"
                ],
                "description": "get TipoTransaccionVersion",
                "operationId": "TipoTransaccionVersionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoTransaccionVersion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_transaccion_version"
                ],
                "description": "create TipoTransaccionVersion",
                "operationId": "TipoTransaccionVersionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoTransaccionVersion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoTransaccionVersion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoTransaccionVersion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_transaccion_version/CreateTipoVersion": {},
        "/tipo_transaccion_version/GetTipoTransaccionVersionesNumber/": {
            "get": {
                "tags": [
                    "tipo_transaccion_version"
                ],
                "description": "get Version Tipo Transaccion",
                "operationId": "TipoTransaccionVersionController.VersionTipoTransaccionController",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoTransaccionVersion"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/tipo_transaccion_version/{id}": {
            "get": {
                "tags": [
                    "tipo_transaccion_version"
                ],
                "description": "get TipoTransaccionVersion by id",
                "operationId": "TipoTransaccionVersionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoTransaccionVersion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_transaccion_version"
                ],
                "description": "update the TipoTransaccionVersion",
                "operationId": "TipoTransaccionVersionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoTransaccionVersion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoTransaccionVersion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoTransaccionVersion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_transaccion_version"
                ],
                "description": "delete the TipoTransaccionVersion",
                "operationId": "TipoTransaccionVersionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/titulo_inversion/": {
            "get": {
                "tags": [
                    "titulo_inversion"
                ],
                "description": "get TituloInversion",
                "operationId": "TituloInversionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TituloInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "titulo_inversion"
                ],
                "description": "create TituloInversion",
                "operationId": "TituloInversionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TituloInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TituloInversion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TituloInversion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/titulo_inversion/{id}": {
            "get": {
                "tags": [
                    "titulo_inversion"
                ],
                "description": "get TituloInversion by id",
                "operationId": "TituloInversionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TituloInversion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "titulo_inversion"
                ],
                "description": "update the TituloInversion",
                "operationId": "TituloInversionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TituloInversion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TituloInversion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TituloInversion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "titulo_inversion"
                ],
                "description": "delete the TituloInversion",
                "operationId": "TituloInversionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tr_concepto/": {
            "post": {
                "tags": [
                    "tr_concepto"
                ],
                "description": "create Concepto",
                "operationId": "TrConceptoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Concepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrConcepto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Alert"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tr_concepto/{id}": {
            "put": {
                "tags": [
                    "tr_concepto"
                ],
                "description": "update the TrConcepto",
                "operationId": "TrConceptoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Concepto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrConcepto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Alert"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tr_cuentas_contables/": {
            "post": {
                "tags": [
                    "tr_cuentas_contables"
                ],
                "description": "Post de cuentas contables mediante la transaccion que las crea y ubica en el plan de cuentas",
                "operationId": "TrCuentasContablesController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body para la transaccion",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrCuentaContable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TrCuentaContable"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tr_cuentas_contables/{id}": {
            "put": {
                "tags": [
                    "tr_cuentas_contables"
                ],
                "description": "update the TrCuentaContable",
                "operationId": "TrCuentasContablesController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TrCuentaContable content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrCuentaContable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TrCuentaContable"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/unidad_ejecutora/": {
            "get": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "get UnidadEjecutora",
                "operationId": "UnidadEjecutoraController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UnidadEjecutora"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "create UnidadEjecutora",
                "operationId": "UnidadEjecutoraController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for UnidadEjecutora content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UnidadEjecutora"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.UnidadEjecutora"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/unidad_ejecutora/{id}": {
            "get": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "get UnidadEjecutora by id",
                "operationId": "UnidadEjecutoraController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UnidadEjecutora"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "update the UnidadEjecutora",
                "operationId": "UnidadEjecutoraController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for UnidadEjecutora content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UnidadEjecutora"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UnidadEjecutora"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "delete the UnidadEjecutora",
                "operationId": "UnidadEjecutoraController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/version_tipo_transaccion/": {
            "get": {
                "tags": [
                    "version_tipo_transaccion"
                ],
                "description": "get VersionTipoTransaccion",
                "operationId": "VersionTipoTransaccionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.VersionTipoTransaccion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "version_tipo_transaccion"
                ],
                "description": "create VersionTipoTransaccion",
                "operationId": "VersionTipoTransaccionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for VersionTipoTransaccion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VersionTipoTransaccion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.VersionTipoTransaccion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/version_tipo_transaccion/GetDefinitiveVersion/": {
            "get": {
                "tags": [
                    "version_tipo_transaccion"
                ],
                "description": "get all definitive versions",
                "operationId": "VersionTipoTransaccionController.GetDefinitiveVersion",
                "parameters": [
                    {
                        "in": "query",
                        "name": "fecha",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.VersionTipoTransaccion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/version_tipo_transaccion/GetVersionInEspecifiedDate/": {
            "get": {
                "tags": [
                    "version_tipo_transaccion"
                ],
                "description": "get all versions in a especified set of dates",
                "operationId": "VersionTipoTransaccionController.GetVersionInEspecifiedDate",
                "parameters": [
                    {
                        "in": "query",
                        "name": "fechaInicio",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fechaFin",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "tipo",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.VersionTipoTransaccion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/version_tipo_transaccion/GetVersionToType/{idTipo}": {
            "get": {
                "tags": [
                    "version_tipo_transaccion"
                ],
                "description": "get last version for TipoTransaccion",
                "operationId": "VersionTipoTransaccionController.GetVersionToType",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.VersionTipoTransaccion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/version_tipo_transaccion/GetVersionesTipoNumber/": {
            "get": {
                "tags": [
                    "version_tipo_transaccion"
                ],
                "description": "get Version Tipo Transaccion",
                "operationId": "VersionTipoTransaccionController.VersionTipoTransaccionController",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.VersionTipoTransaccion"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/version_tipo_transaccion/{id}": {
            "get": {
                "tags": [
                    "version_tipo_transaccion"
                ],
                "description": "get VersionTipoTransaccion by id",
                "operationId": "VersionTipoTransaccionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.VersionTipoTransaccion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "version_tipo_transaccion"
                ],
                "description": "update the VersionTipoTransaccion",
                "operationId": "VersionTipoTransaccionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for VersionTipoTransaccion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VersionTipoTransaccion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.VersionTipoTransaccion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "version_tipo_transaccion"
                ],
                "description": "delete the VersionTipoTransaccion",
                "operationId": "VersionTipoTransaccionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        }
    },
    "definitions": {
        "1009968.\u003cnil\u003e.AfectacionConcepto": {
            "title": "AfectacionConcepto",
            "type": "object"
        },
        "1010014.\u003cnil\u003e.CuentaContable": {
            "title": "CuentaContable",
            "type": "object"
        },
        "1010056.\u003cnil\u003e.ConceptoCuentaContable": {
            "title": "ConceptoCuentaContable",
            "type": "object"
        },
        "12853.0xc000c3d200.false": {
            "title": "false",
            "type": "object"
        },
        "como": {
            "title": "como",
            "type": "object"
        },
        "false": {
            "title": "false",
            "type": "object"
        },
        "interface": {
            "title": "interface",
            "type": "object"
        },
        "interface{}": {
            "title": "interface{}",
            "type": "object"
        },
        "models.ActaDevolucion": {
            "title": "ActaDevolucion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.ActaInversion": {
            "title": "ActaInversion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.AfectacionConcepto": {
            "title": "AfectacionConcepto",
            "type": "object",
            "properties": {
                "AfectacionEgreso": {
                    "type": "boolean"
                },
                "AfectacionIngreso": {
                    "type": "boolean"
                },
                "Concepto": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoAfectacion": {
                    "$ref": "#/definitions/models.TipoAfectacion"
                }
            }
        },
        "models.Alert": {
            "title": "Alert",
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/definitions/12853.0xc000c3d200.false"
                },
                "Code": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "models.AnulacionDisponibilidad": {
            "title": "AnulacionDisponibilidad",
            "type": "object",
            "properties": {
                "AnulacionDisponibilidadApropiacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AnulacionDisponibilidadApropiacion"
                    }
                },
                "Consecutivo": {
                    "type": "integer",
                    "format": "int64"
                },
                "EstadoAnulacion": {
                    "$ref": "#/definitions/models.EstadoAnulacion"
                },
                "Expidio": {
                    "type": "integer",
                    "format": "int64"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "JustificacionRechazo": {
                    "type": "string"
                },
                "Motivo": {
                    "type": "string"
                },
                "Responsable": {
                    "type": "integer",
                    "format": "int64"
                },
                "Solicitante": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoAnulacion": {
                    "$ref": "#/definitions/models.TipoAnulacionPresupuestal"
                }
            }
        },
        "models.AnulacionDisponibilidadApropiacion": {
            "title": "AnulacionDisponibilidadApropiacion",
            "type": "object",
            "properties": {
                "Anulacion": {
                    "$ref": "#/definitions/models.AnulacionDisponibilidad"
                },
                "DisponibilidadApropiacion": {
                    "$ref": "#/definitions/models.DisponibilidadApropiacion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.AnulacionRegistroPresupuestal": {
            "title": "AnulacionRegistroPresupuestal",
            "type": "object",
            "properties": {
                "AnulacionRegistroPresupuestalDisponibilidadApropiacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AnulacionRegistroPresupuestalDisponibilidadApropiacion"
                    }
                },
                "Consecutivo": {
                    "type": "integer",
                    "format": "int64"
                },
                "EstadoAnulacion": {
                    "$ref": "#/definitions/models.EstadoAnulacion"
                },
                "Expidio": {
                    "type": "integer",
                    "format": "int64"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "JustificacionRechazo": {
                    "type": "string"
                },
                "Motivo": {
                    "type": "string"
                },
                "Responsable": {
                    "type": "integer",
                    "format": "int64"
                },
                "Solicitante": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoAnulacion": {
                    "$ref": "#/definitions/models.TipoAnulacionPresupuestal"
                }
            }
        },
        "models.AnulacionRegistroPresupuestalDisponibilidadApropiacion": {
            "title": "AnulacionRegistroPresupuestalDisponibilidadApropiacion",
            "type": "object",
            "properties": {
                "AnulacionRegistroPresupuestal": {
                    "$ref": "#/definitions/models.AnulacionRegistroPresupuestal"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "RegistroPresupuestalDisponibilidadApropiacion": {
                    "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidadApropiacion"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.AnulacionReserva": {
            "title": "AnulacionReserva",
            "type": "object",
            "properties": {
                "FechaAnulacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ReservaPresupuestal": {
                    "$ref": "#/definitions/models.ReservaPresupuestal"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Apropiacion": {
            "title": "Apropiacion",
            "type": "object",
            "properties": {
                "Estado": {
                    "$ref": "#/definitions/models.EstadoApropiacion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Rubro": {
                    "$ref": "#/definitions/models.Rubro"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.AvanceEstadoAvance": {
            "title": "AvanceEstadoAvance",
            "type": "object",
            "properties": {
                "EstadoAvance": {
                    "$ref": "#/definitions/models.EstadoAvance"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Observaciones": {
                    "type": "string"
                },
                "Responsable": {
                    "type": "integer",
                    "format": "int64"
                },
                "SolicitudAvance": {
                    "$ref": "#/definitions/models.SolicitudAvance"
                }
            }
        },
        "models.AvanceLegalizacion": {
            "title": "AvanceLegalizacion",
            "type": "object",
            "properties": {
                "Avance": {
                    "$ref": "#/definitions/models.SolicitudAvance"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Legalizacion": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.AvanceLegalizacionCuentaEspecial": {
            "title": "AvanceLegalizacionCuentaEspecial",
            "type": "object",
            "properties": {
                "AvanceLegalizacion": {
                    "$ref": "#/definitions/models.AvanceLegalizacion"
                },
                "CuentaEspecial": {
                    "$ref": "#/definitions/models.CuentaEspecial"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.AvanceLegalizacionSubTipo": {
            "title": "AvanceLegalizacionSubTipo",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "AplicaEntradaAlmacen": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.AvanceLegalizacionTipo": {
            "title": "AvanceLegalizacionTipo",
            "type": "object",
            "properties": {
                "AvanceLegalizacion": {
                    "$ref": "#/definitions/models.AvanceLegalizacion"
                },
                "Dias": {
                    "type": "integer",
                    "format": "int64"
                },
                "EntradaAlmacen": {
                    "type": "integer",
                    "format": "int64"
                },
                "EstadoAvanceLegalizacionTipo": {
                    "$ref": "#/definitions/models.EstadoAvanceLegalizacionTipo"
                },
                "FechaCambioDivisa": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaCompra": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroFactura": {
                    "type": "string"
                },
                "Subtipo": {
                    "$ref": "#/definitions/models.AvanceLegalizacionSubTipo"
                },
                "Tercero": {
                    "type": "string"
                },
                "TipoAvanceLegalizacion": {
                    "$ref": "#/definitions/models.TipoAvanceLegalizacion"
                },
                "TipoDocumentoAfectante": {
                    "$ref": "#/definitions/models.TipoDocumentoAfectante"
                },
                "TrmFechaCompra": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.CalendarioTributario": {
            "title": "CalendarioTributario",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Entidad": {
                    "$ref": "#/definitions/models.Entidad"
                },
                "EstadoCalendarioTributario": {
                    "$ref": "#/definitions/models.EstadoCalendarioTributario"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Responsable": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorGirado": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.CancelacionInversion": {
            "title": "CancelacionInversion",
            "type": "object",
            "properties": {
                "FechaCancelacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Observaciones": {
                    "type": "string"
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int64"
                },
                "UsuarioEjecucion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.CancelacionInversionConcepto": {
            "title": "CancelacionInversionConcepto",
            "type": "object",
            "properties": {
                "Cancelacion": {
                    "$ref": "#/definitions/models.CancelacionInversion"
                },
                "Concepto": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorAgregado": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.CancelacionInversionEstadoCancelacion": {
            "title": "CancelacionInversionEstadoCancelacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CancelacionInversion": {
                    "$ref": "#/definitions/models.CancelacionInversion"
                },
                "EstadoCancelacionInversion": {
                    "$ref": "#/definitions/models.EstadoCancelacionInversion"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Usuario": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.CancelacionInversionInversion": {
            "title": "CancelacionInversionInversion",
            "type": "object",
            "properties": {
                "Cancelacion": {
                    "$ref": "#/definitions/models.CancelacionInversion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Inversion": {
                    "$ref": "#/definitions/models.Inversion"
                }
            }
        },
        "models.CategoriaCompromiso": {
            "title": "CategoriaCompromiso",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "TiposCompromisos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TipoCompromisoTesoral"
                    }
                }
            }
        },
        "models.CategoriaIva": {
            "title": "CategoriaIva",
            "type": "object"
        },
        "models.CausalReintegro": {
            "title": "CausalReintegro",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Cheque": {
            "title": "Cheque",
            "type": "object",
            "properties": {
                "Beneficiario": {
                    "type": "integer",
                    "format": "int64"
                },
                "Chequera": {
                    "$ref": "#/definitions/models.Chequera"
                },
                "Consecutivo": {
                    "type": "integer",
                    "format": "int64"
                },
                "FechaVencimiento": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Observaciones": {
                    "type": "string"
                },
                "OrdenPago": {
                    "$ref": "#/definitions/models.OrdenPago"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.ChequeEstadoCheque": {
            "title": "ChequeEstadoCheque",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Cheque": {
                    "$ref": "#/definitions/models.Cheque"
                },
                "Estado": {
                    "$ref": "#/definitions/models.EstadoCheque"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Usuario": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Chequera": {
            "title": "Chequera",
            "type": "object",
            "properties": {
                "ChequesDisponibles": {
                    "type": "integer",
                    "format": "int64"
                },
                "Consecutivo": {
                    "type": "integer",
                    "format": "int64"
                },
                "CuentaBancaria": {
                    "$ref": "#/definitions/models.CuentaBancaria"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroChequeFinal": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroChequeInicial": {
                    "type": "integer",
                    "format": "int64"
                },
                "Observaciones": {
                    "type": "string"
                },
                "Responsable": {
                    "type": "integer",
                    "format": "int64"
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ChequeraEstadoChequera": {
            "title": "ChequeraEstadoChequera",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Chequera": {
                    "$ref": "#/definitions/models.Chequera"
                },
                "Estado": {
                    "$ref": "#/definitions/models.EstadoChequera"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Usuario": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.CierrePeriodoPresupuestal": {
            "title": "CierrePeriodoPresupuestal",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "DetalleCierrePeriodoPresupuestal": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DetalleCierrePeriodoPresupuestal"
                    }
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ClaseTransaccion": {
            "title": "ClaseTransaccion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ModuloKronos": {
                    "$ref": "#/definitions/models.ModuloKronos"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.Comprobante": {
            "title": "Comprobante",
            "type": "object",
            "properties": {
                "Ano": {
                    "type": "integer",
                    "format": "int64"
                },
                "EstadoComprobante": {
                    "$ref": "#/definitions/models.EstadoComprobante"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Mes": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroItems": {
                    "type": "integer",
                    "format": "int64"
                },
                "Observaciones": {
                    "type": "string"
                },
                "RedondeoCifras": {
                    "type": "boolean"
                },
                "Secuencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoComprobante": {
                    "$ref": "#/definitions/models.TipoComprobante"
                }
            }
        },
        "models.Compromiso": {
            "title": "Compromiso",
            "type": "object",
            "properties": {
                "EstadoCompromiso": {
                    "$ref": "#/definitions/models.EstadoCompromiso"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Objeto": {
                    "type": "string"
                },
                "TipoCompromisoTesoral": {
                    "$ref": "#/definitions/models.TipoCompromisoTesoral"
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Concepto": {
            "title": "Concepto",
            "type": "object",
            "properties": {
                "Clasificador": {
                    "type": "boolean"
                },
                "Codigo": {
                    "type": "string"
                },
                "ConceptoCuentaContable": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConceptoCuentaContable"
                    }
                },
                "ConceptoTesoralFacultadProyecto": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConceptoTesoralFacultadProyecto"
                    }
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaExpiracion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "Rubro": {
                    "$ref": "#/definitions/models.Rubro"
                },
                "TipoConcepto": {
                    "$ref": "#/definitions/models.TipoConcepto"
                }
            }
        },
        "models.ConceptoAvanceLegalizacionTipo": {
            "title": "ConceptoAvanceLegalizacionTipo",
            "type": "object",
            "properties": {
                "AvanceLegalizacion": {
                    "$ref": "#/definitions/models.AvanceLegalizacionTipo"
                },
                "Concepto": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.ConceptoConcepto": {
            "title": "ConceptoConcepto",
            "type": "object",
            "properties": {
                "ConceptoHijo": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "ConceptoPadre": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ConceptoCuentaContable": {
            "title": "ConceptoCuentaContable",
            "type": "object",
            "properties": {
                "Concepto": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "CuentaAcreedora": {
                    "type": "boolean"
                },
                "CuentaContable": {
                    "$ref": "#/definitions/models.CuentaContable"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ConceptoDetalleTipoTransaccion": {
            "title": "ConceptoDetalleTipoTransaccion",
            "type": "object",
            "properties": {
                "Concepto": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "DetalleTipoTransaccionVersion": {
                    "$ref": "#/definitions/models.DetalleTipoTransaccionVersion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ConceptoOrdenPago": {
            "title": "ConceptoOrdenPago",
            "type": "object",
            "properties": {
                "Concepto": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrdenDePago": {
                    "$ref": "#/definitions/models.OrdenPago"
                },
                "RegistroPresupuestalDisponibilidadApropiacion": {
                    "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidadApropiacion"
                },
                "Valor": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ConceptoTesoralFacultadProyecto": {
            "title": "ConceptoTesoralFacultadProyecto",
            "type": "object",
            "properties": {
                "ConceptoTesoral": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "Facultad": {
                    "type": "integer",
                    "format": "int64"
                },
                "HomologacionConcepto": {
                    "$ref": "#/definitions/models.HomologacionConcepto"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ProyectoCurricular": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.CuentaBancaria": {
            "title": "CuentaBancaria",
            "type": "object",
            "properties": {
                "CuentaContable": {
                    "$ref": "#/definitions/models.CuentaContable"
                },
                "EstadoActivo": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroCuenta": {
                    "type": "string"
                },
                "Saldo": {
                    "type": "number",
                    "format": "double"
                },
                "Sucursal": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoCuentaBancaria": {
                    "$ref": "#/definitions/models.TipoCuentaBancaria"
                },
                "TipoRecurso": {
                    "$ref": "#/definitions/models.TipoRecurso"
                },
                "UnidadEjecutora": {
                    "$ref": "#/definitions/models.UnidadEjecutora"
                }
            }
        },
        "models.CuentaBancariaEnte": {
            "title": "CuentaBancariaEnte",
            "type": "object",
            "properties": {
                "Banco": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroCuenta": {
                    "type": "string"
                },
                "TipoCuenta": {
                    "type": "integer",
                    "format": "int64"
                },
                "Titular": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.CuentaContable": {
            "title": "CuentaContable",
            "type": "object",
            "properties": {
                "Codigo": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Naturaleza": {
                    "type": "string"
                },
                "NivelClasificacion": {
                    "$ref": "#/definitions/models.NivelClasificacion"
                },
                "Nombre": {
                    "type": "string"
                },
                "Saldo": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.CuentaEspecial": {
            "title": "CuentaEspecial",
            "type": "object",
            "properties": {
                "CuentaContable": {
                    "$ref": "#/definitions/models.CuentaContable"
                },
                "Deducible": {
                    "type": "boolean"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InformacionPersonaJuridica": {
                    "type": "integer",
                    "format": "int64"
                },
                "Porcentaje": {
                    "type": "number",
                    "format": "double"
                },
                "TarifaUvt": {
                    "type": "number",
                    "format": "double"
                },
                "TipoCuentaEspecial": {
                    "$ref": "#/definitions/models.TipoCuentaEspecial"
                }
            }
        },
        "models.DetalleCierrePeriodoPresupuestal": {
            "title": "DetalleCierrePeriodoPresupuestal",
            "type": "object",
            "properties": {
                "Apropiacion": {
                    "$ref": "#/definitions/models.Apropiacion"
                },
                "CierrePeriodoPresupuestal": {
                    "$ref": "#/definitions/models.CierrePeriodoPresupuestal"
                },
                "FuenteFinanciamiento": {
                    "$ref": "#/definitions/models.FuenteFinanciamiento"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NPeriodo": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorEjecutado": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.DetallePac": {
            "title": "DetallePac",
            "type": "object",
            "properties": {
                "FuenteFinanciamiento": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Mes": {
                    "type": "integer",
                    "format": "int64"
                },
                "Pac": {
                    "$ref": "#/definitions/models.Pac"
                },
                "Rubro": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorEjecutadoMes": {
                    "type": "number",
                    "format": "double"
                },
                "ValorProyectadoMes": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.DetalleTipoTransaccionVersion": {
            "title": "DetalleTipoTransaccionVersion",
            "type": "object",
            "properties": {
                "ClaseTransaccion": {
                    "$ref": "#/definitions/models.TipoConcepto"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                },
                "TipoTransaccionVersion": {
                    "$ref": "#/definitions/models.TipoTransaccionVersion"
                }
            }
        },
        "models.DevolucionEstadoDevolucion": {
            "title": "DevolucionEstadoDevolucion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Devolucion": {
                    "type": "integer",
                    "format": "int64"
                },
                "EstadoDevolucion": {
                    "$ref": "#/definitions/models.EstadoDevolucion"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.DevolucionTributaria": {
            "title": "DevolucionTributaria",
            "type": "object",
            "properties": {
                "Acta": {
                    "type": "integer",
                    "format": "int64"
                },
                "CuentaBancariaEnte": {
                    "$ref": "#/definitions/models.CuentaBancariaEnte"
                },
                "DocumentoGenerador": {
                    "$ref": "#/definitions/models.DocumentoGenerador"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "FormaPago": {
                    "$ref": "#/definitions/models.FormaPago"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Justificacion": {
                    "type": "string"
                },
                "Solicitante": {
                    "type": "integer",
                    "format": "int64"
                },
                "UnidadEjecutora": {
                    "$ref": "#/definitions/models.UnidadEjecutora"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.DevolucionTributariaConcepto": {
            "title": "DevolucionTributariaConcepto",
            "type": "object",
            "properties": {
                "Concepto": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "DevolucionTributaria": {
                    "$ref": "#/definitions/models.DevolucionTributaria"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorDevolucion": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.DevolucionTributariaEstadoDevolucion": {
            "title": "DevolucionTributariaEstadoDevolucion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Devolucion": {
                    "$ref": "#/definitions/models.DevolucionTributaria"
                },
                "EstadoDevolucion": {
                    "$ref": "#/definitions/models.EstadoDevolucion"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.DevolucionTributariaMovimientoAsociado": {
            "title": "DevolucionTributariaMovimientoAsociado",
            "type": "object",
            "properties": {
                "Devolucion": {
                    "$ref": "#/definitions/models.DevolucionTributaria"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MovimientoContable": {
                    "$ref": "#/definitions/models.MovimientoContable"
                },
                "ValorDevolucion": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Disponibilidad": {
            "title": "Disponibilidad",
            "type": "object",
            "properties": {
                "DisponibilidadApropiacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DisponibilidadApropiacion"
                    }
                },
                "DisponibilidadProcesoExterno": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DisponibilidadProcesoExterno"
                    }
                },
                "Estado": {
                    "$ref": "#/definitions/models.EstadoDisponibilidad"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroDisponibilidad": {
                    "type": "number",
                    "format": "double"
                },
                "Responsable": {
                    "type": "integer",
                    "format": "int64"
                },
                "Solicitud": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.DisponibilidadApropiacion": {
            "title": "DisponibilidadApropiacion",
            "type": "object",
            "properties": {
                "Apropiacion": {
                    "$ref": "#/definitions/models.Apropiacion"
                },
                "Disponibilidad": {
                    "$ref": "#/definitions/models.Disponibilidad"
                },
                "FuenteFinanciamiento": {
                    "$ref": "#/definitions/models.FuenteFinanciamiento"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.DisponibilidadProcesoExterno": {
            "title": "DisponibilidadProcesoExterno",
            "type": "object",
            "properties": {
                "Disponibilidad": {
                    "$ref": "#/definitions/models.Disponibilidad"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ProcesoExterno": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoDisponibilidad": {
                    "$ref": "#/definitions/models.TipoDisponibilidad"
                }
            }
        },
        "models.DocumentoDevolucion": {
            "title": "DocumentoDevolucion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Identificacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Origen": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoIdentificacion": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.DocumentoGenerador": {
            "title": "DocumentoGenerador",
            "type": "object",
            "properties": {
                "FechaDocumento": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumDocumento": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoDocumento": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.Entidad": {
            "title": "Entidad",
            "type": "object",
            "properties": {
                "CodigoEntidad": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "TipoEntidad": {
                    "$ref": "#/definitions/models.TipoEntidad"
                }
            }
        },
        "models.EstadoAnulacion": {
            "title": "EstadoAnulacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "string"
                }
            }
        },
        "models.EstadoApropiacion": {
            "title": "EstadoApropiacion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.EstadoAvance": {
            "title": "EstadoAvance",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoAvanceLegalizacionTipo": {
            "title": "EstadoAvanceLegalizacionTipo",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoCalendarioTributario": {
            "title": "EstadoCalendarioTributario",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoCancelacionInversion": {
            "title": "EstadoCancelacionInversion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoCheque": {
            "title": "EstadoCheque",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoChequera": {
            "title": "EstadoChequera",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoComprobante": {
            "title": "EstadoComprobante",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoCompromiso": {
            "title": "EstadoCompromiso",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoDevolucion": {
            "title": "EstadoDevolucion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                },
                "Tipo": {
                    "$ref": "#/definitions/models.TipoDevolucion"
                }
            }
        },
        "models.EstadoDisponibilidad": {
            "title": "EstadoDisponibilidad",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "string"
                }
            }
        },
        "models.EstadoGiro": {
            "title": "EstadoGiro",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviatura": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoIngreso": {
            "title": "EstadoIngreso",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "string"
                }
            }
        },
        "models.EstadoIngresoSinSituacionFondos": {
            "title": "EstadoIngresoSinSituacionFondos",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoInversion": {
            "title": "EstadoInversion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoLegalizacion": {
            "title": "EstadoLegalizacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoLegalizacionAvanceLegalizacion": {
            "title": "EstadoLegalizacionAvanceLegalizacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "AvanceLegalizacion": {
                    "$ref": "#/definitions/models.AvanceLegalizacion"
                },
                "Estado": {
                    "$ref": "#/definitions/models.EstadoLegalizacion"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Usuario": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.EstadoMovimientoApropiacion": {
            "title": "EstadoMovimientoApropiacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoMovimientoContable": {
            "title": "EstadoMovimientoContable",
            "type": "object",
            "properties": {
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoOrdenPago": {
            "title": "EstadoOrdenPago",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoRegistroPresupuestal": {
            "title": "EstadoRegistroPresupuestal",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "string"
                }
            }
        },
        "models.EstadoReservaPresupuestal": {
            "title": "EstadoReservaPresupuestal",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.EstructuraCuentas": {
            "title": "EstructuraCuentas",
            "type": "object",
            "properties": {
                "CuentaHijo": {
                    "$ref": "#/definitions/models.CuentaContable"
                },
                "CuentaPadre": {
                    "$ref": "#/definitions/models.CuentaContable"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PlanCuentas": {
                    "$ref": "#/definitions/models.PlanCuentas"
                }
            }
        },
        "models.EstructuraNivelesClasificacion": {
            "title": "EstructuraNivelesClasificacion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NivelHijo": {
                    "$ref": "#/definitions/models.NivelClasificacion"
                },
                "NivelPadre": {
                    "$ref": "#/definitions/models.NivelClasificacion"
                }
            }
        },
        "models.EtapaAvance": {
            "title": "EtapaAvance",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.FormaIngreso": {
            "title": "FormaIngreso",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.FormaPago": {
            "title": "FormaPago",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.FuenteFinanciamiento": {
            "title": "FuenteFinanciamiento",
            "type": "object",
            "properties": {
                "Codigo": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "TipoFuenteFinanciamiento": {
                    "$ref": "#/definitions/models.TipoFuenteFinanciamiento"
                }
            }
        },
        "models.FuenteFinanciamientoApropiacion": {
            "title": "FuenteFinanciamientoApropiacion",
            "type": "object",
            "properties": {
                "Apropiacion": {
                    "$ref": "#/definitions/models.Apropiacion"
                },
                "Dependencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "FuenteFinanciamiento": {
                    "$ref": "#/definitions/models.FuenteFinanciamiento"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MovimientoFuenteFinanciamientoApropiacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MovimientoFuenteFinanciamientoApropiacion"
                    }
                },
                "Rubro": {
                    "type": "string"
                }
            }
        },
        "models.Giro": {
            "title": "Giro",
            "type": "object",
            "properties": {
                "Consecutivo": {
                    "type": "integer",
                    "format": "int64"
                },
                "CuentaBancaria": {
                    "$ref": "#/definitions/models.CuentaBancaria"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "FormaPago": {
                    "$ref": "#/definitions/models.FormaPago"
                },
                "GiroDetalle": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GiroDetalle"
                    }
                },
                "GiroEstadoGiro": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GiroEstadoGiro"
                    }
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorTotal": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.GiroDetalle": {
            "title": "GiroDetalle",
            "type": "object",
            "properties": {
                "CuentaBancariaEnte": {
                    "$ref": "#/definitions/models.CuentaBancariaEnte"
                },
                "CuentaEspecial": {
                    "$ref": "#/definitions/models.CuentaEspecial"
                },
                "Giro": {
                    "$ref": "#/definitions/models.Giro"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrdenPago": {
                    "$ref": "#/definitions/models.OrdenPago"
                }
            }
        },
        "models.GiroEstadoGiro": {
            "title": "GiroEstadoGiro",
            "type": "object",
            "properties": {
                "EstadoGiro": {
                    "$ref": "#/definitions/models.EstadoGiro"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Giro": {
                    "$ref": "#/definitions/models.Giro"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Usuario": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Goru": {
            "title": "Goru",
            "type": "object"
        },
        "models.HistoricoInversion": {
            "title": "HistoricoInversion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InversionAntigua": {
                    "$ref": "#/definitions/models.Inversion"
                },
                "InversionNueva": {
                    "$ref": "#/definitions/models.Inversion"
                }
            }
        },
        "models.HomologacionComprobantes": {
            "title": "HomologacionComprobantes",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoComprobante": {
                    "$ref": "#/definitions/models.TipoComprobante"
                },
                "TipoDocumentoAfectante": {
                    "$ref": "#/definitions/models.TipoDocumentoAfectante"
                }
            }
        },
        "models.HomologacionConcepto": {
            "title": "HomologacionConcepto",
            "type": "object",
            "properties": {
                "ConceptoKronos": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "ConceptoTitan": {
                    "type": "integer",
                    "format": "int64"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NominaTitan": {
                    "type": "integer",
                    "format": "int64"
                },
                "SeguridadSocial": {
                    "type": "boolean"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.HomologacionDescuento": {
            "title": "HomologacionDescuento",
            "type": "object",
            "properties": {
                "ConceptoTitan": {
                    "type": "integer",
                    "format": "int64"
                },
                "CuentaEspecialKronos": {
                    "$ref": "#/definitions/models.CuentaEspecial"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.InformacionAdicionalBanco": {
            "title": "InformacionAdicionalBanco",
            "type": "object",
            "properties": {
                "Banco": {
                    "type": "integer",
                    "format": "int64"
                },
                "CodigoAch": {
                    "type": "integer",
                    "format": "int64"
                },
                "CodigoSuperintendencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Ingreso": {
            "title": "Ingreso",
            "type": "object",
            "properties": {
                "Aportante": {
                    "type": "integer",
                    "format": "int64"
                },
                "Consecutivo": {
                    "type": "number",
                    "format": "double"
                },
                "DocumentoGenerador": {
                    "$ref": "#/definitions/models.DocumentoGenerador"
                },
                "Elaboro": {
                    "type": "integer",
                    "format": "int64"
                },
                "Facultad": {
                    "type": "integer",
                    "format": "int64"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaIngreso": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "datetime"
                },
                "FormaIngreso": {
                    "$ref": "#/definitions/models.FormaIngreso"
                },
                "FuenteFinanciamiento": {
                    "$ref": "#/definitions/models.FuenteFinanciamiento"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IngresoConcepto": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IngresoConcepto"
                    }
                },
                "IngresoEstadoIngreso": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IngresoEstadoIngreso"
                    }
                },
                "MotivoRechazo": {
                    "type": "string"
                },
                "NumCuenta": {
                    "type": "string"
                },
                "Observaciones": {
                    "type": "string"
                },
                "Reviso": {
                    "type": "integer",
                    "format": "int64"
                },
                "UnidadEjecutora": {
                    "$ref": "#/definitions/models.UnidadEjecutora"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.IngresoConcepto": {
            "title": "IngresoConcepto",
            "type": "object",
            "properties": {
                "Concepto": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Ingreso": {
                    "$ref": "#/definitions/models.Ingreso"
                },
                "ValorAgregado": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.IngresoEstadoIngreso": {
            "title": "IngresoEstadoIngreso",
            "type": "object",
            "properties": {
                "EstadoIngreso": {
                    "$ref": "#/definitions/models.EstadoIngreso"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Ingreso": {
                    "$ref": "#/definitions/models.Ingreso"
                },
                "Usuario": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.IngresoSinSituacionFondos": {
            "title": "IngresoSinSituacionFondos",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Rubro": {
                    "$ref": "#/definitions/models.Rubro"
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int64"
                },
                "UsuarioRegistro": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorIngreso": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.IngresoSinSituacionFondosEstado": {
            "title": "IngresoSinSituacionFondosEstado",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "EstadoIngresoSinSituacionFondos": {
                    "$ref": "#/definitions/models.EstadoIngresoSinSituacionFondos"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IngresoSinSituacionFondos": {
                    "$ref": "#/definitions/models.IngresoSinSituacionFondos"
                }
            }
        },
        "models.Inversion": {
            "title": "Inversion",
            "type": "object",
            "properties": {
                "Comprador": {
                    "type": "integer",
                    "format": "int64"
                },
                "Emisor": {
                    "type": "integer",
                    "format": "int64"
                },
                "FechaCompra": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaEmision": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaPacto": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaRedencion": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaVencimiento": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaVenta": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroTransaccion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Observaciones": {
                    "type": "string"
                },
                "TasaNominal": {
                    "type": "number",
                    "format": "double"
                },
                "TituloInversion": {
                    "$ref": "#/definitions/models.TituloInversion"
                },
                "Trm": {
                    "type": "number",
                    "format": "double"
                },
                "UnidadEjecutora": {
                    "$ref": "#/definitions/models.UnidadEjecutora"
                },
                "ValorActual": {
                    "type": "number",
                    "format": "double"
                },
                "ValorNetoGirar": {
                    "type": "number",
                    "format": "double"
                },
                "ValorNomSaldoMonNal": {
                    "type": "number",
                    "format": "double"
                },
                "ValorNominalSaldo": {
                    "type": "number",
                    "format": "double"
                },
                "ValorRecompra": {
                    "type": "number",
                    "format": "double"
                },
                "Vendedor": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.InversionConcepto": {
            "title": "InversionConcepto",
            "type": "object",
            "properties": {
                "Concepto": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Inversion": {
                    "$ref": "#/definitions/models.Inversion"
                },
                "ValorAgregado": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.InversionEstadoInversion": {
            "title": "InversionEstadoInversion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Estado": {
                    "$ref": "#/definitions/models.EstadoInversion"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Inversion": {
                    "$ref": "#/definitions/models.Inversion"
                },
                "Usuario": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.InversionesActaInversion": {
            "title": "InversionesActaInversion",
            "type": "object",
            "properties": {
                "ActaInversion": {
                    "$ref": "#/definitions/models.ActaInversion"
                },
                "ActaPadre": {
                    "$ref": "#/definitions/models.Inversion"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Inversion": {
                    "$ref": "#/definitions/models.Inversion"
                },
                "Usuario": {
                    "type": "string"
                }
            }
        },
        "models.Legalizacion_avance": {
            "title": "Legalizacion_avance",
            "type": "object"
        },
        "models.ModificacionPresupuestal": {
            "title": "ModificacionPresupuestal",
            "type": "object",
            "properties": {
                "Apropiacion": {
                    "$ref": "#/definitions/models.Apropiacion"
                },
                "DocumentoNumero": {
                    "type": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroDisponibilidad": {
                    "type": "number",
                    "format": "double"
                },
                "TipoDocumento": {
                    "type": "string"
                },
                "TipoMovimiento": {
                    "type": "string"
                },
                "ValorContraCredito": {
                    "type": "number",
                    "format": "double"
                },
                "ValorCredito": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.ModuloKronos": {
            "title": "ModuloKronos",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.MovimientoApropiacion": {
            "title": "MovimientoApropiacion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "EstadoMovimientoApropiacion": {
                    "$ref": "#/definitions/models.EstadoMovimientoApropiacion"
                },
                "FechaMovimiento": {
                    "type": "string",
                    "format": "datetime"
                },
                "Foficio": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MovimientoApropiacionDisponibilidadApropiacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MovimientoApropiacionDisponibilidadApropiacion"
                    }
                },
                "Noficio": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroMovimiento": {
                    "type": "integer",
                    "format": "int64"
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.MovimientoApropiacionDisponibilidadApropiacion": {
            "title": "MovimientoApropiacionDisponibilidadApropiacion",
            "type": "object",
            "properties": {
                "CuentaContraCredito": {
                    "$ref": "#/definitions/models.Apropiacion"
                },
                "CuentaCredito": {
                    "$ref": "#/definitions/models.Apropiacion"
                },
                "Disponibilidad": {
                    "$ref": "#/definitions/models.Disponibilidad"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MovimientoApropiacion": {
                    "$ref": "#/definitions/models.MovimientoApropiacion"
                },
                "TipoMovimientoApropiacion": {
                    "$ref": "#/definitions/models.TipoMovimientoApropiacion"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.MovimientoContable": {
            "title": "MovimientoContable",
            "type": "object",
            "properties": {
                "CodigoDocumentoAfectante": {
                    "type": "integer",
                    "format": "int64"
                },
                "Concepto": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "Credito": {
                    "type": "integer",
                    "format": "int64"
                },
                "CuentaContable": {
                    "$ref": "#/definitions/models.CuentaContable"
                },
                "CuentaEspecial": {
                    "$ref": "#/definitions/models.CuentaEspecial"
                },
                "Debito": {
                    "type": "integer",
                    "format": "int64"
                },
                "EstadoMovimientoContable": {
                    "$ref": "#/definitions/models.EstadoMovimientoContable"
                },
                "Fecha": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoDocumentoAfectante": {
                    "$ref": "#/definitions/models.TipoDocumentoAfectante"
                }
            }
        },
        "models.MovimientoFuenteFinanciamientoApropiacion": {
            "title": "MovimientoFuenteFinanciamientoApropiacion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Fecha": {
                    "type": "string",
                    "format": "datetime"
                },
                "FuenteFinanciamientoApropiacion": {
                    "$ref": "#/definitions/models.FuenteFinanciamientoApropiacion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MovimientoFuenteFinanciamientoApropiacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoDocumento": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoMovimiento": {
                    "$ref": "#/definitions/models.TipoMovimiento"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.NivelClasificacion": {
            "title": "NivelClasificacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Longitud": {
                    "type": "number",
                    "format": "double"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.ObservacionCalendario": {
            "title": "ObservacionCalendario",
            "type": "object",
            "properties": {
                "CalendarioTributario": {
                    "$ref": "#/definitions/models.CalendarioTributario"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Fecha": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.OrdenDevolucion": {
            "title": "OrdenDevolucion",
            "type": "object",
            "properties": {
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Observaciones": {
                    "type": "string"
                },
                "UnidadEjecutora": {
                    "$ref": "#/definitions/models.UnidadEjecutora"
                },
                "ValorTotal": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.OrdenDevolucionEstadoDevolucion": {
            "title": "OrdenDevolucionEstadoDevolucion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Devolucion": {
                    "$ref": "#/definitions/models.OrdenDevolucion"
                },
                "EstadoDevolucion": {
                    "$ref": "#/definitions/models.EstadoDevolucion"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.OrdenDevolucionSolicitudDevolucion": {
            "title": "OrdenDevolucionSolicitudDevolucion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrdenDevolucion": {
                    "$ref": "#/definitions/models.OrdenDevolucion"
                },
                "SolicitudDevolucion": {
                    "$ref": "#/definitions/models.SolicitudDevolucion"
                }
            }
        },
        "models.OrdenPago": {
            "title": "OrdenPago",
            "type": "object",
            "properties": {
                "Consecutivo": {
                    "type": "integer",
                    "format": "int64"
                },
                "Convenio": {
                    "type": "integer",
                    "format": "int64"
                },
                "Documento": {
                    "type": "integer",
                    "format": "int64"
                },
                "EntradaAlmacen": {
                    "type": "integer",
                    "format": "int64"
                },
                "FormaPago": {
                    "$ref": "#/definitions/models.FormaPago"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Liquidacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrdenPagoCuentaEspecial": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrdenPagoCuentaEspecial"
                    }
                },
                "OrdenPagoEstadoOrdenPago": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrdenPagoEstadoOrdenPago"
                    }
                },
                "OrdenPagoRegistroPresupuestal": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrdenPagoRegistroPresupuestal"
                    }
                },
                "SubTipoOrdenPago": {
                    "$ref": "#/definitions/models.SubTipoOrdenPago"
                },
                "UnidadEjecutora": {
                    "$ref": "#/definitions/models.UnidadEjecutora"
                },
                "ValorBase": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.OrdenPagoAvanceLegalizacion": {
            "title": "OrdenPagoAvanceLegalizacion",
            "type": "object",
            "properties": {
                "Avance": {
                    "$ref": "#/definitions/models.SolicitudAvance"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrdenPago": {
                    "$ref": "#/definitions/models.OrdenPago"
                }
            }
        },
        "models.OrdenPagoCuentaEspecial": {
            "title": "OrdenPagoCuentaEspecial",
            "type": "object",
            "properties": {
                "CuentaEspecial": {
                    "$ref": "#/definitions/models.CuentaEspecial"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "FormaPago": {
                    "$ref": "#/definitions/models.FormaPago"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrdenPago": {
                    "$ref": "#/definitions/models.OrdenPago"
                },
                "Usuario": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorBase": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.OrdenPagoEstadoOrdenPago": {
            "title": "OrdenPagoEstadoOrdenPago",
            "type": "object",
            "properties": {
                "EstadoOrdenPago": {
                    "$ref": "#/definitions/models.EstadoOrdenPago"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrdenPago": {
                    "$ref": "#/definitions/models.OrdenPago"
                },
                "Usuario": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.OrdenPagoRegistroPresupuestal": {
            "title": "OrdenPagoRegistroPresupuestal",
            "type": "object",
            "properties": {
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrdenPago": {
                    "$ref": "#/definitions/models.OrdenPago"
                },
                "RegistroPresupuestal": {
                    "$ref": "#/definitions/models.RegistroPresupuestal"
                }
            }
        },
        "models.Pac": {
            "title": "Pac",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "DetallePac": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DetallePac"
                    }
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Pasivos_fenecidos": {
            "title": "Pasivos_fenecidos",
            "type": "object"
        },
        "models.PeriodoContable": {
            "title": "PeriodoContable",
            "type": "object",
            "properties": {
                "Ano": {
                    "type": "number",
                    "format": "double"
                },
                "Descripcion": {
                    "type": "string"
                },
                "EstadoActivo": {
                    "type": "boolean"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Mes": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.PeriodoPlanCuentas": {
            "title": "PeriodoPlanCuentas",
            "type": "object",
            "properties": {
                "Definitivo": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PeriodoContable": {
                    "$ref": "#/definitions/models.PeriodoContable"
                },
                "PlanCuentas": {
                    "$ref": "#/definitions/models.PlanCuentas"
                }
            }
        },
        "models.PlanCuentas": {
            "title": "PlanCuentas",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "PlanMaestro": {
                    "type": "boolean"
                },
                "UnidadEjecutora": {
                    "$ref": "#/definitions/models.UnidadEjecutora"
                }
            }
        },
        "models.PresupuestoAvance": {
            "title": "PresupuestoAvance",
            "type": "object",
            "properties": {
                "Compromiso": {
                    "type": "string"
                },
                "Disponibilidad": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrdenPago": {
                    "type": "string"
                },
                "Registro": {
                    "type": "string"
                },
                "Rubro": {
                    "$ref": "#/definitions/models.Rubro"
                },
                "SolicitudAvance": {
                    "$ref": "#/definitions/models.SolicitudAvance"
                },
                "Vigencia": {
                    "type": "string"
                }
            }
        },
        "models.Producto": {
            "title": "Producto",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "ProductoRubro": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductoRubro"
                    }
                }
            }
        },
        "models.ProductoRubro": {
            "title": "ProductoRubro",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Producto": {
                    "$ref": "#/definitions/models.Producto"
                },
                "Rubro": {
                    "$ref": "#/definitions/models.Rubro"
                },
                "ValorDistribucion": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.RazonDevolucion": {
            "title": "RazonDevolucion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.RegistroComprobantes": {
            "title": "RegistroComprobantes",
            "type": "object",
            "properties": {
                "CentroCosto": {
                    "type": "integer",
                    "format": "int64"
                },
                "Comprobante": {
                    "$ref": "#/definitions/models.Comprobante"
                },
                "CuentaContable": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Movimiento": {
                    "type": "integer",
                    "format": "int64"
                },
                "MovimientoContable": {
                    "$ref": "#/definitions/models.MovimientoContable"
                },
                "Secuencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "SubcentroCosto": {
                    "type": "integer",
                    "format": "int64"
                },
                "Tercero": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoDocumentoAfectante": {
                    "$ref": "#/definitions/models.TipoDocumentoAfectante"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.RegistroPresupuestal": {
            "title": "RegistroPresupuestal",
            "type": "object",
            "properties": {
                "Beneficiario": {
                    "type": "integer",
                    "format": "int64"
                },
                "Estado": {
                    "$ref": "#/definitions/models.EstadoRegistroPresupuestal"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroCompromiso": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroRegistroPresupuestal": {
                    "type": "integer",
                    "format": "int64"
                },
                "RegistroPresupuestalDisponibilidadApropiacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidadApropiacion"
                    }
                },
                "Responsable": {
                    "type": "integer",
                    "format": "int64"
                },
                "Solicitud": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoCompromiso": {
                    "$ref": "#/definitions/models.Compromiso"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.RegistroPresupuestalDisponibilidadApropiacion": {
            "title": "RegistroPresupuestalDisponibilidadApropiacion",
            "type": "object",
            "properties": {
                "DisponibilidadApropiacion": {
                    "$ref": "#/definitions/models.DisponibilidadApropiacion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "RegistroPresupuestal": {
                    "$ref": "#/definitions/models.RegistroPresupuestal"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Reintegro": {
            "title": "Reintegro",
            "type": "object",
            "properties": {
                "Causal": {
                    "$ref": "#/definitions/models.CausalReintegro"
                },
                "Consecutivo": {
                    "type": "integer",
                    "format": "int64"
                },
                "Disponible": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Ingreso": {
                    "$ref": "#/definitions/models.Ingreso"
                },
                "OrdenPago": {
                    "$ref": "#/definitions/models.OrdenPago"
                }
            }
        },
        "models.ReintegroAvanceLegalizacion": {
            "title": "ReintegroAvanceLegalizacion",
            "type": "object",
            "properties": {
                "AvanceLegalizacion": {
                    "$ref": "#/definitions/models.AvanceLegalizacion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Reintegro": {
                    "$ref": "#/definitions/models.Reintegro"
                }
            }
        },
        "models.RequisitoAvance": {
            "title": "RequisitoAvance",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "EtapaAvance": {
                    "$ref": "#/definitions/models.EtapaAvance"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.RequisitoTipoAvance": {
            "title": "RequisitoTipoAvance",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "RequisitoAvance": {
                    "$ref": "#/definitions/models.RequisitoAvance"
                },
                "TipoAvance": {
                    "$ref": "#/definitions/models.TipoAvance"
                }
            }
        },
        "models.ReservaPresupuestal": {
            "title": "ReservaPresupuestal",
            "type": "object",
            "properties": {
                "Estado": {
                    "$ref": "#/definitions/models.EstadoReservaPresupuestal"
                },
                "FechaMovimiento": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Responsable": {
                    "type": "integer",
                    "format": "int32"
                },
                "Rubro": {
                    "$ref": "#/definitions/models.Rubro"
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int32"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Rubro": {
            "title": "Rubro",
            "type": "object",
            "properties": {
                "Codigo": {
                    "type": "string"
                },
                "Concepto": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Concepto"
                    }
                },
                "Descripcion": {
                    "type": "string"
                },
                "Entidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "ProductoRubro": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductoRubro"
                    }
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.RubroHomologado": {
            "title": "RubroHomologado",
            "type": "object",
            "properties": {
                "CodigoHomologado": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreHomologado": {
                    "type": "string"
                },
                "Organizacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.RubroHomologadoRubro": {
            "title": "RubroHomologadoRubro",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Rubro": {
                    "$ref": "#/definitions/models.Rubro"
                },
                "RubroHomologado": {
                    "$ref": "#/definitions/models.RubroHomologado"
                }
            }
        },
        "models.RubroRubro": {
            "title": "RubroRubro",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "RubroHijo": {
                    "$ref": "#/definitions/models.Rubro"
                },
                "RubroPadre": {
                    "$ref": "#/definitions/models.Rubro"
                }
            }
        },
        "models.SaldoCuentaContable": {
            "title": "SaldoCuentaContable",
            "type": "object",
            "properties": {
                "Anio": {
                    "type": "number",
                    "format": "double"
                },
                "CuentaContable": {
                    "$ref": "#/definitions/models.CuentaContable"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Mes": {
                    "type": "number",
                    "format": "double"
                },
                "Saldo": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.SolicitudAvance": {
            "title": "SolicitudAvance",
            "type": "object",
            "properties": {
                "Beneficiario": {
                    "type": "number",
                    "format": "double"
                },
                "CodigoConvenio": {
                    "type": "string"
                },
                "CodigoProyectoInv": {
                    "type": "string"
                },
                "Consecutivo": {
                    "type": "integer",
                    "format": "int64"
                },
                "Convenio": {
                    "type": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Justificacion": {
                    "type": "string"
                },
                "Objetivo": {
                    "type": "string"
                },
                "ProyectoInv": {
                    "type": "string"
                },
                "Usuario": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.SolicitudDevolucion": {
            "title": "SolicitudDevolucion",
            "type": "object",
            "properties": {
                "Beneficiario": {
                    "type": "integer",
                    "format": "int64"
                },
                "CuentaBancariaEnte": {
                    "$ref": "#/definitions/models.CuentaBancariaEnte"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "FormaPago": {
                    "$ref": "#/definitions/models.FormaPago"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Observaciones": {
                    "type": "string"
                },
                "RazonDevolucion": {
                    "$ref": "#/definitions/models.RazonDevolucion"
                },
                "Solicitante": {
                    "type": "integer",
                    "format": "int64"
                },
                "Soporte": {
                    "type": "integer",
                    "format": "int64"
                },
                "UnidadEjecutora": {
                    "$ref": "#/definitions/models.UnidadEjecutora"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.SolicitudDevolucionConcepto": {
            "title": "SolicitudDevolucionConcepto",
            "type": "object",
            "properties": {
                "Concepto": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "SolicitudDevolucion": {
                    "$ref": "#/definitions/models.SolicitudDevolucion"
                },
                "ValorDevolucion": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.SolicitudDevolucionEstadoDevolucion": {
            "title": "SolicitudDevolucionEstadoDevolucion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Devolucion": {
                    "$ref": "#/definitions/models.SolicitudDevolucion"
                },
                "EstadoDevolucion": {
                    "$ref": "#/definitions/models.EstadoDevolucion"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.SolicitudRequisitoTipoAvance": {
            "title": "SolicitudRequisitoTipoAvance",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Documento": {
                    "type": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Observaciones": {
                    "type": "string"
                },
                "RequisitoTipoAvance": {
                    "$ref": "#/definitions/models.RequisitoTipoAvance"
                },
                "SolicitudTipoAvance": {
                    "$ref": "#/definitions/models.SolicitudTipoAvance"
                },
                "Valido": {
                    "type": "boolean"
                }
            }
        },
        "models.SolicitudTipoAvance": {
            "title": "SolicitudTipoAvance",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "SolicitudAvance": {
                    "$ref": "#/definitions/models.SolicitudAvance"
                },
                "TipoAvance": {
                    "$ref": "#/definitions/models.TipoAvance"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.SubTipoOrdenPago": {
            "title": "SubTipoOrdenPago",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "GrupoSecuencia": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                },
                "TipoOrdenPago": {
                    "$ref": "#/definitions/models.TipoOrdenPago"
                }
            }
        },
        "models.TipoAfectacion": {
            "title": "TipoAfectacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoAnulacionPresupuestal": {
            "title": "TipoAnulacionPresupuestal",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoAvance": {
            "title": "TipoAvance",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoAvanceLegalizacion": {
            "title": "TipoAvanceLegalizacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoComprobante": {
            "title": "TipoComprobante",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Entidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.TipoCompromisoTesoral": {
            "title": "TipoCompromisoTesoral",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CategoriaCompromiso": {
                    "$ref": "#/definitions/models.CategoriaCompromiso"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoConcepto": {
            "title": "TipoConcepto",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoCuentaBancaria": {
            "title": "TipoCuentaBancaria",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoCuentaEspecial": {
            "title": "TipoCuentaEspecial",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoDevolucion": {
            "title": "TipoDevolucion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoDisponibilidad": {
            "title": "TipoDisponibilidad",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoDocumentoAfectante": {
            "title": "TipoDocumentoAfectante",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoEntidad": {
            "title": "TipoEntidad",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.TipoFuenteFinanciamiento": {
            "title": "TipoFuenteFinanciamiento",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoMovimiento": {
            "title": "TipoMovimiento",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoMovimientoApropiacion": {
            "title": "TipoMovimientoApropiacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CuentaContraCredito": {
                    "type": "boolean"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Disponibilidad": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoOrdenPago": {
            "title": "TipoOrdenPago",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoRecurso": {
            "title": "TipoRecurso",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.TipoTransaccionVersion": {
            "title": "TipoTransaccionVersion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoTransaccion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Version": {
                    "$ref": "#/definitions/models.VersionTipoTransaccion"
                }
            }
        },
        "models.TituloInversion": {
            "title": "TituloInversion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TrConcepto": {
            "title": "TrConcepto",
            "type": "object",
            "properties": {
                "Afectaciones": {
                    "$ref": "#/definitions/1009968.\u003cnil\u003e.AfectacionConcepto"
                },
                "Concepto": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "ConceptoPadre": {
                    "$ref": "#/definitions/models.Concepto"
                },
                "Cuentas": {
                    "$ref": "#/definitions/1010014.\u003cnil\u003e.CuentaContable"
                },
                "DelCuentas": {
                    "$ref": "#/definitions/1010056.\u003cnil\u003e.ConceptoCuentaContable"
                },
                "DetalleTipoTransaccion": {
                    "$ref": "#/definitions/models.DetalleTipoTransaccionVersion"
                }
            }
        },
        "models.TrCuentaContable": {
            "title": "TrCuentaContable",
            "type": "object",
            "properties": {
                "Cuenta": {
                    "$ref": "#/definitions/models.CuentaContable"
                },
                "CuentaPadre": {
                    "$ref": "#/definitions/models.CuentaContable"
                },
                "PlanCuentas": {
                    "$ref": "#/definitions/models.PlanCuentas"
                }
            }
        },
        "models.UnidadEjecutora": {
            "title": "UnidadEjecutora",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Entidad": {
                    "$ref": "#/definitions/models.Entidad"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.VersionTipoTransaccion": {
            "title": "VersionTipoTransaccion",
            "type": "object",
            "properties": {
                "Definitiva": {
                    "type": "boolean"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroVersion": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.giro": {
            "title": "giro",
            "type": "object"
        },
        "models.homologacion_concepto": {
            "title": "homologacion_concepto",
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "tipo_avance_legalizacion",
            "description": "TipoAvanceLegalizacionController operations for TipoAvanceLegalizacion\n"
        },
        {
            "name": "avance_legalizacion",
            "description": "AvanceLegalizacionController operations for AvanceLegalizacion\n"
        },
        {
            "name": "avance_legalizacion_cuenta_especial",
            "description": "AvanceLegalizacionCuentaEspecialController operations for AvanceLegalizacionCuentaEspecial\n"
        },
        {
            "name": "etapa_avance",
            "description": "EtapaAvanceController operations for EtapaAvance\n"
        },
        {
            "name": "tipo_movimiento",
            "description": "TipoMovimientoController operations for TipoMovimiento\n"
        },
        {
            "name": "movimiento_fuente_financiamiento_apropiacion",
            "description": "MovimientoFuenteFinanciamientoApropiacionController operations for MovimientoFuenteFinanciamientoApropiacion\n"
        },
        {
            "name": "fuente_financiamiento",
            "description": "FuenteFinanciamientoController operations for FuenteFinanciamiento\n"
        },
        {
            "name": "tipo_fuente_financiamiento",
            "description": "TipoFuenteFinanciamientoController operations for TipoFuenteFinanciamiento\n"
        },
        {
            "name": "fuente_financiamiento_apropiacion",
            "description": "FuenteFinanciamientoApropiacionController operations for FuenteFinanciamientoApropiacion\n"
        },
        {
            "name": "requisito_avance",
            "description": "RequisitoAvanceController operations for RequisitoAvance\n"
        },
        {
            "name": "presupuesto_avance",
            "description": "PresupuestoAvanceController operations for PresupuestoAvance\n"
        },
        {
            "name": "avance_estado_avance",
            "description": "AvanceEstadoAvanceController operations for AvanceEstadoAvance\n"
        },
        {
            "name": "estado_avance",
            "description": "EstadoAvanceController operations for EstadoAvance\n"
        },
        {
            "name": "solicitud_avance",
            "description": "SolicitudAvanceController operations for SolicitudAvance\n"
        },
        {
            "name": "tipo_avance",
            "description": "TipoAvanceController operations for TipoAvance\n"
        },
        {
            "name": "solicitud_tipo_avance",
            "description": "SolicitudTipoAvanceController operations for SolicitudTipoAvance\n"
        },
        {
            "name": "requisito_tipo_avance",
            "description": "RequisitoTipoAvanceController operations for RequisitoTipoAvance\n"
        },
        {
            "name": "solicitud_requisito_tipo_avance",
            "description": "SolicitudRequisitoTipoAvanceController operations for SolicitudRequisitoTipoAvance\n"
        },
        {
            "name": "anulacion_registro_presupuestal",
            "description": "AnulacionRegistroPresupuestalController operations for AnulacionRegistroPresupuestal\n"
        },
        {
            "name": "anulacion_registro_presupuestal_disponibilidad_apropiacion",
            "description": "AnulacionRegistroPresupuestalDisponibilidadApropiacionController operations for AnulacionRegistroPresupuestalDisponibilidadApropiacion\n"
        },
        {
            "name": "anulacion_disponibilidad",
            "description": "AnulacionDisponibilidadController operations for AnulacionDisponibilidad\n"
        },
        {
            "name": "anulacion_disponibilidad_apropiacion",
            "description": "AnulacionDisponibilidadApropiacionController operations for AnulacionDisponibilidadApropiacion\n"
        },
        {
            "name": "anulacion_reserva",
            "description": "AnulacionReservaController operations for AnulacionReserva\n"
        },
        {
            "name": "estado_apropiacion",
            "description": "EstadoApropiacionController operations for EstadoApropiacion\n"
        },
        {
            "name": "estado_disponibilidad",
            "description": "EstadoDisponibilidadController operations for EstadoDisponibilidad\n"
        },
        {
            "name": "disponibilidad",
            "description": "DisponibilidadController operations for Disponibilidad\n"
        },
        {
            "name": "apropiacion",
            "description": "ApropiacionController operations for Apropiacion\n"
        },
        {
            "name": "modificacion_presupuestal",
            "description": "ModificacionPresupuestalController operations for ModificacionPresupuestal\n"
        },
        {
            "name": "estado_registro_presupuestal",
            "description": "EstadoRegistroPresupuestalController operations for EstadoRegistroPresupuestal\n"
        },
        {
            "name": "disponibilidad_apropiacion",
            "description": "DisponibilidadApropiacionController operations for DisponibilidadApropiacion\n"
        },
        {
            "name": "registro_presupuestal_disponibilidad_apropiacion",
            "description": "RegistroPresupuestalDisponibilidadApropiacionController operations for RegistroPresupuestalDisponibilidadApropiacion\n"
        },
        {
            "name": "estado_reserva_presupuestal",
            "description": "EstadoReservaPresupuestalController operations for EstadoReservaPresupuestal\n"
        },
        {
            "name": "reserva_presupuestal",
            "description": "ReservaPresupuestalController operations for ReservaPresupuestal\n"
        },
        {
            "name": "rubro_homologado",
            "description": "RubroHomologadoController operations for RubroHomologado\n"
        },
        {
            "name": "rubro_rubro",
            "description": "RubroRubroController operations for RubroRubro\n"
        },
        {
            "name": "nivel_clasificacion",
            "description": "NivelClasificacionController operations for NivelClasificacion\n"
        },
        {
            "name": "tipo_documento_afectante",
            "description": "TipoDocumentoAfectanteController operations for TipoDocumentoAfectante\n"
        },
        {
            "name": "movimiento_contable",
            "description": "MovimientoContableController operations for MovimientoContable\n"
        },
        {
            "name": "estructura_cuentas",
            "description": "EstructuraCuentasController operations for EstructuraCuentas\n"
        },
        {
            "name": "periodo_contable",
            "description": "PeriodoContableController operations for PeriodoContable\n"
        },
        {
            "name": "plan_cuentas",
            "description": "PlanCuentasController operations for PlanCuentas\n"
        },
        {
            "name": "periodo_plan_cuentas",
            "description": "PeriodoPlanCuentasController operations for PeriodoPlanCuentas\n"
        },
        {
            "name": "cuenta_contable",
            "description": "CuentaContableController operations for CuentaContable\n"
        },
        {
            "name": "concepto_cuenta_contable",
            "description": "ConceptoCuentaContableController operations for ConceptoCuentaContable\n"
        },
        {
            "name": "tipo_cuenta_bancaria",
            "description": "TipoCuentaBancariaController operations for TipoCuentaBancaria\n"
        },
        {
            "name": "tipo_recurso",
            "description": "TipoRecursoController operations for TipoRecurso\n"
        },
        {
            "name": "cuenta_bancaria",
            "description": "CuentaBancariaController operations for CuentaBancaria\n"
        },
        {
            "name": "tipo_entidad",
            "description": "TipoEntidadController operations for TipoEntidad\n"
        },
        {
            "name": "entidad",
            "description": "EntidadController operations for Entidad\n"
        },
        {
            "name": "categoria_compromiso",
            "description": "CategoriaCompromisoController operations for CategoriaCompromiso\n"
        },
        {
            "name": "tipo_compromiso_tesoral",
            "description": "TipoCompromisoTesoralController operations for TipoCompromisoTesoral\n"
        },
        {
            "name": "estado_compromiso",
            "description": "EstadoCompromisoController operations for EstadoCompromiso\n"
        },
        {
            "name": "compromiso",
            "description": "CompromisoController operations for Compromiso\n"
        },
        {
            "name": "modulo_kronos",
            "description": "ModuloKronosController operations for ModuloKronos\n"
        },
        {
            "name": "clase_transaccion",
            "description": "ClaseTransaccionController operations for ClaseTransaccion\n"
        },
        {
            "name": "tipo_afectacion",
            "description": "TipoAfectacionController operations for TipoAfectacion\n"
        },
        {
            "name": "afectacion_concepto",
            "description": "AfectacionConceptoController operations for AfectacionConcepto\n"
        },
        {
            "name": "concepto_concepto",
            "description": "ConceptoConceptoController operations for ConceptoConcepto\n"
        },
        {
            "name": "tipo_concepto",
            "description": "TipoConceptoController operations for TipoConcepto\n"
        },
        {
            "name": "rubro",
            "description": "RubroController operations for Rubro\n"
        },
        {
            "name": "detalle_pac",
            "description": "DetallePacController operations for DetallePac\n"
        },
        {
            "name": "forma_ingreso",
            "description": "FormaIngresoController operations for FormaIngreso\n"
        },
        {
            "name": "estado_ingreso",
            "description": "EstadoIngresoController operations for EstadoIngreso\n"
        },
        {
            "name": "ingreso",
            "description": "IngresoController operations for Ingreso\n"
        },
        {
            "name": "ingreso_concepto",
            "description": "IngresoConceptoController operations for IngresoConcepto\n"
        },
        {
            "name": "unidad_ejecutora",
            "description": "UnidadEjecutoraController operations for UnidadEjecutora\n"
        },
        {
            "name": "estado_orden_pago",
            "description": "EstadoOrdenPagoController operations for EstadoOrdenPago\n"
        },
        {
            "name": "tipo_orden_pago",
            "description": "TipoOrdenPagoController operations for TipoOrdenPago\n"
        },
        {
            "name": "registro_presupuestal",
            "description": "RegistroPresupuestalController operations for RegistroPresupuestal\n"
        },
        {
            "name": "orden_pago",
            "description": "OrdenPagoController operations for OrdenPago\n"
        },
        {
            "name": "concepto",
            "description": "ConceptoController operations for Concepto\n"
        },
        {
            "name": "concepto_orden_pago",
            "description": "ConceptoOrdenPagoController operations for ConceptoOrdenPago\n"
        },
        {
            "name": "estructura_niveles_clasificacion",
            "description": "EstructuraNivelesClasificacionController operations for EstructuraNivelesClasificacion\n"
        },
        {
            "name": "arbol_conceptos",
            "description": "ArbolConceptosController operations for ArbolConceptos\n"
        },
        {
            "name": "tr_concepto",
            "description": "oprations for TrConcepto\n"
        },
        {
            "name": "arbol_plan_cuentas",
            "description": "ArbolPlanCuentasController operations for estructura_cuentas\n"
        },
        {
            "name": "tr_cuentas_contables",
            "description": "TrCuentasContablesController operations for plan_cuentas\n"
        },
        {
            "name": "tipo_cuenta_especial",
            "description": "TipoCuentaEspecialController operations for TipoCuentaEspecial\n"
        },
        {
            "name": "cuenta_especial",
            "description": "CuentaEspecialController operations for CuentaEspecial\n"
        },
        {
            "name": "homologacion_concepto",
            "description": "HomologacionConceptoController oprations for HomologacionConcepto\n"
        },
        {
            "name": "estado_calendario_tributario",
            "description": "EstadoCalendarioTributarioController operations for EstadoCalendarioTributario\n"
        },
        {
            "name": "calendario_tributario",
            "description": "CalendarioTributarioController operations for CalendarioTributario\n"
        },
        {
            "name": "observacion_calendario",
            "description": "ObservacionCalendarioController operations for ObservacionCalendario\n"
        },
        {
            "name": "cierre_periodo_presupuestal",
            "description": "CierrePeriodoPresupuestalController operations for CierrePeriodoPresupuestal\n"
        },
        {
            "name": "orden_pago_estado_orden_pago",
            "description": "OrdenPagoEstadoOrdenPagoController operations for OrdenPagoEstadoOrdenPago\n"
        },
        {
            "name": "giro",
            "description": "GiroController operations for Giro\n"
        },
        {
            "name": "giro_estado_giro",
            "description": "GiroEstadoGiroController operations for GiroEstadoGiro\n"
        },
        {
            "name": "estado_giro",
            "description": "EstadoGiroController operations for EstadoGiro\n"
        },
        {
            "name": "giro_detalle",
            "description": "GiroDetalleController operations for GiroDetalle\n"
        },
        {
            "name": "forma_pago",
            "description": "FormaPagoController operations for FormaPago\n"
        },
        {
            "name": "estado_movimiento_contable",
            "description": "EstadoMovimientoContableController operations for EstadoMovimientoContable\n"
        },
        {
            "name": "sub_tipo_orden_pago",
            "description": "SubTipoOrdenPagoController operations for SubTipoOrdenPago\n"
        },
        {
            "name": "concepto_tesoral_facultad_proyecto",
            "description": "ConceptoTesoralFacultadProyectoController operations for ConceptoTesoralFacultadProyecto\n"
        },
        {
            "name": "saldo_cuenta_contable",
            "description": "SaldoCuentaContableController operations for SaldoCuentaContable\n"
        },
        {
            "name": "homologacion_descuento",
            "description": "HomologacionDescuentoController operations for HomologacionDescuento\n"
        },
        {
            "name": "tipo_disponibilidad",
            "description": "TipoDisponibilidadController operations for TipoDisponibilidad\n"
        },
        {
            "name": "disponibilidad_proceso_externo",
            "description": "DisponibilidadProcesoExternoController operations for DisponibilidadProcesoExterno\n"
        },
        {
            "name": "estado_movimiento_apropiacion",
            "description": "EstadoMovimientoApropiacionController operations for EstadoMovimientoApropiacion\n"
        },
        {
            "name": "movimiento_apropiacion",
            "description": "MovimientoApropiacionController operations for MovimientoApropiacion\n"
        },
        {
            "name": "movimiento_apropiacion_disponibilidad_apropiacion",
            "description": "MovimientoApropiacionDisponibilidadApropiacionController operations for MovimientoApropiacionDisponibilidadApropiacion\n"
        },
        {
            "name": "tipo_movimiento_apropiacion",
            "description": "TipoMovimientoApropiacionController operations for TipoMovimientoApropiacion\n"
        },
        {
            "name": "ingreso_estado_ingreso",
            "description": "IngresoEstadoIngresoController operations for IngresoEstadoIngreso\n"
        },
        {
            "name": "tipo_anulacion_presupuestal",
            "description": "TipoAnulacionPresupuestalController operations for TipoAnulacionPresupuestal\n"
        },
        {
            "name": "estado_comprobante",
            "description": "EstadoComprobanteController operations for EstadoComprobante\n"
        },
        {
            "name": "registro_comprobantes",
            "description": "RegistroComprobantesController operations for RegistroComprobantes\n"
        },
        {
            "name": "comprobante",
            "description": "ComprobanteController operations for Comprobante\n"
        },
        {
            "name": "tipo_comprobante",
            "description": "TipoComprobanteController operations for TipoComprobante\n"
        },
        {
            "name": "homologacion_comprobantes",
            "description": "HomologacionComprobantesController operations for HomologacionComprobantes\n"
        },
        {
            "name": "documento_generador",
            "description": "DocumentoGeneradorController operations for DocumentoGenerador\n"
        },
        {
            "name": "pasivos_fenecidos",
            "description": "Pasivos_fenecidosController operations for Pasivos_fenecidos\n"
        },
        {
            "name": "producto",
            "description": "ProductoController operations for Producto\n"
        },
        {
            "name": "producto_rubro",
            "description": "ProductoRubroController operations for ProductoRubro\n"
        },
        {
            "name": "estado_inversion",
            "description": "EstadoInversionController operations for EstadoInversion\n"
        },
        {
            "name": "acta_inversion",
            "description": "ActaInversionController operations for ActaInversion\n"
        },
        {
            "name": "inversion",
            "description": "InversionController operations for Inversion\n"
        },
        {
            "name": "inversiones_acta_inversion",
            "description": "InversionesActaInversionController operations for InversionesActaInversion\n"
        },
        {
            "name": "inversion_estado_inversion",
            "description": "InversionEstadoInversionController operations for InversionEstadoInversion\n"
        },
        {
            "name": "titulo_inversion",
            "description": "TituloInversionController operations for TituloInversion\n"
        },
        {
            "name": "inversion_concepto",
            "description": "InversionConceptoController operations for InversionConcepto\n"
        },
        {
            "name": "historico_inversion",
            "description": "HistoricoInversionController operations for HistoricoInversion\n"
        },
        {
            "name": "orden_devolucion",
            "description": "OrdenDevolucionController operations for OrdenDevolucion\n"
        },
        {
            "name": "documento_devolucion",
            "description": "DocumentoDevolucionController operations for DocumentoDevolucion\n"
        },
        {
            "name": "cuenta_devolucion",
            "description": "CuentaBancariaEnteController operations for CuentaBancariaEnte\n"
        },
        {
            "name": "acta_devolucion",
            "description": "ActaDevolucionController operations for ActaDevolucion\n"
        },
        {
            "name": "solicitud_devolucion",
            "description": "SolicitudDevolucionController operations for SolicitudDevolucion\n"
        },
        {
            "name": "devolucion_estado_devolucion",
            "description": "DevolucionEstadoDevolucionController operations for DevolucionEstadoDevolucion\n"
        },
        {
            "name": "razon_devolucion",
            "description": "RazonDevolucionController operations for RazonDevolucion\n"
        },
        {
            "name": "tipo_devolucion",
            "description": "TipoDevolucionController operations for TipoDevolucion\n"
        },
        {
            "name": "estado_devolucion",
            "description": "EstadoDevolucionController operations for EstadoDevolucion\n"
        },
        {
            "name": "solicitud_devolucion_estado_devolucion",
            "description": "SolicitudDevolucionEstadoDevolucionController operations for SolicitudDevolucionEstadoDevolucion\n"
        },
        {
            "name": "solicitud_devolucion_concepto",
            "description": "SolicitudDevolucionConceptoController operations for SolicitudDevolucionConcepto\n"
        },
        {
            "name": "orden_devolucion_solicitud_devolucion",
            "description": "OrdenDevolucionSolicitudDevolucionController operations for OrdenDevolucionSolicitudDevolucion\n"
        },
        {
            "name": "orden_devolucion_estado_devolucion",
            "description": "OrdenDevolucionEstadoDevolucionController operations for OrdenDevolucionEstadoDevolucion\n"
        },
        {
            "name": "devolucion_tributaria_movimiento",
            "description": "DevolucionTributariaMovimientoAsociadoController operations for DevolucionTributariaMovimientoAsociado\n"
        },
        {
            "name": "devolucion_tributaria_estado_devolucion",
            "description": "DevolucionTributariaEstadoDevolucionController operations for DevolucionTributariaEstadoDevolucion\n"
        },
        {
            "name": "devolucion_tributaria_concepto",
            "description": "DevolucionTributariaConceptoController operations for DevolucionTributariaConcepto\n"
        },
        {
            "name": "devolucion_tributaria",
            "description": "DevolucionTributariaController operations for DevolucionTributaria\n"
        },
        {
            "name": "ingreso_sin_situacion_fondos",
            "description": "IngresoSinSituacionFondosController operations for IngresoSinSituacionFondos\n"
        },
        {
            "name": "estado_ingreso_sin_situacion_fondos",
            "description": "EstadoIngresoSinSituacionFondosController operations for EstadoIngresoSinSituacionFondos\n"
        },
        {
            "name": "ingreso_sin_situacion_fondos_estado",
            "description": "IngresoSinSituacionFondosEstadoController operations for IngresoSinSituacionFondosEstado\n"
        },
        {
            "name": "orden_pago_registro_presupuestal",
            "description": "OrdenPagoRegistroPresupuestalController operations for OrdenPagoRegistroPresupuestal\n"
        },
        {
            "name": "orden_pago_cuenta_especial",
            "description": "OrdenPagoCuentaEspecialController operations for OrdenPagoCuentaEspecial\n"
        },
        {
            "name": "informacion_adicional_banco",
            "description": "InformacionAdicionalBancoController operations for InformacionAdicionalBanco\n"
        },
        {
            "name": "rubro_homologado_rubro",
            "description": "RubroHomologadoRubroController operations for RubroHomologadoRubro\n"
        },
        {
            "name": "cancelacion_inversion_inversion",
            "description": "CancelacionInversionInversionController operations for CancelacionInversionInversion\n"
        },
        {
            "name": "estado_cancelacion_inversion",
            "description": "EstadoCancelacionInversionController operations for EstadoCancelacionInversion\n"
        },
        {
            "name": "cancelacion_inversion_estado_cancelacion",
            "description": "CancelacionInversionEstadoCancelacionController operations for CancelacionInversionEstadoCancelacion\n"
        },
        {
            "name": "cancelacion_inversion",
            "description": "CancelacionInversionController operations for CancelacionInversion\n"
        },
        {
            "name": "cancelacion_inversion_concepto",
            "description": "CancelacionInversionConceptoController operations for CancelacionInversionConcepto\n"
        },
        {
            "name": "causal_reintegro",
            "description": "CausalReintegroController operations for CausalReintegro\n"
        },
        {
            "name": "reintegro",
            "description": "ReintegroController operations for Reintegro\n"
        },
        {
            "name": "reintegro_avance_legalizacion",
            "description": "ReintegroAvanceLegalizacionController operations for ReintegroAvanceLegalizacion\n"
        },
        {
            "name": "orden_pago_avance_legalizacion",
            "description": "OrdenPagoAvanceLegalizacionController operations for OrdenPagoAvanceLegalizacion\n"
        },
        {
            "name": "chequera",
            "description": "ChequeraController operations for Chequera\n"
        },
        {
            "name": "estado_chequera",
            "description": "EstadoChequeraController operations for EstadoChequera\n"
        },
        {
            "name": "chequera_estado_chequera",
            "description": "ChequeraEstadoChequeraController operations for ChequeraEstadoChequera\n"
        },
        {
            "name": "cheque",
            "description": "ChequeController operations for Cheque\n"
        },
        {
            "name": "cheque_estado_cheque",
            "description": "ChequeEstadoChequeController operations for ChequeEstadoCheque\n"
        },
        {
            "name": "estado_cheque",
            "description": "EstadoChequeController operations for EstadoCheque\n"
        },
        {
            "name": "avance_legalizacion_tipo",
            "description": "AvanceLegalizacionTipoController operations for AvanceLegalizacionTipo\n"
        },
        {
            "name": "concepto_avance_legalizacion_tipo",
            "description": "ConceptoAvanceLegalizacionTipoController operations for ConceptoAvanceLegalizacionTipo\n"
        },
        {
            "name": "estado_legalizacion",
            "description": "EstadoLegalizacionController operations for EstadoLegalizacion\n"
        },
        {
            "name": "estado_legalizacion_avance_legalizacion",
            "description": "EstadoLegalizacionAvanceLegalizacionController operations for EstadoLegalizacionAvanceLegalizacion\n"
        },
        {
            "name": "avance_legalizacion_sub_tipo",
            "description": "AvanceLegalizacionSubTipoController operations for AvanceLegalizacionSubTipo\n"
        },
        {
            "name": "estado_avance_legalizacion_tipo",
            "description": "EstadoAvanceLegalizacionTipoController operations for EstadoAvanceLegalizacionTipo\n"
        },
        {
            "name": "tipo_transaccion_version",
            "description": "TipoTransaccionVersionController operations for TipoTransaccionVersion\n"
        },
        {
            "name": "detalle_tipo_transaccion_version",
            "description": "DetalleTipoTransaccionVersionController operations for DetalleTipoTransaccionVersion\n"
        },
        {
            "name": "version_tipo_transaccion",
            "description": "VersionTipoTransaccionController operations for VersionTipoTransaccion\n"
        },
        {
            "name": "concepto_detalle_tipo_transaccion",
            "description": "ConceptoDetalleTipoTransaccionController operations for ConceptoDetalleTipoTransaccion\n"
        }
    ]
}