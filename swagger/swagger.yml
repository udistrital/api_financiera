swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /afectacion_concepto/:
    get:
      tags:
      - afectacion_concepto
      description: get AfectacionConcepto
      operationId: AfectacionConceptoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.AfectacionConcepto'
        "403": {}
    post:
      tags:
      - afectacion_concepto
      description: create AfectacionConcepto
      operationId: AfectacionConceptoController.Post
      parameters:
      - in: body
        name: body
        description: body for AfectacionConcepto content
        required: true
        schema:
          $ref: '#/definitions/models.AfectacionConcepto'
      responses:
        "201":
          description: '{int} models.AfectacionConcepto'
        "403":
          description: body is empty
  /afectacion_concepto/{id}:
    get:
      tags:
      - afectacion_concepto
      description: get AfectacionConcepto by id
      operationId: AfectacionConceptoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.AfectacionConcepto'
        "403":
          description: :id is empty
    put:
      tags:
      - afectacion_concepto
      description: update the AfectacionConcepto
      operationId: AfectacionConceptoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AfectacionConcepto content
        required: true
        schema:
          $ref: '#/definitions/models.AfectacionConcepto'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.AfectacionConcepto'
        "403":
          description: :id is not int
    delete:
      tags:
      - afectacion_concepto
      description: delete the AfectacionConcepto
      operationId: AfectacionConceptoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /categoria_compromiso/:
    get:
      tags:
      - categoria_compromiso
      description: get CategoriaCompromiso
      operationId: CategoriaCompromisoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaCompromiso'
        "403": {}
    post:
      tags:
      - categoria_compromiso
      description: create CategoriaCompromiso
      operationId: CategoriaCompromisoController.Post
      parameters:
      - in: body
        name: body
        description: body for CategoriaCompromiso content
        required: true
        schema:
          $ref: '#/definitions/models.CategoriaCompromiso'
      responses:
        "201":
          description: '{int} models.CategoriaCompromiso'
        "403":
          description: body is empty
  /categoria_compromiso/{id}:
    get:
      tags:
      - categoria_compromiso
      description: get CategoriaCompromiso by id
      operationId: CategoriaCompromisoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaCompromiso'
        "403":
          description: :id is empty
    put:
      tags:
      - categoria_compromiso
      description: update the CategoriaCompromiso
      operationId: CategoriaCompromisoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CategoriaCompromiso content
        required: true
        schema:
          $ref: '#/definitions/models.CategoriaCompromiso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CategoriaCompromiso'
        "403":
          description: :id is not int
    delete:
      tags:
      - categoria_compromiso
      description: delete the CategoriaCompromiso
      operationId: CategoriaCompromisoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /clase_transaccion/:
    get:
      tags:
      - clase_transaccion
      description: get ClaseTransaccion
      operationId: ClaseTransaccionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ClaseTransaccion'
        "403": {}
    post:
      tags:
      - clase_transaccion
      description: create ClaseTransaccion
      operationId: ClaseTransaccionController.Post
      parameters:
      - in: body
        name: body
        description: body for ClaseTransaccion content
        required: true
        schema:
          $ref: '#/definitions/models.ClaseTransaccion'
      responses:
        "201":
          description: '{int} models.ClaseTransaccion'
        "403":
          description: body is empty
  /clase_transaccion/{id}:
    get:
      tags:
      - clase_transaccion
      description: get ClaseTransaccion by id
      operationId: ClaseTransaccionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ClaseTransaccion'
        "403":
          description: :id is empty
    put:
      tags:
      - clase_transaccion
      description: update the ClaseTransaccion
      operationId: ClaseTransaccionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ClaseTransaccion content
        required: true
        schema:
          $ref: '#/definitions/models.ClaseTransaccion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ClaseTransaccion'
        "403":
          description: :id is not int
    delete:
      tags:
      - clase_transaccion
      description: delete the ClaseTransaccion
      operationId: ClaseTransaccionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /compromiso/:
    get:
      tags:
      - compromiso
      description: get Compromiso
      operationId: CompromisoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Compromiso'
        "403": {}
    post:
      tags:
      - compromiso
      description: create Compromiso
      operationId: CompromisoController.Post
      parameters:
      - in: body
        name: body
        description: body for Compromiso content
        required: true
        schema:
          $ref: '#/definitions/models.Compromiso'
      responses:
        "201":
          description: '{int} models.Compromiso'
        "403":
          description: body is empty
  /compromiso/{id}:
    get:
      tags:
      - compromiso
      description: get Compromiso by id
      operationId: CompromisoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Compromiso'
        "403":
          description: :id is empty
    put:
      tags:
      - compromiso
      description: update the Compromiso
      operationId: CompromisoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Compromiso content
        required: true
        schema:
          $ref: '#/definitions/models.Compromiso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Compromiso'
        "403":
          description: :id is not int
    delete:
      tags:
      - compromiso
      description: delete the Compromiso
      operationId: CompromisoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /concepto/:
    get:
      tags:
      - concepto
      description: get Concepto
      operationId: ConceptoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Concepto'
        "403": {}
    post:
      tags:
      - concepto
      description: create Concepto
      operationId: ConceptoController.Post
      parameters:
      - in: body
        name: body
        description: body for Concepto content
        required: true
        schema:
          $ref: '#/definitions/models.Concepto'
      responses:
        "201":
          description: '{int} models.Concepto'
        "403":
          description: body is empty
  /concepto/{id}:
    get:
      tags:
      - concepto
      description: get Concepto by id
      operationId: ConceptoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Concepto'
        "403":
          description: :id is empty
    put:
      tags:
      - concepto
      description: update the Concepto
      operationId: ConceptoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Concepto content
        required: true
        schema:
          $ref: '#/definitions/models.Concepto'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Concepto'
        "403":
          description: :id is not int
    delete:
      tags:
      - concepto
      description: delete the Concepto
      operationId: ConceptoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /concepto_concepto/:
    get:
      tags:
      - concepto_concepto
      description: get ConceptoConcepto
      operationId: ConceptoConceptoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ConceptoConcepto'
        "403": {}
    post:
      tags:
      - concepto_concepto
      description: create ConceptoConcepto
      operationId: ConceptoConceptoController.Post
      parameters:
      - in: body
        name: body
        description: body for ConceptoConcepto content
        required: true
        schema:
          $ref: '#/definitions/models.ConceptoConcepto'
      responses:
        "201":
          description: '{int} models.ConceptoConcepto'
        "403":
          description: body is empty
  /concepto_concepto/{id}:
    get:
      tags:
      - concepto_concepto
      description: get ConceptoConcepto by id
      operationId: ConceptoConceptoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ConceptoConcepto'
        "403":
          description: :id is empty
    put:
      tags:
      - concepto_concepto
      description: update the ConceptoConcepto
      operationId: ConceptoConceptoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ConceptoConcepto content
        required: true
        schema:
          $ref: '#/definitions/models.ConceptoConcepto'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ConceptoConcepto'
        "403":
          description: :id is not int
    delete:
      tags:
      - concepto_concepto
      description: delete the ConceptoConcepto
      operationId: ConceptoConceptoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /concepto_cuenta_contable/:
    get:
      tags:
      - concepto_cuenta_contable
      description: get ConceptoCuentaContable
      operationId: ConceptoCuentaContableController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ConceptoCuentaContable'
        "403": {}
    post:
      tags:
      - concepto_cuenta_contable
      description: create ConceptoCuentaContable
      operationId: ConceptoCuentaContableController.Post
      parameters:
      - in: body
        name: body
        description: body for ConceptoCuentaContable content
        required: true
        schema:
          $ref: '#/definitions/models.ConceptoCuentaContable'
      responses:
        "201":
          description: '{int} models.ConceptoCuentaContable'
        "403":
          description: body is empty
  /concepto_cuenta_contable/{id}:
    get:
      tags:
      - concepto_cuenta_contable
      description: get ConceptoCuentaContable by id
      operationId: ConceptoCuentaContableController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ConceptoCuentaContable'
        "403":
          description: :id is empty
    put:
      tags:
      - concepto_cuenta_contable
      description: update the ConceptoCuentaContable
      operationId: ConceptoCuentaContableController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ConceptoCuentaContable content
        required: true
        schema:
          $ref: '#/definitions/models.ConceptoCuentaContable'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ConceptoCuentaContable'
        "403":
          description: :id is not int
    delete:
      tags:
      - concepto_cuenta_contable
      description: delete the ConceptoCuentaContable
      operationId: ConceptoCuentaContableController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /concepto_orden_pago/:
    get:
      tags:
      - concepto_orden_pago
      description: get ConceptoOrdenPago
      operationId: ConceptoOrdenPagoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ConceptoOrdenPago'
        "403": {}
    post:
      tags:
      - concepto_orden_pago
      description: create ConceptoOrdenPago
      operationId: ConceptoOrdenPagoController.Post
      parameters:
      - in: body
        name: body
        description: body for ConceptoOrdenPago content
        required: true
        schema:
          $ref: '#/definitions/models.ConceptoOrdenPago'
      responses:
        "201":
          description: '{int} models.ConceptoOrdenPago'
        "403":
          description: body is empty
  /concepto_orden_pago/{id}:
    get:
      tags:
      - concepto_orden_pago
      description: get ConceptoOrdenPago by id
      operationId: ConceptoOrdenPagoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ConceptoOrdenPago'
        "403":
          description: :id is empty
    put:
      tags:
      - concepto_orden_pago
      description: update the ConceptoOrdenPago
      operationId: ConceptoOrdenPagoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ConceptoOrdenPago content
        required: true
        schema:
          $ref: '#/definitions/models.ConceptoOrdenPago'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ConceptoOrdenPago'
        "403":
          description: :id is not int
    delete:
      tags:
      - concepto_orden_pago
      description: delete the ConceptoOrdenPago
      operationId: ConceptoOrdenPagoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /cuenta_bancaria/:
    get:
      tags:
      - cuenta_bancaria
      description: get CuentaBancaria
      operationId: CuentaBancariaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CuentaBancaria'
        "403": {}
    post:
      tags:
      - cuenta_bancaria
      description: create CuentaBancaria
      operationId: CuentaBancariaController.Post
      parameters:
      - in: body
        name: body
        description: body for CuentaBancaria content
        required: true
        schema:
          $ref: '#/definitions/models.CuentaBancaria'
      responses:
        "201":
          description: '{int} models.CuentaBancaria'
        "403":
          description: body is empty
  /cuenta_bancaria/{id}:
    get:
      tags:
      - cuenta_bancaria
      description: get CuentaBancaria by id
      operationId: CuentaBancariaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CuentaBancaria'
        "403":
          description: :id is empty
    put:
      tags:
      - cuenta_bancaria
      description: update the CuentaBancaria
      operationId: CuentaBancariaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CuentaBancaria content
        required: true
        schema:
          $ref: '#/definitions/models.CuentaBancaria'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CuentaBancaria'
        "403":
          description: :id is not int
    delete:
      tags:
      - cuenta_bancaria
      description: delete the CuentaBancaria
      operationId: CuentaBancariaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /cuenta_contable/:
    get:
      tags:
      - cuenta_contable
      description: get CuentaContable
      operationId: CuentaContableController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CuentaContable'
        "403": {}
    post:
      tags:
      - cuenta_contable
      description: create CuentaContable
      operationId: CuentaContableController.Post
      parameters:
      - in: body
        name: body
        description: body for CuentaContable content
        required: true
        schema:
          $ref: '#/definitions/models.CuentaContable'
      responses:
        "201":
          description: '{int} models.CuentaContable'
        "403":
          description: body is empty
  /cuenta_contable/{id}:
    get:
      tags:
      - cuenta_contable
      description: get CuentaContable by id
      operationId: CuentaContableController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CuentaContable'
        "403":
          description: :id is empty
    put:
      tags:
      - cuenta_contable
      description: update the CuentaContable
      operationId: CuentaContableController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CuentaContable content
        required: true
        schema:
          $ref: '#/definitions/models.CuentaContable'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.CuentaContable'
        "403":
          description: :id is not int
    delete:
      tags:
      - cuenta_contable
      description: delete the CuentaContable
      operationId: CuentaContableController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /entidad/:
    get:
      tags:
      - entidad
      description: get Entidad
      operationId: EntidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Entidad'
        "403": {}
    post:
      tags:
      - entidad
      description: create Entidad
      operationId: EntidadController.Post
      parameters:
      - in: body
        name: body
        description: body for Entidad content
        required: true
        schema:
          $ref: '#/definitions/models.Entidad'
      responses:
        "201":
          description: '{int} models.Entidad'
        "403":
          description: body is empty
  /entidad/{id}:
    get:
      tags:
      - entidad
      description: get Entidad by id
      operationId: EntidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Entidad'
        "403":
          description: :id is empty
    put:
      tags:
      - entidad
      description: update the Entidad
      operationId: EntidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Entidad content
        required: true
        schema:
          $ref: '#/definitions/models.Entidad'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Entidad'
        "403":
          description: :id is not int
    delete:
      tags:
      - entidad
      description: delete the Entidad
      operationId: EntidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estado_compromiso/:
    get:
      tags:
      - estado_compromiso
      description: get EstadoCompromiso
      operationId: EstadoCompromisoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoCompromiso'
        "403": {}
    post:
      tags:
      - estado_compromiso
      description: create EstadoCompromiso
      operationId: EstadoCompromisoController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoCompromiso content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoCompromiso'
      responses:
        "201":
          description: '{int} models.EstadoCompromiso'
        "403":
          description: body is empty
  /estado_compromiso/{id}:
    get:
      tags:
      - estado_compromiso
      description: get EstadoCompromiso by id
      operationId: EstadoCompromisoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoCompromiso'
        "403":
          description: :id is empty
    put:
      tags:
      - estado_compromiso
      description: update the EstadoCompromiso
      operationId: EstadoCompromisoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoCompromiso content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoCompromiso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoCompromiso'
        "403":
          description: :id is not int
    delete:
      tags:
      - estado_compromiso
      description: delete the EstadoCompromiso
      operationId: EstadoCompromisoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estado_ingreso/:
    get:
      tags:
      - estado_ingreso
      description: get EstadoIngreso
      operationId: EstadoIngresoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoIngreso'
        "403": {}
    post:
      tags:
      - estado_ingreso
      description: create EstadoIngreso
      operationId: EstadoIngresoController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoIngreso content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoIngreso'
      responses:
        "201":
          description: '{int} models.EstadoIngreso'
        "403":
          description: body is empty
  /estado_ingreso/{id}:
    get:
      tags:
      - estado_ingreso
      description: get EstadoIngreso by id
      operationId: EstadoIngresoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoIngreso'
        "403":
          description: :id is empty
    put:
      tags:
      - estado_ingreso
      description: update the EstadoIngreso
      operationId: EstadoIngresoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoIngreso content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoIngreso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoIngreso'
        "403":
          description: :id is not int
    delete:
      tags:
      - estado_ingreso
      description: delete the EstadoIngreso
      operationId: EstadoIngresoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estado_orden_pago/:
    get:
      tags:
      - estado_orden_pago
      description: get EstadoOrdenPago
      operationId: EstadoOrdenPagoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoOrdenPago'
        "403": {}
    post:
      tags:
      - estado_orden_pago
      description: create EstadoOrdenPago
      operationId: EstadoOrdenPagoController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoOrdenPago content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoOrdenPago'
      responses:
        "201":
          description: '{int} models.EstadoOrdenPago'
        "403":
          description: body is empty
  /estado_orden_pago/{id}:
    get:
      tags:
      - estado_orden_pago
      description: get EstadoOrdenPago by id
      operationId: EstadoOrdenPagoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoOrdenPago'
        "403":
          description: :id is empty
    put:
      tags:
      - estado_orden_pago
      description: update the EstadoOrdenPago
      operationId: EstadoOrdenPagoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoOrdenPago content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoOrdenPago'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstadoOrdenPago'
        "403":
          description: :id is not int
    delete:
      tags:
      - estado_orden_pago
      description: delete the EstadoOrdenPago
      operationId: EstadoOrdenPagoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estructura_cuentas/:
    get:
      tags:
      - estructura_cuentas
      description: get EstructuraCuentas
      operationId: EstructuraCuentasController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstructuraCuentas'
        "403": {}
    post:
      tags:
      - estructura_cuentas
      description: create EstructuraCuentas
      operationId: EstructuraCuentasController.Post
      parameters:
      - in: body
        name: body
        description: body for EstructuraCuentas content
        required: true
        schema:
          $ref: '#/definitions/models.EstructuraCuentas'
      responses:
        "201":
          description: '{int} models.EstructuraCuentas'
        "403":
          description: body is empty
  /estructura_cuentas/{id}:
    get:
      tags:
      - estructura_cuentas
      description: get EstructuraCuentas by id
      operationId: EstructuraCuentasController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstructuraCuentas'
        "403":
          description: :id is empty
    put:
      tags:
      - estructura_cuentas
      description: update the EstructuraCuentas
      operationId: EstructuraCuentasController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstructuraCuentas content
        required: true
        schema:
          $ref: '#/definitions/models.EstructuraCuentas'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.EstructuraCuentas'
        "403":
          description: :id is not int
    delete:
      tags:
      - estructura_cuentas
      description: delete the EstructuraCuentas
      operationId: EstructuraCuentasController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /forma_ingreso/:
    get:
      tags:
      - forma_ingreso
      description: get FormaIngreso
      operationId: FormaIngresoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.FormaIngreso'
        "403": {}
    post:
      tags:
      - forma_ingreso
      description: create FormaIngreso
      operationId: FormaIngresoController.Post
      parameters:
      - in: body
        name: body
        description: body for FormaIngreso content
        required: true
        schema:
          $ref: '#/definitions/models.FormaIngreso'
      responses:
        "201":
          description: '{int} models.FormaIngreso'
        "403":
          description: body is empty
  /forma_ingreso/{id}:
    get:
      tags:
      - forma_ingreso
      description: get FormaIngreso by id
      operationId: FormaIngresoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.FormaIngreso'
        "403":
          description: :id is empty
    put:
      tags:
      - forma_ingreso
      description: update the FormaIngreso
      operationId: FormaIngresoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for FormaIngreso content
        required: true
        schema:
          $ref: '#/definitions/models.FormaIngreso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.FormaIngreso'
        "403":
          description: :id is not int
    delete:
      tags:
      - forma_ingreso
      description: delete the FormaIngreso
      operationId: FormaIngresoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ingreso/:
    get:
      tags:
      - ingreso
      description: get Ingreso
      operationId: IngresoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Ingreso'
        "403": {}
    post:
      tags:
      - ingreso
      description: create Ingreso
      operationId: IngresoController.Post
      parameters:
      - in: body
        name: body
        description: body for Ingreso content
        required: true
        schema:
          $ref: '#/definitions/models.Ingreso'
      responses:
        "201":
          description: '{int} models.Ingreso'
        "403":
          description: body is empty
  /ingreso/{id}:
    get:
      tags:
      - ingreso
      description: get Ingreso by id
      operationId: IngresoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Ingreso'
        "403":
          description: :id is empty
    put:
      tags:
      - ingreso
      description: update the Ingreso
      operationId: IngresoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Ingreso content
        required: true
        schema:
          $ref: '#/definitions/models.Ingreso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Ingreso'
        "403":
          description: :id is not int
    delete:
      tags:
      - ingreso
      description: delete the Ingreso
      operationId: IngresoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ingreso_concepto/:
    get:
      tags:
      - ingreso_concepto
      description: get IngresoConcepto
      operationId: IngresoConceptoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.IngresoConcepto'
        "403": {}
    post:
      tags:
      - ingreso_concepto
      description: create IngresoConcepto
      operationId: IngresoConceptoController.Post
      parameters:
      - in: body
        name: body
        description: body for IngresoConcepto content
        required: true
        schema:
          $ref: '#/definitions/models.IngresoConcepto'
      responses:
        "201":
          description: '{int} models.IngresoConcepto'
        "403":
          description: body is empty
  /ingreso_concepto/{id}:
    get:
      tags:
      - ingreso_concepto
      description: get IngresoConcepto by id
      operationId: IngresoConceptoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.IngresoConcepto'
        "403":
          description: :id is empty
    put:
      tags:
      - ingreso_concepto
      description: update the IngresoConcepto
      operationId: IngresoConceptoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for IngresoConcepto content
        required: true
        schema:
          $ref: '#/definitions/models.IngresoConcepto'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.IngresoConcepto'
        "403":
          description: :id is not int
    delete:
      tags:
      - ingreso_concepto
      description: delete the IngresoConcepto
      operationId: IngresoConceptoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /modulo_kronos/:
    get:
      tags:
      - modulo_kronos
      description: get ModuloKronos
      operationId: ModuloKronosController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ModuloKronos'
        "403": {}
    post:
      tags:
      - modulo_kronos
      description: create ModuloKronos
      operationId: ModuloKronosController.Post
      parameters:
      - in: body
        name: body
        description: body for ModuloKronos content
        required: true
        schema:
          $ref: '#/definitions/models.ModuloKronos'
      responses:
        "201":
          description: '{int} models.ModuloKronos'
        "403":
          description: body is empty
  /modulo_kronos/{id}:
    get:
      tags:
      - modulo_kronos
      description: get ModuloKronos by id
      operationId: ModuloKronosController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ModuloKronos'
        "403":
          description: :id is empty
    put:
      tags:
      - modulo_kronos
      description: update the ModuloKronos
      operationId: ModuloKronosController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ModuloKronos content
        required: true
        schema:
          $ref: '#/definitions/models.ModuloKronos'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.ModuloKronos'
        "403":
          description: :id is not int
    delete:
      tags:
      - modulo_kronos
      description: delete the ModuloKronos
      operationId: ModuloKronosController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /movimiento_contable/:
    get:
      tags:
      - movimiento_contable
      description: get MovimientoContable
      operationId: MovimientoContableController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MovimientoContable'
        "403": {}
    post:
      tags:
      - movimiento_contable
      description: create MovimientoContable
      operationId: MovimientoContableController.Post
      parameters:
      - in: body
        name: body
        description: body for MovimientoContable content
        required: true
        schema:
          $ref: '#/definitions/models.MovimientoContable'
      responses:
        "201":
          description: '{int} models.MovimientoContable'
        "403":
          description: body is empty
  /movimiento_contable/{id}:
    get:
      tags:
      - movimiento_contable
      description: get MovimientoContable by id
      operationId: MovimientoContableController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MovimientoContable'
        "403":
          description: :id is empty
    put:
      tags:
      - movimiento_contable
      description: update the MovimientoContable
      operationId: MovimientoContableController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for MovimientoContable content
        required: true
        schema:
          $ref: '#/definitions/models.MovimientoContable'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.MovimientoContable'
        "403":
          description: :id is not int
    delete:
      tags:
      - movimiento_contable
      description: delete the MovimientoContable
      operationId: MovimientoContableController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /nivel_clasificacion/:
    get:
      tags:
      - nivel_clasificacion
      description: get NivelClasificacion
      operationId: NivelClasificacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelClasificacion'
        "403": {}
    post:
      tags:
      - nivel_clasificacion
      description: create NivelClasificacion
      operationId: NivelClasificacionController.Post
      parameters:
      - in: body
        name: body
        description: body for NivelClasificacion content
        required: true
        schema:
          $ref: '#/definitions/models.NivelClasificacion'
      responses:
        "201":
          description: '{int} models.NivelClasificacion'
        "403":
          description: body is empty
  /nivel_clasificacion/{id}:
    get:
      tags:
      - nivel_clasificacion
      description: get NivelClasificacion by id
      operationId: NivelClasificacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelClasificacion'
        "403":
          description: :id is empty
    put:
      tags:
      - nivel_clasificacion
      description: update the NivelClasificacion
      operationId: NivelClasificacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NivelClasificacion content
        required: true
        schema:
          $ref: '#/definitions/models.NivelClasificacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.NivelClasificacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - nivel_clasificacion
      description: delete the NivelClasificacion
      operationId: NivelClasificacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /orden_pago/:
    get:
      tags:
      - orden_pago
      description: get OrdenPago
      operationId: OrdenPagoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.OrdenPago'
        "403": {}
    post:
      tags:
      - orden_pago
      description: create OrdenPago
      operationId: OrdenPagoController.Post
      parameters:
      - in: body
        name: body
        description: body for OrdenPago content
        required: true
        schema:
          $ref: '#/definitions/models.OrdenPago'
      responses:
        "201":
          description: '{int} models.OrdenPago'
        "403":
          description: body is empty
  /orden_pago/{id}:
    get:
      tags:
      - orden_pago
      description: get OrdenPago by id
      operationId: OrdenPagoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.OrdenPago'
        "403":
          description: :id is empty
    put:
      tags:
      - orden_pago
      description: update the OrdenPago
      operationId: OrdenPagoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for OrdenPago content
        required: true
        schema:
          $ref: '#/definitions/models.OrdenPago'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.OrdenPago'
        "403":
          description: :id is not int
    delete:
      tags:
      - orden_pago
      description: delete the OrdenPago
      operationId: OrdenPagoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /periodo_contable/:
    get:
      tags:
      - periodo_contable
      description: get PeriodoContable
      operationId: PeriodoContableController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PeriodoContable'
        "403": {}
    post:
      tags:
      - periodo_contable
      description: create PeriodoContable
      operationId: PeriodoContableController.Post
      parameters:
      - in: body
        name: body
        description: body for PeriodoContable content
        required: true
        schema:
          $ref: '#/definitions/models.PeriodoContable'
      responses:
        "201":
          description: '{int} models.PeriodoContable'
        "403":
          description: body is empty
  /periodo_contable/{id}:
    get:
      tags:
      - periodo_contable
      description: get PeriodoContable by id
      operationId: PeriodoContableController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PeriodoContable'
        "403":
          description: :id is empty
    put:
      tags:
      - periodo_contable
      description: update the PeriodoContable
      operationId: PeriodoContableController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PeriodoContable content
        required: true
        schema:
          $ref: '#/definitions/models.PeriodoContable'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PeriodoContable'
        "403":
          description: :id is not int
    delete:
      tags:
      - periodo_contable
      description: delete the PeriodoContable
      operationId: PeriodoContableController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /periodo_plan_cuentas/:
    get:
      tags:
      - periodo_plan_cuentas
      description: get PeriodoPlanCuentas
      operationId: PeriodoPlanCuentasController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PeriodoPlanCuentas'
        "403": {}
    post:
      tags:
      - periodo_plan_cuentas
      description: create PeriodoPlanCuentas
      operationId: PeriodoPlanCuentasController.Post
      parameters:
      - in: body
        name: body
        description: body for PeriodoPlanCuentas content
        required: true
        schema:
          $ref: '#/definitions/models.PeriodoPlanCuentas'
      responses:
        "201":
          description: '{int} models.PeriodoPlanCuentas'
        "403":
          description: body is empty
  /periodo_plan_cuentas/{id}:
    get:
      tags:
      - periodo_plan_cuentas
      description: get PeriodoPlanCuentas by id
      operationId: PeriodoPlanCuentasController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PeriodoPlanCuentas'
        "403":
          description: :id is empty
    put:
      tags:
      - periodo_plan_cuentas
      description: update the PeriodoPlanCuentas
      operationId: PeriodoPlanCuentasController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PeriodoPlanCuentas content
        required: true
        schema:
          $ref: '#/definitions/models.PeriodoPlanCuentas'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PeriodoPlanCuentas'
        "403":
          description: :id is not int
    delete:
      tags:
      - periodo_plan_cuentas
      description: delete the PeriodoPlanCuentas
      operationId: PeriodoPlanCuentasController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /plan_cuentas/:
    get:
      tags:
      - plan_cuentas
      description: get PlanCuentas
      operationId: PlanCuentasController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PlanCuentas'
        "403": {}
    post:
      tags:
      - plan_cuentas
      description: create PlanCuentas
      operationId: PlanCuentasController.Post
      parameters:
      - in: body
        name: body
        description: body for PlanCuentas content
        required: true
        schema:
          $ref: '#/definitions/models.PlanCuentas'
      responses:
        "201":
          description: '{int} models.PlanCuentas'
        "403":
          description: body is empty
  /plan_cuentas/{id}:
    get:
      tags:
      - plan_cuentas
      description: get PlanCuentas by id
      operationId: PlanCuentasController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PlanCuentas'
        "403":
          description: :id is empty
    put:
      tags:
      - plan_cuentas
      description: update the PlanCuentas
      operationId: PlanCuentasController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PlanCuentas content
        required: true
        schema:
          $ref: '#/definitions/models.PlanCuentas'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.PlanCuentas'
        "403":
          description: :id is not int
    delete:
      tags:
      - plan_cuentas
      description: delete the PlanCuentas
      operationId: PlanCuentasController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_afectacion/:
    get:
      tags:
      - tipo_afectacion
      description: get TipoAfectacion
      operationId: TipoAfectacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoAfectacion'
        "403": {}
    post:
      tags:
      - tipo_afectacion
      description: create TipoAfectacion
      operationId: TipoAfectacionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoAfectacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAfectacion'
      responses:
        "201":
          description: '{int} models.TipoAfectacion'
        "403":
          description: body is empty
  /tipo_afectacion/{id}:
    get:
      tags:
      - tipo_afectacion
      description: get TipoAfectacion by id
      operationId: TipoAfectacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoAfectacion'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_afectacion
      description: update the TipoAfectacion
      operationId: TipoAfectacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoAfectacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAfectacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoAfectacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_afectacion
      description: delete the TipoAfectacion
      operationId: TipoAfectacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_compromiso_tesoral/:
    get:
      tags:
      - tipo_compromiso_tesoral
      description: get TipoCompromisoTesoral
      operationId: TipoCompromisoTesoralController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoCompromisoTesoral'
        "403": {}
    post:
      tags:
      - tipo_compromiso_tesoral
      description: create TipoCompromisoTesoral
      operationId: TipoCompromisoTesoralController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoCompromisoTesoral content
        required: true
        schema:
          $ref: '#/definitions/models.TipoCompromisoTesoral'
      responses:
        "201":
          description: '{int} models.TipoCompromisoTesoral'
        "403":
          description: body is empty
  /tipo_compromiso_tesoral/{id}:
    get:
      tags:
      - tipo_compromiso_tesoral
      description: get TipoCompromisoTesoral by id
      operationId: TipoCompromisoTesoralController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoCompromisoTesoral'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_compromiso_tesoral
      description: update the TipoCompromisoTesoral
      operationId: TipoCompromisoTesoralController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoCompromisoTesoral content
        required: true
        schema:
          $ref: '#/definitions/models.TipoCompromisoTesoral'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoCompromisoTesoral'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_compromiso_tesoral
      description: delete the TipoCompromisoTesoral
      operationId: TipoCompromisoTesoralController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_concepto/:
    get:
      tags:
      - tipo_concepto
      description: get TipoConcepto
      operationId: TipoConceptoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoConcepto'
        "403": {}
    post:
      tags:
      - tipo_concepto
      description: create TipoConcepto
      operationId: TipoConceptoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoConcepto content
        required: true
        schema:
          $ref: '#/definitions/models.TipoConcepto'
      responses:
        "201":
          description: '{int} models.TipoConcepto'
        "403":
          description: body is empty
  /tipo_concepto/{id}:
    get:
      tags:
      - tipo_concepto
      description: get TipoConcepto by id
      operationId: TipoConceptoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoConcepto'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_concepto
      description: update the TipoConcepto
      operationId: TipoConceptoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoConcepto content
        required: true
        schema:
          $ref: '#/definitions/models.TipoConcepto'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoConcepto'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_concepto
      description: delete the TipoConcepto
      operationId: TipoConceptoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_cuenta_bancaria/:
    get:
      tags:
      - tipo_cuenta_bancaria
      description: get TipoCuentaBancaria
      operationId: TipoCuentaBancariaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoCuentaBancaria'
        "403": {}
    post:
      tags:
      - tipo_cuenta_bancaria
      description: create TipoCuentaBancaria
      operationId: TipoCuentaBancariaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoCuentaBancaria content
        required: true
        schema:
          $ref: '#/definitions/models.TipoCuentaBancaria'
      responses:
        "201":
          description: '{int} models.TipoCuentaBancaria'
        "403":
          description: body is empty
  /tipo_cuenta_bancaria/{id}:
    get:
      tags:
      - tipo_cuenta_bancaria
      description: get TipoCuentaBancaria by id
      operationId: TipoCuentaBancariaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoCuentaBancaria'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_cuenta_bancaria
      description: update the TipoCuentaBancaria
      operationId: TipoCuentaBancariaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoCuentaBancaria content
        required: true
        schema:
          $ref: '#/definitions/models.TipoCuentaBancaria'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoCuentaBancaria'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_cuenta_bancaria
      description: delete the TipoCuentaBancaria
      operationId: TipoCuentaBancariaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_documento_afectante/:
    get:
      tags:
      - tipo_documento_afectante
      description: get TipoDocumentoAfectante
      operationId: TipoDocumentoAfectanteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoDocumentoAfectante'
        "403": {}
    post:
      tags:
      - tipo_documento_afectante
      description: create TipoDocumentoAfectante
      operationId: TipoDocumentoAfectanteController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoDocumentoAfectante content
        required: true
        schema:
          $ref: '#/definitions/models.TipoDocumentoAfectante'
      responses:
        "201":
          description: '{int} models.TipoDocumentoAfectante'
        "403":
          description: body is empty
  /tipo_documento_afectante/{id}:
    get:
      tags:
      - tipo_documento_afectante
      description: get TipoDocumentoAfectante by id
      operationId: TipoDocumentoAfectanteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoDocumentoAfectante'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_documento_afectante
      description: update the TipoDocumentoAfectante
      operationId: TipoDocumentoAfectanteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoDocumentoAfectante content
        required: true
        schema:
          $ref: '#/definitions/models.TipoDocumentoAfectante'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoDocumentoAfectante'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_documento_afectante
      description: delete the TipoDocumentoAfectante
      operationId: TipoDocumentoAfectanteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_entidad/:
    get:
      tags:
      - tipo_entidad
      description: get TipoEntidad
      operationId: TipoEntidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoEntidad'
        "403": {}
    post:
      tags:
      - tipo_entidad
      description: create TipoEntidad
      operationId: TipoEntidadController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoEntidad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEntidad'
      responses:
        "201":
          description: '{int} models.TipoEntidad'
        "403":
          description: body is empty
  /tipo_entidad/{id}:
    get:
      tags:
      - tipo_entidad
      description: get TipoEntidad by id
      operationId: TipoEntidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoEntidad'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_entidad
      description: update the TipoEntidad
      operationId: TipoEntidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoEntidad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEntidad'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoEntidad'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_entidad
      description: delete the TipoEntidad
      operationId: TipoEntidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_orden_pago/:
    get:
      tags:
      - tipo_orden_pago
      description: get TipoOrdenPago
      operationId: TipoOrdenPagoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoOrdenPago'
        "403": {}
    post:
      tags:
      - tipo_orden_pago
      description: create TipoOrdenPago
      operationId: TipoOrdenPagoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoOrdenPago content
        required: true
        schema:
          $ref: '#/definitions/models.TipoOrdenPago'
      responses:
        "201":
          description: '{int} models.TipoOrdenPago'
        "403":
          description: body is empty
  /tipo_orden_pago/{id}:
    get:
      tags:
      - tipo_orden_pago
      description: get TipoOrdenPago by id
      operationId: TipoOrdenPagoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoOrdenPago'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_orden_pago
      description: update the TipoOrdenPago
      operationId: TipoOrdenPagoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoOrdenPago content
        required: true
        schema:
          $ref: '#/definitions/models.TipoOrdenPago'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoOrdenPago'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_orden_pago
      description: delete the TipoOrdenPago
      operationId: TipoOrdenPagoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_recurso/:
    get:
      tags:
      - tipo_recurso
      description: get TipoRecurso
      operationId: TipoRecursoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoRecurso'
        "403": {}
    post:
      tags:
      - tipo_recurso
      description: create TipoRecurso
      operationId: TipoRecursoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.TipoRecurso'
      responses:
        "201":
          description: '{int} models.TipoRecurso'
        "403":
          description: body is empty
  /tipo_recurso/{id}:
    get:
      tags:
      - tipo_recurso
      description: get TipoRecurso by id
      operationId: TipoRecursoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoRecurso'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_recurso
      description: update the TipoRecurso
      operationId: TipoRecursoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.TipoRecurso'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoRecurso'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_recurso
      description: delete the TipoRecurso
      operationId: TipoRecursoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_transaccion/:
    get:
      tags:
      - tipo_transaccion
      description: get TipoTransaccion
      operationId: TipoTransaccionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoTransaccion'
        "403": {}
    post:
      tags:
      - tipo_transaccion
      description: create TipoTransaccion
      operationId: TipoTransaccionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoTransaccion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoTransaccion'
      responses:
        "201":
          description: '{int} models.TipoTransaccion'
        "403":
          description: body is empty
  /tipo_transaccion/{id}:
    get:
      tags:
      - tipo_transaccion
      description: get TipoTransaccion by id
      operationId: TipoTransaccionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoTransaccion'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_transaccion
      description: update the TipoTransaccion
      operationId: TipoTransaccionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoTransaccion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoTransaccion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.TipoTransaccion'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_transaccion
      description: delete the TipoTransaccion
      operationId: TipoTransaccionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /unidad_ejecutora/:
    get:
      tags:
      - unidad_ejecutora
      description: get UnidadEjecutora
      operationId: UnidadEjecutoraController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.UnidadEjecutora'
        "403": {}
    post:
      tags:
      - unidad_ejecutora
      description: create UnidadEjecutora
      operationId: UnidadEjecutoraController.Post
      parameters:
      - in: body
        name: body
        description: body for UnidadEjecutora content
        required: true
        schema:
          $ref: '#/definitions/models.UnidadEjecutora'
      responses:
        "201":
          description: '{int} models.UnidadEjecutora'
        "403":
          description: body is empty
  /unidad_ejecutora/{id}:
    get:
      tags:
      - unidad_ejecutora
      description: get UnidadEjecutora by id
      operationId: UnidadEjecutoraController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.UnidadEjecutora'
        "403":
          description: :id is empty
    put:
      tags:
      - unidad_ejecutora
      description: update the UnidadEjecutora
      operationId: UnidadEjecutoraController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for UnidadEjecutora content
        required: true
        schema:
          $ref: '#/definitions/models.UnidadEjecutora'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.UnidadEjecutora'
        "403":
          description: :id is not int
    delete:
      tags:
      - unidad_ejecutora
      description: delete the UnidadEjecutora
      operationId: UnidadEjecutoraController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /version_tipo_transaccion/:
    get:
      tags:
      - version_tipo_transaccion
      description: get VersionTipoTransaccion
      operationId: VersionTipoTransaccionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.VersionTipoTransaccion'
        "403": {}
    post:
      tags:
      - version_tipo_transaccion
      description: create VersionTipoTransaccion
      operationId: VersionTipoTransaccionController.Post
      parameters:
      - in: body
        name: body
        description: body for VersionTipoTransaccion content
        required: true
        schema:
          $ref: '#/definitions/models.VersionTipoTransaccion'
      responses:
        "201":
          description: '{int} models.VersionTipoTransaccion'
        "403":
          description: body is empty
  /version_tipo_transaccion/{id}:
    get:
      tags:
      - version_tipo_transaccion
      description: get VersionTipoTransaccion by id
      operationId: VersionTipoTransaccionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.VersionTipoTransaccion'
        "403":
          description: :id is empty
    put:
      tags:
      - version_tipo_transaccion
      description: update the VersionTipoTransaccion
      operationId: VersionTipoTransaccionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for VersionTipoTransaccion content
        required: true
        schema:
          $ref: '#/definitions/models.VersionTipoTransaccion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.VersionTipoTransaccion'
        "403":
          description: :id is not int
    delete:
      tags:
      - version_tipo_transaccion
      description: delete the VersionTipoTransaccion
      operationId: VersionTipoTransaccionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  .Time:
    type: object
  models.AfectacionConcepto:
    title: AfectacionConcepto
    type: object
    properties:
      AfectacionEgreso:
        type: boolean
      AfectacionIngreso:
        type: boolean
      Concepto:
        $ref: '#/definitions/models.Concepto'
      Id:
        type: integer
        format: int64
      TipoAfectacion:
        $ref: '#/definitions/models.TipoAfectacion'
  models.CategoriaCompromiso:
    title: CategoriaCompromiso
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.ClaseTransaccion:
    title: ClaseTransaccion
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      ModuloKronos:
        $ref: '#/definitions/models.ModuloKronos'
      Nombre:
        type: string
  models.Compromiso:
    title: Compromiso
    type: object
    properties:
      EstadoCompromiso:
        $ref: '#/definitions/models.EstadoCompromiso'
      FechaFin:
        $ref: '#/definitions/time.Time'
      FechaInicio:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      Objeto:
        type: string
      TipoCompromisoTesoral:
        $ref: '#/definitions/models.TipoCompromisoTesoral'
      UnidadEjecutora:
        $ref: '#/definitions/models.UnidadEjecutora'
      Vigencia:
        type: number
        format: double
  models.Concepto:
    title: Concepto
    type: object
    properties:
      Cabeza:
        type: boolean
      Codigo:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      FechaExpiracion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Rubro:
        type: integer
        format: int64
      TipoConcepto:
        $ref: '#/definitions/models.TipoConcepto'
  models.ConceptoConcepto:
    title: ConceptoConcepto
    type: object
    properties:
      ConceptoHijo:
        $ref: '#/definitions/models.Concepto'
      ConceptoPadre:
        $ref: '#/definitions/models.Concepto'
      Id:
        type: integer
        format: int64
  models.ConceptoCuentaContable:
    title: ConceptoCuentaContable
    type: object
    properties:
      Concepto:
        $ref: '#/definitions/models.Concepto'
      CuentaContable:
        $ref: '#/definitions/models.CuentaContable'
      Id:
        type: integer
        format: int64
  models.ConceptoOrdenPago:
    title: ConceptoOrdenPago
    type: object
    properties:
      Concepto:
        $ref: '#/definitions/models.Concepto'
      Id:
        type: integer
        format: int64
      OrdenDePago:
        $ref: '#/definitions/models.OrdenPago'
      Valor:
        type: number
        format: double
  models.CuentaBancaria:
    title: CuentaBancaria
    type: object
    properties:
      EstadoActivo:
        type: boolean
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroCuenta:
        type: string
      Saldo:
        type: number
        format: double
      Sucursal:
        type: integer
        format: int64
      TipoCuenta:
        $ref: '#/definitions/models.TipoCuentaBancaria'
      TipoRecurso:
        $ref: '#/definitions/models.TipoRecurso'
      UnidadEjecutora:
        $ref: '#/definitions/models.UnidadEjecutora'
  models.CuentaContable:
    title: CuentaContable
    type: object
    properties:
      Codigo:
        type: string
      CuentaBancaria:
        $ref: '#/definitions/models.CuentaBancaria'
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Naturaleza:
        type: string
      NivelClasificacion:
        $ref: '#/definitions/models.NivelClasificacion'
      Nombre:
        type: string
      Saldo:
        type: number
        format: double
  models.Entidad:
    title: Entidad
    type: object
    properties:
      CodigoEntidad:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      TipoEntidad:
        $ref: '#/definitions/models.TipoEntidad'
  models.EstadoCompromiso:
    title: EstadoCompromiso
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.EstadoIngreso:
    title: EstadoIngreso
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.EstadoOrdenPago:
    title: EstadoOrdenPago
    type: object
    properties:
      Descripcion:
        type: string
      EstadoActivo:
        type: boolean
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.EstructuraCuentas:
    title: EstructuraCuentas
    type: object
    properties:
      CuentaHijo:
        $ref: '#/definitions/models.CuentaContable'
      CuentaPadre:
        $ref: '#/definitions/models.CuentaContable'
      Id:
        type: integer
        format: int64
      PlanCuentas:
        $ref: '#/definitions/models.PlanCuentas'
  models.FormaIngreso:
    title: FormaIngreso
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.Ingreso:
    title: Ingreso
    type: object
    properties:
      Aportante:
        type: integer
        format: int64
      Consecutivo:
        type: number
        format: double
      Elaboro:
        type: integer
        format: int64
      EstadoIngreso:
        $ref: '#/definitions/models.EstadoIngreso'
      FechaConsignacion:
        $ref: '#/definitions/time.Time'
      FechaIngreso:
        $ref: '#/definitions/time.Time'
      FormaIngreso:
        $ref: '#/definitions/models.FormaIngreso'
      Id:
        type: integer
        format: int64
      Observaciones:
        type: string
      OrigenIngreso:
        type: string
      Reviso:
        type: integer
        format: int64
      UnidadEjecutora:
        $ref: '#/definitions/models.UnidadEjecutora'
      Valor:
        type: number
        format: double
      Vigencia:
        type: number
        format: double
  models.IngresoConcepto:
    title: IngresoConcepto
    type: object
    properties:
      Concepto:
        $ref: '#/definitions/models.Concepto'
      Id:
        type: integer
        format: int64
      Ingreso:
        $ref: '#/definitions/models.Ingreso'
      ValorAgregado:
        type: number
        format: double
  models.ModuloKronos:
    title: ModuloKronos
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.MovimientoContable:
    title: MovimientoContable
    type: object
    properties:
      CodigoDocumentoAfectante:
        type: integer
        format: int64
      Credito:
        type: number
        format: double
      CuentaContable:
        $ref: '#/definitions/models.CuentaContable'
      Debito:
        type: number
        format: double
      Fecha:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      TipoDocumentoAfectante:
        $ref: '#/definitions/models.TipoDocumentoAfectante'
  models.NivelClasificacion:
    title: NivelClasificacion
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Longitud:
        type: number
        format: double
      Nombre:
        type: string
  models.OrdenPago:
    title: OrdenPago
    type: object
    properties:
      Convenio:
        type: integer
        format: int64
      EstadoOrdenPago:
        $ref: '#/definitions/models.EstadoOrdenPago'
      FechaCreacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      PersonaElaboro:
        type: integer
        format: int64
      RegistroPresupuestal:
        type: integer
        format: int64
      TipoOrdenPago:
        $ref: '#/definitions/models.TipoOrdenPago'
      UnidadEjecutora:
        $ref: '#/definitions/models.UnidadEjecutora'
      ValorTotal:
        type: number
        format: double
      Vigencia:
        type: number
        format: double
  models.PeriodoContable:
    title: PeriodoContable
    type: object
    properties:
      Ano:
        type: number
        format: double
      Descripcion:
        type: string
      EstadoActivo:
        type: boolean
      FechaFin:
        $ref: '#/definitions/time.Time'
      FechaInicio:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      Mes:
        type: number
        format: double
  models.PeriodoPlanCuentas:
    title: PeriodoPlanCuentas
    type: object
    properties:
      Definitivo:
        type: boolean
      Id:
        type: integer
        format: int64
      PeriodoContable:
        $ref: '#/definitions/models.PeriodoContable'
      PlanCuentas:
        $ref: '#/definitions/models.PlanCuentas'
  models.PlanCuentas:
    title: PlanCuentas
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      UnidadEjecutora:
        $ref: '#/definitions/models.UnidadEjecutora'
  models.TipoAfectacion:
    title: TipoAfectacion
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoCompromisoTesoral:
    title: TipoCompromisoTesoral
    type: object
    properties:
      CategoriaCompromiso:
        $ref: '#/definitions/models.CategoriaCompromiso'
      Descripcion:
        type: string
      EstadoActivo:
        type: boolean
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoConcepto:
    title: TipoConcepto
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoCuentaBancaria:
    title: TipoCuentaBancaria
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoDocumentoAfectante:
    title: TipoDocumentoAfectante
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoEntidad:
    title: TipoEntidad
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoOrdenPago:
    title: TipoOrdenPago
    type: object
    properties:
      Descripcion:
        type: string
      EstadoActivo:
        type: boolean
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoRecurso:
    title: TipoRecurso
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoTransaccion:
    title: TipoTransaccion
    type: object
    properties:
      ClaseTransaccion:
        $ref: '#/definitions/models.ClaseTransaccion'
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.UnidadEjecutora:
    title: UnidadEjecutora
    type: object
    properties:
      Descripcion:
        type: string
      Entidad:
        $ref: '#/definitions/models.Entidad'
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.VersionTipoTransaccion:
    title: VersionTipoTransaccion
    type: object
    properties:
      Definitiva:
        type: boolean
      FechaFin:
        $ref: '#/definitions/time.Time'
      FechaInicio:
        $ref: '#/definitions/time.Time'
      FechaModificacion:
        $ref: '#/definitions/time.Time'
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      TipoTransaccion:
        $ref: '#/definitions/models.TipoTransaccion'
tags:
- name: forma_ingreso
  description: |
    FormaIngresoController operations for FormaIngreso
- name: estado_ingreso
  description: |
    EstadoIngresoController operations for EstadoIngreso
- name: ingreso_concepto
  description: |
    IngresoConceptoController operations for IngresoConcepto
- name: ingreso
  description: |
    IngresoController operations for Ingreso
- name: nivel_clasificacion
  description: |
    NivelClasificacionController operations for NivelClasificacion
- name: tipo_documento_afectante
  description: |
    TipoDocumentoAfectanteController operations for TipoDocumentoAfectante
- name: movimiento_contable
  description: |
    MovimientoContableController operations for MovimientoContable
- name: estructura_cuentas
  description: |
    EstructuraCuentasController operations for EstructuraCuentas
- name: periodo_contable
  description: |
    PeriodoContableController operations for PeriodoContable
- name: plan_cuentas
  description: |
    PlanCuentasController operations for PlanCuentas
- name: periodo_plan_cuentas
  description: |
    PeriodoPlanCuentasController operations for PeriodoPlanCuentas
- name: cuenta_contable
  description: |
    CuentaContableController operations for CuentaContable
- name: concepto_cuenta_contable
  description: |
    ConceptoCuentaContableController operations for ConceptoCuentaContable
- name: tipo_cuenta_bancaria
  description: |
    TipoCuentaBancariaController operations for TipoCuentaBancaria
- name: tipo_recurso
  description: |
    TipoRecursoController operations for TipoRecurso
- name: cuenta_bancaria
  description: |
    CuentaBancariaController operations for CuentaBancaria
- name: tipo_entidad
  description: |
    TipoEntidadController operations for TipoEntidad
- name: entidad
  description: |
    EntidadController operations for Entidad
- name: categoria_compromiso
  description: |
    CategoriaCompromisoController operations for CategoriaCompromiso
- name: tipo_compromiso_tesoral
  description: |
    TipoCompromisoTesoralController operations for TipoCompromisoTesoral
- name: estado_compromiso
  description: |
    EstadoCompromisoController operations for EstadoCompromiso
- name: compromiso
  description: |
    CompromisoController operations for Compromiso
- name: version_tipo_transaccion
  description: |
    VersionTipoTransaccionController operations for VersionTipoTransaccion
- name: tipo_transaccion
  description: |
    TipoTransaccionController operations for TipoTransaccion
- name: modulo_kronos
  description: |
    ModuloKronosController operations for ModuloKronos
- name: clase_transaccion
  description: |
    ClaseTransaccionController operations for ClaseTransaccion
- name: tipo_afectacion
  description: |
    TipoAfectacionController operations for TipoAfectacion
- name: afectacion_concepto
  description: |
    AfectacionConceptoController operations for AfectacionConcepto
- name: concepto_concepto
  description: |
    ConceptoConceptoController operations for ConceptoConcepto
- name: tipo_concepto
  description: |
    TipoConceptoController operations for TipoConcepto
- name: unidad_ejecutora
  description: |
    UnidadEjecutoraController operations for UnidadEjecutora
- name: estado_orden_pago
  description: |
    EstadoOrdenPagoController operations for EstadoOrdenPago
- name: tipo_orden_pago
  description: |
    TipoOrdenPagoController operations for TipoOrdenPago
- name: orden_pago
  description: |
    OrdenPagoController operations for OrdenPago
- name: concepto
  description: |
    ConceptoController operations for Concepto
- name: concepto_orden_pago
  description: |
    ConceptoOrdenPagoController operations for ConceptoOrdenPago
